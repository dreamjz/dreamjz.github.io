const n=JSON.parse('{"key":"v-33d6c0fe","path":"/note/golang/open-source-books/the-way-to-go/07/07.2.html","title":"7.2 切片","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"7.2.1 概念","slug":"_7-2-1-概念","link":"#_7-2-1-概念","children":[]},{"level":2,"title":"7.2.2 将切片传给函数","slug":"_7-2-2-将切片传给函数","link":"#_7-2-2-将切片传给函数","children":[]},{"level":2,"title":"7.2.3 使用 make() 创建切片","slug":"_7-2-3-使用-make-创建切片","link":"#_7-2-3-使用-make-创建切片","children":[]},{"level":2,"title":"7.2.4 new() 和 make() 的区别","slug":"_7-2-4-new-和-make-的区别","link":"#_7-2-4-new-和-make-的区别","children":[]},{"level":2,"title":"7.2.5 多维切片","slug":"_7-2-5-多维切片","link":"#_7-2-5-多维切片","children":[]},{"level":2,"title":"7.2.6 bytes 包","slug":"_7-2-6-bytes-包","link":"#_7-2-6-bytes-包","children":[]}],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":1.79,"words":536},"filePathRelative":"note/golang/open-source-books/the-way-to-go/07/07.2.md","excerpt":"<h1> 7.2 切片</h1>\\n<h2> 7.2.1 概念</h2>\\n<ul>\\n<li>\\n<p><strong>切片</strong>(slice) 是对数组的一个连续片段的引用。</p>\\n</li>\\n<li>\\n<p><strong>长度</strong>：切片可索引的长度，可通过<code>len()</code> 获取</p>\\n</li>\\n<li>\\n<p><strong>容量</strong>：切片对应底层数组的长度，可通过<code>cap()</code>获取</p>\\n</li>\\n<li>\\n<p>长度和容量满足不等式: <code>0 &lt;= len(s) &lt;= cap()</code></p>\\n</li>\\n<li>\\n<p>多个切片若底层数组相同，则切片之间的数组是共享的</p>\\n</li>\\n<li>\\n<p><strong>声明</strong>：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">var</span> identifier <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">type</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p>未初始化的切片值为<code>nil</code>, 长度为0</p>\\n</li>\\n<li>\\n<p><strong>初始化</strong>:</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// 通过数组初始化</span>\\n<span class=\\"token keyword\\">var</span> slice <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">type</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>start<span class=\\"token punctuation\\">:</span>end<span class=\\"token punctuation\\">]</span>\\n<span class=\\"token comment\\">// 通过数组常量, 例如</span>\\n<span class=\\"token keyword\\">var</span> slice <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>表示切片由数组的 <code>start</code> 到 <code>end-1</code> 之间的元素构成。\\n<code>[start:end]</code>为切片表达式：</p>\\n<ul>\\n<li><code>[:]</code>:  相当于<code>[0:len(arr)]</code></li>\\n<li><code>[n:]</code>: 相当于<code>[n:len(arr)]</code></li>\\n<li><code>[:m]</code>: 相当于<code>[0:m]</code></li>\\n</ul>\\n</li>\\n</ul>"}');export{n as data};

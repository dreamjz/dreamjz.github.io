import{_ as n,Z as a,$ as s,a3 as e}from"./framework-09afcf0b.js";const o={},c=e(`<h1 id="_11-3-类型断言-如何检测和转换接口变量的类型" tabindex="-1"><a class="header-anchor" href="#_11-3-类型断言-如何检测和转换接口变量的类型" aria-hidden="true">#</a> 11.3 类型断言：如何检测和转换接口变量的类型</h1><p><strong>类型断言</strong>：测试某个时刻，变量<code>varI</code>是否包含类型<code>T</code>的值。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>v <span class="token operator">:=</span> varI<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>varI</code>: 必须是接口变量</li><li><code>v</code>: 转换后的值</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> varI<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>ok</code>: 是否转化成功</li></ul><p>和<code>if</code>搭配使用</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> varI<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),t=[c];function i(l,p){return a(),s("div",null,t)}const u=n(o,[["render",i],["__file","11.3.html.vue"]]);export{u as default};

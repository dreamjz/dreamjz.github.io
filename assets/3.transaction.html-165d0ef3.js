const l=JSON.parse('{"key":"v-7ca42e95","path":"/note/interview/mysql/3.transaction.html","title":"3. 事务","lang":"zh-CN","frontmatter":{"title":"3. 事务","article":false},"headers":[{"level":2,"title":"3.1 事务隔离级别如何实现","slug":"_3-1-事务隔离级别如何实现","link":"#_3-1-事务隔离级别如何实现","children":[{"level":3,"title":"事务的特性","slug":"事务的特性","link":"#事务的特性","children":[]},{"level":3,"title":"InnoDB 如何保证 ACID 属性","slug":"innodb-如何保证-acid-属性","link":"#innodb-如何保证-acid-属性","children":[]},{"level":3,"title":"并发事务出现的问题","slug":"并发事务出现的问题","link":"#并发事务出现的问题","children":[]},{"level":3,"title":"脏读","slug":"脏读","link":"#脏读","children":[]},{"level":3,"title":"不可重复读","slug":"不可重复读","link":"#不可重复读","children":[]},{"level":3,"title":"幻读","slug":"幻读","link":"#幻读","children":[]},{"level":3,"title":"事务的隔离级别","slug":"事务的隔离级别","link":"#事务的隔离级别","children":[]},{"level":3,"title":"当前读","slug":"当前读","link":"#当前读","children":[]},{"level":3,"title":"快照读","slug":"快照读","link":"#快照读","children":[]},{"level":3,"title":"Read View","slug":"read-view","link":"#read-view","children":[]},{"level":3,"title":"事务开启时机","slug":"事务开启时机","link":"#事务开启时机","children":[]},{"level":3,"title":"MVCC","slug":"mvcc","link":"#mvcc","children":[]},{"level":3,"title":"可重复度如何实现","slug":"可重复度如何实现","link":"#可重复度如何实现","children":[]},{"level":3,"title":"读提交如何实现","slug":"读提交如何实现","link":"#读提交如何实现","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}]},{"level":2,"title":"3.2 MySQL 可重复读 可以完全解决幻读么","slug":"_3-2-mysql-可重复读-可以完全解决幻读么","link":"#_3-2-mysql-可重复读-可以完全解决幻读么","children":[{"level":3,"title":"幻读","slug":"幻读-1","link":"#幻读-1","children":[]},{"level":3,"title":"当前读是如何避免幻读的？","slug":"当前读是如何避免幻读的","link":"#当前读是如何避免幻读的","children":[]},{"level":3,"title":"快照读是如何一定程度上避免幻读？","slug":"快照读是如何一定程度上避免幻读","link":"#快照读是如何一定程度上避免幻读","children":[]},{"level":3,"title":"快照读无法完全避免幻读","slug":"快照读无法完全避免幻读","link":"#快照读无法完全避免幻读","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]}],"git":{"updatedTime":1699946055000},"readingTime":{"minutes":22.7,"words":6811},"filePathRelative":"note/interview/mysql/3.transaction.md","excerpt":"<h2> 3.1 事务隔离级别如何实现</h2>\\n<h3> 事务的特性</h3>\\n<ul>\\n<li><strong>原子性（Atomicity）</strong>：一个事务中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节，而且事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样。\\n就好比买一件商品，购买成功时，则给商家付了钱，商品到手；购买失败时，则商品在商家手中，消费者的钱也没花出去。</li>\\n<li><strong>一致性（Consistency）</strong>：是指事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。\\n比如，用户 A 和用户 B 在银行分别有 800 元和 600 元，总共 1400 元，用户 A 给用户 B 转账 200 元，分为两个步骤，从 A 的账户扣除 200 元和对 B 的账户增加 200 元。一致性就是要求上述步骤操作后，最后的结果是用户 A 还有 600 元，用户 B 有 800 元，总共 1400 元，而不会出现用户 A 扣除了 200 元，但用户 B 未增加的情况（该情况，用户 A 和 B 均为 600 元，总共 1200 元）。</li>\\n<li><strong>隔离性（Isolation）</strong>：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致，因为多个事务同时使用相同的数据时，不会相互干扰，每个事务都有一个完整的数据空间，对其他并发事务是隔离的。\\n例如：消费者购买商品这个事务，是不影响其他消费者购买的。</li>\\n<li><strong>持久性（Durability）</strong>：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li>\\n</ul>"}');export{l as data};

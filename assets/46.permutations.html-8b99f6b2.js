const e=JSON.parse('{"key":"v-8355eb16","path":"/leetcode/solution/46.permutations.html","title":"46. Permutations","lang":"zh-CN","frontmatter":{"title":"46. Permutations","date":"2023-09-20T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":2,"title":"1. 回溯法","slug":"_1-回溯法","link":"#_1-回溯法","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1696276197000},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"leetcode/solution/46.permutations.md","localizedDate":"2023年9月20日","excerpt":"<p><a href=\\"https://leetcode.cn/problems/permutations/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">46. 全排列</a></p>\\n<blockquote>\\n<p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [1,2,3]\\n输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 2：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [0,1]\\n输出：[[0,1],[1,0]]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 3：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [1]\\n输出：[[1]]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>提示：</strong></p>\\n<ul>\\n<li><code>1 &lt;= nums.length &lt;= 6</code></li>\\n<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>\\n<li><code>nums</code> 中的所有整数 <strong>互不相同</strong></li>\\n</ul>\\n</blockquote>"}');export{e as data};

import{_ as e,Z as p,$ as o,a0 as n,a1 as a,a2 as t,a4 as c,H as l}from"./framework-d03928c9.js";const i={},u={href:"https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/GeeORM/day5-hooks",target:"_blank",rel:"noopener noreferrer"},r=c(`<h2 id="_1-hook" tabindex="-1"><a class="header-anchor" href="#_1-hook" aria-hidden="true">#</a> 1. Hook</h2><p>Hook(钩子)，主要思想是提前在可能增加功能的地方埋好(预设)一个钩子，当需要重新修改或者增加这个地方的逻辑的时候，把扩展的类或者方法挂载到这个点即可。</p><p>例如：</p><ul><li>Github 支持的 travis 持续集成服务，当有 <code>git push</code> 事件发生时，会触发 travis 拉取新的代码进行构建。</li><li>在IDE 中当按下 <code>Ctrl + s</code> 后，自动格式化代码。</li><li>前端常用的 <code>hot reload</code> 机制，前端代码发生变更时，自动编译打包，通知浏览器自动刷新页面，实现所写即所得</li></ul><p>钩子机制设计的好坏，取决于<strong>扩展点</strong>选择的是否合适。例如对于持续集成来说，代码如果不发生变更，反复构建是没有意义的，因此钩子应设计在代码可能发生变更的地方，比如 MR、PR 合并前后。</p><p>对于 ORM 框架来说，Hook 适合放在 CRUD 操作的<strong>前后</strong>。例如：查询的数据中包含敏感数据，可以在查询后对其进行脱敏后再返回。</p><h2 id="_2-实现" tabindex="-1"><a class="header-anchor" href="#_2-实现" aria-hidden="true">#</a> 2. 实现</h2><p>Hook 需要和结构体绑定，交给用户实现，ORM 框架则在 CRUD 操作中插入这些 hook。</p><p><code>session/hooks.go</code>：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> session

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;geeorm/log&quot;</span>
	<span class="token string">&quot;reflect&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Hooks</span>
<span class="token keyword">const</span> <span class="token punctuation">(</span>
	BeforeQuery  <span class="token operator">=</span> <span class="token string">&quot;BeforeQuery&quot;</span>
	AfterQuery   <span class="token operator">=</span> <span class="token string">&quot;AfterQuery&quot;</span>
	BeforeUpdate <span class="token operator">=</span> <span class="token string">&quot;BeforeUpdate&quot;</span>
	AfterUpdate  <span class="token operator">=</span> <span class="token string">&quot;AfterUpdate&quot;</span>
	BeforeDelete <span class="token operator">=</span> <span class="token string">&quot;BeforeDelete&quot;</span>
	AfterDelete  <span class="token operator">=</span> <span class="token string">&quot;AfterDelete&quot;</span>
	BeforeInsert <span class="token operator">=</span> <span class="token string">&quot;BeforeInsert&quot;</span>
	AfterInsert  <span class="token operator">=</span> <span class="token string">&quot;AfterInsert&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// CallMethod calls the registered hooks</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Session<span class="token punctuation">)</span> <span class="token function">CallMethod</span><span class="token punctuation">(</span>method <span class="token builtin">string</span><span class="token punctuation">,</span> value any<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> fm reflect<span class="token punctuation">.</span>Value
	<span class="token keyword">if</span> value <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fm <span class="token operator">=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">RefTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MethodByName</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		fm <span class="token operator">=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MethodByName</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	param <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>reflect<span class="token punctuation">.</span>Value<span class="token punctuation">{</span>reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">}</span>
	<span class="token keyword">if</span> fm<span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> v <span class="token operator">:=</span> fm<span class="token punctuation">.</span><span class="token function">Call</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">len</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> err<span class="token punctuation">,</span> ok <span class="token operator">:=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Interface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
				log<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>判断当前操作对象<code>value</code>，若为空则默认设置为<code>Session.refTable.Model</code></li><li>获取 hook 方法</li><li>获取 hook 方法的参数，类型为<code>*Session</code></li><li>调用 hook</li></ol><h3 id="_2-1-插入-hook" tabindex="-1"><a class="header-anchor" href="#_2-1-插入-hook" aria-hidden="true">#</a> 2.1 插入 Hook</h3><p>在 CRUD 操作中插入 Hook，例如Find：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Session<span class="token punctuation">)</span> <span class="token function">Find</span><span class="token punctuation">(</span>vals any<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	s<span class="token punctuation">.</span><span class="token function">CallMethod</span><span class="token punctuation">(</span>BeforeQuery<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
	<span class="token operator">...</span>
	<span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token operator">...</span>
		s<span class="token punctuation">.</span><span class="token function">CallMethod</span><span class="token punctuation">(</span>AfterQuery<span class="token punctuation">,</span> dst<span class="token punctuation">.</span><span class="token function">Addr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Interface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		dstSlice<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>reflect<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span>dstSlice<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> rows<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-单元测试" tabindex="-1"><a class="header-anchor" href="#_3-单元测试" aria-hidden="true">#</a> 3. 单元测试</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> session

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;geeorm/log&quot;</span>
	<span class="token string">&quot;testing&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Account <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ID       <span class="token builtin">int</span> <span class="token string">\`geeorm:&quot;PRIMARY KEY&quot;\`</span>
	Password <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span>
	pass <span class="token operator">=</span> <span class="token string">&quot;******&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Account<span class="token punctuation">)</span> <span class="token function">BeforeInsert</span><span class="token punctuation">(</span>s <span class="token operator">*</span>Session<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;before insert&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	a<span class="token punctuation">.</span>ID <span class="token operator">+=</span> <span class="token number">1000</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Account<span class="token punctuation">)</span> <span class="token function">AfterQuery</span><span class="token punctuation">(</span>s <span class="token operator">*</span>Session<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	log<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;after query&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	a<span class="token punctuation">.</span>Password <span class="token operator">=</span> pass
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">TestSession_CallMethod</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token function">newSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Account<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">DropTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">CreateTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>Account<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Account<span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

	u <span class="token operator">:=</span> <span class="token operator">&amp;</span>Account<span class="token punctuation">{</span><span class="token punctuation">}</span>

	err <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> u<span class="token punctuation">.</span>ID <span class="token operator">!=</span> <span class="token number">1001</span> <span class="token operator">||</span> u<span class="token punctuation">.</span>Password <span class="token operator">!=</span> pass <span class="token punctuation">{</span>
		t<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;failed to call after query hooks&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,17),k={href:"https://geektutu.com/post/geeorm-day5.html",target:"_blank",rel:"noopener noreferrer"};function d(v,m){const s=l("ExternalLinkIcon");return p(),o("div",null,[n("p",null,[n("a",u,[a("day5-hooks"),t(s)])]),r,n("ol",null,[n("li",null,[n("a",k,[a("https://geektutu.com/post/geeorm-day5.html"),t(s)])])])])}const f=e(i,[["render",d],["__file","03.5.hook.html.vue"]]);export{f as default};

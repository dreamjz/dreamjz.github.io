const e=JSON.parse('{"key":"v-f8b54880","path":"/note/interview/golang/ans/14-q-syntax.html","title":"判断切片是否相同的两种方式性能比较","lang":"zh-CN","frontmatter":{"title":"判断切片是否相同的两种方式性能比较","article":false},"headers":[{"level":2,"title":"1. 实现","slug":"_1-实现","link":"#_1-实现","children":[{"level":3,"title":"1.1 单元测试","slug":"_1-1-单元测试","link":"#_1-1-单元测试","children":[]}]},{"level":2,"title":"2. Benchmark","slug":"_2-benchmark","link":"#_2-benchmark","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699946055000},"readingTime":{"minutes":2.12,"words":637},"filePathRelative":"note/interview/golang/ans/14-q-syntax.md","excerpt":"<p>比较两个切片可以使用两种方式：</p>\\n<ol>\\n<li>遍历切片比较每个元素，可以判断临界条件以快速失败提高性能</li>\\n<li>使用反射，<code>reflect.DeepEqual(x, y any) bool</code>，因为是通用型函数，并且使用反射获取类型信息，在有性能要求的场景中不建议使用</li>\\n</ol>"}');export{e as data};

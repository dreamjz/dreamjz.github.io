const n=JSON.parse('{"key":"v-fe28ca5c","path":"/blog/golang/re-zero-go-project/7-days-golang/GeeORM.html","title":"GeeORM 笔记总结","lang":"zh-CN","frontmatter":{"title":"GeeORM 笔记总结","date":"2023-10-13T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"1. 核心思想","slug":"_1-核心思想","link":"#_1-核心思想","children":[{"level":3,"title":"1.1 标准库 database/sql","slug":"_1-1-标准库-database-sql","link":"#_1-1-标准库-database-sql","children":[]},{"level":3,"title":"1.2 反射 reflect","slug":"_1-2-反射-reflect","link":"#_1-2-反射-reflect","children":[]}]},{"level":2,"title":"2. 设计","slug":"_2-设计","link":"#_2-设计","children":[{"level":3,"title":"2.1 分级 Log","slug":"_2-1-分级-log","link":"#_2-1-分级-log","children":[]},{"level":3,"title":"2.2 会话 Session","slug":"_2-2-会话-session","link":"#_2-2-会话-session","children":[]},{"level":3,"title":"2.3 Engine","slug":"_2-3-engine","link":"#_2-3-engine","children":[]},{"level":3,"title":"2.4 Dialect","slug":"_2-4-dialect","link":"#_2-4-dialect","children":[]},{"level":3,"title":"2.5 Schema","slug":"_2-5-schema","link":"#_2-5-schema","children":[]},{"level":3,"title":"2.6 Clause","slug":"_2-6-clause","link":"#_2-6-clause","children":[]},{"level":3,"title":"2.7 链式调用","slug":"_2-7-链式调用","link":"#_2-7-链式调用","children":[]},{"level":3,"title":"2.8 Hook","slug":"_2-8-hook","link":"#_2-8-hook","children":[]},{"level":3,"title":"2.9 事务支持","slug":"_2-9-事务支持","link":"#_2-9-事务支持","children":[]},{"level":3,"title":"2.10 数据库迁移","slug":"_2-10-数据库迁移","link":"#_2-10-数据库迁移","children":[]}]},{"level":2,"title":"3. 流程","slug":"_3-流程","link":"#_3-流程","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":7.6,"words":2280},"filePathRelative":"blog/golang/re-zero-go-project/7-days-golang/GeeORM.md","localizedDate":"2023年10月13日","excerpt":"<h2> 1. 核心思想</h2>\\n<h3> 1.1 标准库 <code>database/sql</code></h3>\\n<p>SQL 语句的执行是对标准库方法的封装：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> Session <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tdb       <span class=\\"token operator\\">*</span>sql<span class=\\"token punctuation\\">.</span>DB\\n\\t<span class=\\"token operator\\">...</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token operator\\">...</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span>s <span class=\\"token operator\\">*</span>Session<span class=\\"token punctuation\\">)</span> <span class=\\"token function\\">Exec</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>sql<span class=\\"token punctuation\\">.</span>Result<span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">error</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">defer</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Clear</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Info</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">.</span>sql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> s<span class=\\"token punctuation\\">.</span>sqlVars<span class=\\"token punctuation\\">)</span>\\n\\tres<span class=\\"token punctuation\\">,</span> err <span class=\\"token operator\\">:=</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">DB</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Exec</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">.</span>sql<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> s<span class=\\"token punctuation\\">.</span>sqlVars<span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">if</span> err <span class=\\"token operator\\">!=</span> <span class=\\"token boolean\\">nil</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Error</span><span class=\\"token punctuation\\">(</span>err<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">,</span> err\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

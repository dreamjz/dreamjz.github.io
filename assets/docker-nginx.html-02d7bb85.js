import{_ as i,Y as r,Z as l,$ as n,a0 as e,a1 as s,a2 as c,F as o}from"./framework-d955655f.js";const d={},t=c(`<p>Nginx 是一款面向性能设计的 HTTP 服务器，能反向代理 HTTP，HTTPS 和邮件相关(SMTP，POP3，IMAP)的协议链接。并且提供了负载均衡以及 HTTP 缓存。它的设计充分使用异步事件模型，削减上下文调度的开销，提高服务器并发能力。采用了模块化设计，提供了丰富模块的第三方模块</p><p>本文介绍 docker 如何部署 nginx</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><p>在 docker hub 查找镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> search nginx
NAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
nginx                             Official build of Nginx.                        <span class="token number">15728</span>     <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
jwilder/nginx-proxy               Automated Nginx reverse proxy <span class="token keyword">for</span> <span class="token function">docker</span> con…   <span class="token number">2088</span>                 <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
richarvey/nginx-php-fpm           Container running Nginx + PHP-FPM capable of…   <span class="token number">818</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里使用官方镜像，下载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container run <span class="token parameter variable">--name</span> my-nginx <span class="token parameter variable">-d</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">-p</span> <span class="token number">8080</span>:80 nginx /bin/bash
24167b75db40bb32a59699f4c799b1c5009cad5853712caa7fe68ddafb85125d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--name</code>:指定容器名</li><li><code>-p</code>: host_port:container_port,主机端口和容器端口映射</li><li><code>--rm</code>:容器停止后文件自动删除</li></ul><p>这里的<code>docker container run</code> 和<code>docker run</code>是一样的，<code>docker container run</code>为 docker 1.13 进行 CLI 重构时新增</p><p>查看容器日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> logs my-nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在浏览器访问<code>localhost:8080</code>,可以看到 nginx 的初始页面了</p><h2 id="挂载本地文件" tabindex="-1"><a class="header-anchor" href="#挂载本地文件" aria-hidden="true">#</a> 挂载本地文件</h2><p>资源文件都放在容器里面，不方便修改，可以将本地文件挂载到容器中</p><p>在本地创建目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> ~/nginx/app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在<code>app</code>里创建一个 html 文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;h1&gt;Hello World&lt;/h1&gt;&#39;</span> <span class="token operator">&gt;</span> index.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动容器，这次加上<code>-v host_dir:container_dir</code>,挂载本地文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker container run \\
-d \\
-p 8080:80 \\
--rm \\
--name mynginx \\
--volume $PWD:/usr/share/nginx/html \\
nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器访问<code>localhost:8080</code>,可以看到 Hello World 了</p><h2 id="拷贝配置" tabindex="-1"><a class="header-anchor" href="#拷贝配置" aria-hidden="true">#</a> 拷贝配置</h2><p>将容器里面的 Nginx 配置文件拷贝到本地：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> container <span class="token function">cp</span> mynginx:/etc/nginx/ ~/nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>名称改为<code>conf</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mv</span> nginx conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>停止<code>mynginx</code>挂载配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> stop mynginx
mynginx
$ <span class="token function">docker</span> container run <span class="token punctuation">\\</span>
 <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
 <span class="token parameter variable">-p</span> <span class="token number">8080</span>:80 <span class="token punctuation">\\</span>
 <span class="token parameter variable">--rm</span> <span class="token punctuation">\\</span>
 <span class="token parameter variable">--name</span> mynginx <span class="token punctuation">\\</span>
 <span class="token parameter variable">-v</span> <span class="token environment constant">$HOME</span>/nginx/conf:/etc/nginx <span class="token punctuation">\\</span>
 <span class="token parameter variable">-v</span> <span class="token environment constant">$HOME</span>/nginx/app:/usr/share/nginx/html <span class="token punctuation">\\</span>
 nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在浏览器访问<code>localhost:8080</code>,可以看到 Hello World 了</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,32),p={href:"https://github.com/jaywcjlove/docker-tutorial/blob/master/docker/nginx.md",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/jaywcjlove/nginx-tutorial",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.ruanyifeng.com/blog/2018/02/nginx-docker.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.docker.com/engine/reference/commandline/run/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://stackoverflow.com/questions/51247609/what-is-the-difference-between-docker-run-and-docker-container-run",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.docker.com/blog/whats-new-in-docker-1-13/",target:"_blank",rel:"noopener noreferrer"};function g(k,x){const a=o("ExternalLinkIcon");return r(),l("div",null,[t,n("ol",null,[n("li",null,[n("p",null,[n("a",p,[e("Docker 部署 nginx"),s(a)]),e(" github repo")])]),n("li",null,[n("p",null,[n("a",u,[e("nginx-tutorial"),s(a)]),e(" github repo")])]),n("li",null,[n("p",null,[n("a",v,[e("Nginx 容器教程"),s(a)]),e(" 阮一峰")])]),n("li",null,[n("p",null,[n("a",m,[e("docker docs"),s(a)]),e(" docker docs/docker run")])]),n("li",null,[n("p",null,[n("a",b,[e("What is the difference between docker run and docker container run"),s(a)]),e(" stackoverflow")])]),n("li",null,[n("p",null,[n("a",h,[e("Introducing Docker 1.13"),s(a)])])])])])}const _=i(d,[["render",g],["__file","docker-nginx.html.vue"]]);export{_ as default};

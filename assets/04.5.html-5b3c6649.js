const e=JSON.parse('{"key":"v-523b0560","path":"/reading/algorithm/offer_oriented/AL_DS/04_List/04.5.html","title":"4.5 双向链表和循环链表","lang":"zh-CN","frontmatter":{"title":"4.5 双向链表和循环链表","date":"2023-09-10T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":2,"title":"4.5.1 问题28: 展平多级双向链表","slug":"_4-5-1-问题28-展平多级双向链表","link":"#_4-5-1-问题28-展平多级双向链表","children":[{"level":3,"title":"4.5.1.1 分析","slug":"_4-5-1-1-分析","link":"#_4-5-1-1-分析","children":[]},{"level":3,"title":"4.5.1.2 题解","slug":"_4-5-1-2-题解","link":"#_4-5-1-2-题解","children":[]}]},{"level":2,"title":"4.5.2 问题29: 排序的循环链表","slug":"_4-5-2-问题29-排序的循环链表","link":"#_4-5-2-问题29-排序的循环链表","children":[{"level":3,"title":"4.5.2.1 分析","slug":"_4-5-2-1-分析","link":"#_4-5-2-1-分析","children":[]},{"level":3,"title":"4.5.2.2 题解","slug":"_4-5-2-2-题解","link":"#_4-5-2-2-题解","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1694451412000},"readingTime":{"minutes":4.81,"words":1443},"filePathRelative":"reading/algorithm/offer_oriented/AL_DS/04_List/04.5.md","localizedDate":"2023年9月10日","excerpt":"<p><strong>双向链表</strong>中每个节点包含指向下一节点和上一节点的指针, 可以从两个方向遍历.</p>\\n<p><strong>循环链表</strong>的尾节点和头节点相连形成环. 因为可以从任意节点出发到达任意节点, 所以循环链表的任意节点都可以是头节点.</p>\\n<h2> 4.5.1 问题28: 展平多级双向链表</h2>\\n<p><a href=\\"https://leetcode.cn/problems/Qv1Da2/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LCR 028. 扁平化多级双向链表</a></p>\\n<blockquote>\\n<p>多级双向链表中，除了指向下一个节点和前一个节点指针之外，它还有一个子链表指针，可能指向单独的双向链表。这些子列表也可能会有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。</p>\\n<p>给定位于列表第一级的头节点，请扁平化列表，即将这样的多级双向链表展平成普通的双向链表，使所有结点出现在单级双链表中。</p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\\n输出：[1,2,3,7,8,11,12,9,10,4,5,6]\\n解释：\\n\\n输入的多级列表如下图所示：\\n\\n\\n\\n扁平化后的链表如下图：\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 2：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：head = [1,2,null,3]\\n输出：[1,3,2]\\n解释：\\n\\n输入的多级列表如下图所示：\\n\\n  1---2---NULL\\n  |\\n  3---NULL\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 3：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：head = []\\n输出：[]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>如何表示测试用例中的多级链表？</strong></p>\\n<p>以 <strong>示例 1</strong> 为例：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code> 1---2---3---4---5---6--NULL\\n         |\\n         7---8---9---10--NULL\\n             |\\n             11--12--NULL\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>序列化其中的每一级之后：</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>[1,2,3,4,5,6,null]\\n[7,8,9,10,null]\\n[11,12,null]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>为了将每一级都序列化到一起，我们需要每一级中添加值为 null 的元素，以表示没有节点连接到上一级的上级节点。</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>[1,2,3,4,5,6,null]\\n[null,null,7,8,9,10,null]\\n[null,11,12,null]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>合并所有序列化结果，并去除末尾的 null 。</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><p><strong>提示：</strong></p>\\n<ul>\\n<li>节点数目不超过 <code>1000</code></li>\\n<li><code>1 &lt;= Node.val &lt;= 10^5</code></li>\\n</ul>\\n</blockquote>"}');export{e as data};

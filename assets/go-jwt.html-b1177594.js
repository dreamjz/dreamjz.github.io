const e=JSON.parse('{"key":"v-385e0822","path":"/note/golang/go-jwt.html","title":"Go jwt","lang":"zh-CN","frontmatter":{"title":"Go jwt","date":"2021-12-03T00:00:00.000Z","category":["golang","docker"],"tag":["go-jwt","jwt"],"timeline":true,"article":false},"headers":[{"level":2,"title":"1 跨域认证问题","slug":"_1-跨域认证问题","link":"#_1-跨域认证问题","children":[{"level":3,"title":"1.1 传统 session 认证的问题","slug":"_1-1-传统-session-认证的问题","link":"#_1-1-传统-session-认证的问题","children":[]},{"level":3,"title":"1.2 基于 Token 的鉴权机制","slug":"_1-2-基于-token-的鉴权机制","link":"#_1-2-基于-token-的鉴权机制","children":[]}]},{"level":2,"title":"2. JWT","slug":"_2-jwt","link":"#_2-jwt","children":[{"level":3,"title":"2.1 What is JSON Web Token","slug":"_2-1-what-is-json-web-token","link":"#_2-1-what-is-json-web-token","children":[]},{"level":3,"title":"2.2 When should you use JSON Web Tokens","slug":"_2-2-when-should-you-use-json-web-tokens","link":"#_2-2-when-should-you-use-json-web-tokens","children":[]},{"level":3,"title":"2.3 What is the JSON Web Token structure","slug":"_2-3-what-is-the-json-web-token-structure","link":"#_2-3-what-is-the-json-web-token-structure","children":[]},{"level":3,"title":"2.4 How do JSON Web Tokens work","slug":"_2-4-how-do-json-web-tokens-work","link":"#_2-4-how-do-json-web-tokens-work","children":[]}]},{"level":2,"title":"3. Jwt-go","slug":"_3-jwt-go","link":"#_3-jwt-go","children":[{"level":3,"title":"3.1 目录结构","slug":"_3-1-目录结构","link":"#_3-1-目录结构","children":[]},{"level":3,"title":"3.2 Login","slug":"_3-2-login","link":"#_3-2-login","children":[]},{"level":3,"title":"3.3 Loopholes","slug":"_3-3-loopholes","link":"#_3-3-loopholes","children":[]},{"level":3,"title":"3.4 Using redis","slug":"_3-4-using-redis","link":"#_3-4-using-redis","children":[]},{"level":3,"title":"3.5 Verify Token","slug":"_3-5-verify-token","link":"#_3-5-verify-token","children":[]},{"level":3,"title":"3.6 Logout","slug":"_3-6-logout","link":"#_3-6-logout","children":[]},{"level":3,"title":"3.7 Refreshing token","slug":"_3-7-refreshing-token","link":"#_3-7-refreshing-token","children":[]}]},{"level":2,"title":"4. Deploy to Docker","slug":"_4-deploy-to-docker","link":"#_4-deploy-to-docker","children":[{"level":3,"title":"4.1 Proxy","slug":"_4-1-proxy","link":"#_4-1-proxy","children":[]},{"level":3,"title":"4.2 DockerFile","slug":"_4-2-dockerfile","link":"#_4-2-dockerfile","children":[]},{"level":3,"title":"4.3 Docker Redis","slug":"_4-3-docker-redis","link":"#_4-3-docker-redis","children":[]},{"level":3,"title":"4.4 Container Connection","slug":"_4-4-container-connection","link":"#_4-4-container-connection","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943930000},"readingTime":{"minutes":17.8,"words":5341},"filePathRelative":"note/golang/go-jwt.md","localizedDate":"2021年12月3日","excerpt":"<h2> 1 跨域认证问题</h2>\\n<p>传统的 session 的认证流程如下:</p>\\n<ol>\\n<li>用户向服务器发送用户名和密码</li>\\n<li>服务器验证通过后,将相关信息保存至 session 中</li>\\n<li>服务器将 session ID 返回给客户端并存储至 cookie 中</li>\\n<li>用户请求时会附上 session ID,服务器会根据 session ID 来得知用户身份</li>\\n</ol>"}');export{e as data};

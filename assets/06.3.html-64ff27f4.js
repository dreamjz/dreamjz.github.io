const e=JSON.parse('{"key":"v-38c5b9fd","path":"/note/golang/open-source-books/the-way-to-go/06/06.3.html","title":"6.3 传递变长参数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"相同参数类型","slug":"相同参数类型","link":"#相同参数类型","children":[]},{"level":2,"title":"不同参数类型","slug":"不同参数类型","link":"#不同参数类型","children":[]}],"git":{"updatedTime":1694632375000},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"note/golang/open-source-books/the-way-to-go/06/06.3.md","excerpt":"<h1> 6.3 传递变长参数</h1>\\n<p>若函数最后一个参数为<code>...type</code> 的形式，那么函数可以处理<strong>变长参数</strong>，长度可以为0，这样的函数被称为<strong>变参函数</strong>。</p>\\n<h2> 相同参数类型</h2>\\n<p>当变长参数类型相同时，可以：</p>\\n<ul>\\n<li>直接传入多个参数：<code>f(p1, p2, p3)</code></li>\\n<li>参数放在切片中，以<code>slice...</code>的形式传入</li>\\n</ul>\\n<p>例：TODO: <a href=\\"https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_3_varnumpar.go\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">06_3_varnumpar.go</a></p>"}');export{e as data};

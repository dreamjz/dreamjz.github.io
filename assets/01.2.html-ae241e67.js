const e=JSON.parse('{"key":"v-3cf5ac88","path":"/reading/nosql/The_Design_and_Implementation_of_Redis/01.2.html","title":"链表","lang":"zh-CN","frontmatter":{"title":"链表","date":"2022-03-06T00:00:00.000Z","category":["Redis"],"tag":["Linked List"],"timeline":true},"headers":[{"level":2,"title":"2.1 链表和链表节点的实现","slug":"_2-1-链表和链表节点的实现","link":"#_2-1-链表和链表节点的实现","children":[]},{"level":2,"title":"2.2 总结","slug":"_2-2-总结","link":"#_2-2-总结","children":[]}],"readingTime":{"minutes":2.5,"words":751},"filePathRelative":"reading/nosql/The_Design_and_Implementation_of_Redis/01.2.md","localizedDate":"2022年3月6日","excerpt":"<p>链表提供了高效的节点重排能力，顺序性的节点访问方式以及可以通过增删节点来灵活调整链表的长度。</p>\\n<p>当一个列表键包含了数量较多或元素都是长度较长的字符串时，Redis 会使用链表作为其底层实现。</p>\\n<p>除了列表键之外，发布与订阅、慢查询、监视器等功能也用到了链表，Redis 服务器本身还使用链表来保存多个客户端的状态信息，以及使用链表来构建客户端输出缓冲区 (output buffer)。</p>\\n<h2> 2.1 链表和链表节点的实现</h2>\\n<p>每个链表节点使用一个 <a href=\\"https://github.com/redis/redis/blob/d96f47cf06b1cc24b82109e0e87ac5428517525a/src/adlist.h\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">adlist.h/listNode</a> 结构表示：</p>"}');export{e as data};

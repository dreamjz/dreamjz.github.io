const e=JSON.parse('{"key":"v-77b5ddf5","path":"/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.1.html","title":"3.1 Golang 数组实现原理","lang":"zh-CN","frontmatter":{"title":"3.1 Golang 数组实现原理","date":"2022-03-24T00:00:00.000Z","category":["golang"],"tag":["array"],"timeline":true},"headers":[{"level":2,"title":"3.1.1 概述","slug":"_3-1-1-概述","link":"#_3-1-1-概述","children":[]},{"level":2,"title":"3.1.2 初始化","slug":"_3-1-2-初始化","link":"#_3-1-2-初始化","children":[{"level":3,"title":"上限推导","slug":"上限推导","link":"#上限推导","children":[]},{"level":3,"title":"语句转换","slug":"语句转换","link":"#语句转换","children":[]}]},{"level":2,"title":"3.1.3 访问和赋值","slug":"_3-1-3-访问和赋值","link":"#_3-1-3-访问和赋值","children":[]},{"level":2,"title":"3.1.4 小结","slug":"_3-1-4-小结","link":"#_3-1-4-小结","children":[]},{"level":2,"title":"3.1.5 延伸阅读","slug":"_3-1-5-延伸阅读","link":"#_3-1-5-延伸阅读","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1682725586000},"readingTime":{"minutes":9.61,"words":2882},"filePathRelative":"note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.1.md","localizedDate":"2022年3月24日","excerpt":"<h2> 3.1.1 概述</h2>\\n<p>数组是由相同类型元素的集合组成的数据结构，计算机会为数组分配一块连续的内存来保存其中的元素，我们可以利用数组中的元素的索引快速访问特定元素，常见的数组多为一维线性数组，而多维数组在数值和图形计算领域有比较常见的应用。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/2019-02-20-3D-array.jpg\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{e as data};

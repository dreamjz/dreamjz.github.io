import{_ as p,Z as o,$ as c,a0 as n,a1 as a,a2 as t,a4 as e,H as i}from"./framework-d03928c9.js";const l={},u=e('<h2 id="_1-中间件-middleware" tabindex="-1"><a class="header-anchor" href="#_1-中间件-middleware" aria-hidden="true">#</a> 1. 中间件 Middleware</h2><p>中间件(middleware)，是非业务的技术类组件。</p><p>Web 框架无法实现所有的业务功能，因此可以提供一个插件，允许用户自定义功能，嵌入到框架之中。</p><p>设计一个中间件有两个关键点：</p><ol><li>插入点：若插入点过于底层，中间件逻辑将变得复杂；若插入点离用户接口太近，和用户直接在处理函数中直接调用相比优势不大</li><li>中间件的输入：输入的参数决定了系统的扩展能力，若参数太少，会降低可扩展性</li></ol><h3 id="_1-1-设计" tabindex="-1"><a class="header-anchor" href="#_1-1-设计" aria-hidden="true">#</a> 1.1 设计</h3><p>插入点和输入：</p><ol><li>输入：<code>Context</code>对象</li><li>插入点：<code>Context</code>初始化之后</li></ol><p>功能：</p><ol><li>中间件应用于<strong>路由分组</strong>之上，子分组共享父母分组的中间件，每个分组可以使用独有的中间件</li><li>中间件可以在调用<code>HandlerFunc</code>之前或之后进行某些操作</li><li>多个中间件可以按次序调用</li></ol><h2 id="_2-实现" tabindex="-1"><a class="header-anchor" href="#_2-实现" aria-hidden="true">#</a> 2. 实现</h2>',11),r={href:"https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day5-middleware",target:"_blank",rel:"noopener noreferrer"},d=e(`<p>项目结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DAY5-MIDDLEWARE
│  go.mod
│  go.work
│  main.go
│
└─gee
        context.go
        gee.go
        go.mod
        logger.go
        router.go
        router_group.go
        router_test.go
        trie.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-context" tabindex="-1"><a class="header-anchor" href="#_2-1-context" aria-hidden="true">#</a> 2.1 Context</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Context <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Writer http<span class="token punctuation">.</span>ResponseWriter
    Req    <span class="token operator">*</span>http<span class="token punctuation">.</span>Request
    <span class="token comment">// Request info</span>
    Path   <span class="token builtin">string</span>
    Method <span class="token builtin">string</span>
    Params <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token comment">// Dynamic route parameters</span>
    <span class="token comment">// Response info</span>
    StatusCode <span class="token builtin">int</span>
    <span class="token comment">// Middleware</span>
    handlers <span class="token punctuation">[</span><span class="token punctuation">]</span>HandlerFunc
    index    <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">newContext</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token operator">*</span>Context <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>Context<span class="token punctuation">{</span>
		Writer<span class="token punctuation">:</span> w<span class="token punctuation">,</span>
		Req<span class="token punctuation">:</span>    req<span class="token punctuation">,</span>
		Path<span class="token punctuation">:</span>   req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
		Method<span class="token punctuation">:</span> req<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
		index<span class="token punctuation">:</span>  <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>handlers</code>：中间件/处理函数列表</li><li><code>index</code>：当前执行的函数，初始值 -1</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	c<span class="token punctuation">.</span>index<span class="token operator">++</span>
	n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>handlers<span class="token punctuation">)</span>
	<span class="token keyword">for</span> c<span class="token punctuation">.</span>index <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>c<span class="token punctuation">.</span>index<span class="token punctuation">]</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span>index<span class="token operator">++</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">Fail</span><span class="token punctuation">(</span>code <span class="token builtin">int</span><span class="token punctuation">,</span> errMsg <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	c<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>handlers<span class="token punctuation">)</span>
	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> errMsg<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Next</code>: 调用下一个处理函数/中间件</li><li><code>Fail</code>：修改<code>c.index</code>跳过后序的中间件/处理函数的执行</li></ul><h3 id="_2-2-gee" tabindex="-1"><a class="header-anchor" href="#_2-2-gee" aria-hidden="true">#</a> 2.2 gee</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>engine <span class="token operator">*</span>Engine<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> middlewares <span class="token punctuation">[</span><span class="token punctuation">]</span>HandlerFunc
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> group <span class="token operator">:=</span> <span class="token keyword">range</span> engine<span class="token punctuation">.</span>groups <span class="token punctuation">{</span>
		<span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> group<span class="token punctuation">.</span>prefix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			middlewares <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>middlewares<span class="token punctuation">,</span> group<span class="token punctuation">.</span>middlewares<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	c <span class="token operator">:=</span> <span class="token function">newContext</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> req<span class="token punctuation">)</span>
	c<span class="token punctuation">.</span>handlers <span class="token operator">=</span> middlewares
	engine<span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>获取分组的中间件列表</li><li>添加至当前的 Context 的<code>handlers</code>中</li><li>调用<code>engine.router.handle</code></li></ul><h3 id="_2-3-router" tabindex="-1"><a class="header-anchor" href="#_2-3-router" aria-hidden="true">#</a> 2.3 router</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>router<span class="token punctuation">)</span> <span class="token function">handle</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    n<span class="token punctuation">,</span> params <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">getRoute</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Method<span class="token punctuation">,</span> c<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
    <span class="token keyword">var</span> handler HandlerFunc
    <span class="token keyword">if</span> n <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
       c<span class="token punctuation">.</span>Params <span class="token operator">=</span> params
       key <span class="token operator">:=</span> c<span class="token punctuation">.</span>Method <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> n<span class="token punctuation">.</span>pattern
       handler <span class="token operator">=</span> r<span class="token punctuation">.</span>handlers<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       handler <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">,</span> <span class="token string">&quot;404 NOT FOUND: %s\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    c<span class="token punctuation">.</span>handlers <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>handlers<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>获取当前请求对应的处理函数，添加至<code>handlers</code>末尾</li><li>调用<code>c.Next()</code>，开始执行<code>handlers</code>函数列表</li></ul><h3 id="_2-4-logger" tabindex="-1"><a class="header-anchor" href="#_2-4-logger" aria-hidden="true">#</a> 2.4 logger</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> gee

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;[%d] %s in %vms&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span> c<span class="token punctuation">.</span>Req<span class="token punctuation">.</span>RequestURI<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Milliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>调用下一个函数前，获取当前时间</li><li>调用<code>c.Next()</code>等待其他的函数执行</li><li>统计执行时间</li></ul><h2 id="_3-demo" tabindex="-1"><a class="header-anchor" href="#_3-demo" aria-hidden="true">#</a> 3. Demo</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;gee&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gee<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gee<span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;&lt;h1&gt;Index Page&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	v1 <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/v1&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;&lt;h1&gt;Welcome v1&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

		v1<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;Hello %s, you&#39;re at %s\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	v2 <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/v2&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		v2<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;Hello %s, you&#39;re at %s\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>

		m1 <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Before v2 middleware#1&quot;</span><span class="token punctuation">)</span>
			c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;After v2 middleware#1&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		m2 <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Before v2 middleware#2&quot;</span><span class="token punctuation">)</span>
			c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;After v2 middleware#2&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		v2<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> m2<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8000&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>m1,m2</code>：仅作用在<code>v2</code>分组上，并打印执行信息</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http://localhost:8000/v2/hello/alice
Hello alice, you&#39;re at /v2/hello/alice
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> log:
<span class="token number">2023</span>/10/10 <span class="token number">11</span>:00:53 Before v2 middleware<span class="token comment">#1</span>
<span class="token number">2023</span>/10/10 <span class="token number">11</span>:00:53 Before v2 middleware<span class="token comment">#2</span>
<span class="token number">2023</span>/10/10 <span class="token number">11</span>:00:53 After v2 middleware<span class="token comment">#2</span>
<span class="token number">2023</span>/10/10 <span class="token number">11</span>:00:53 After v2 middleware<span class="token comment">#1</span>
<span class="token number">2023</span>/10/10 <span class="token number">11</span>:00:53 <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span> /v2/hello/alice <span class="token keyword">in</span> 0ms
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,21),k={href:"https://geektutu.com/post/gee-day5.html",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const s=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[a("https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day5-middleware"),t(s)])]),d,n("ol",null,[n("li",null,[n("a",k,[a("https://geektutu.com/post/gee-day5.html"),t(s)])])])])}const h=p(l,[["render",v],["__file","01.5.middleware.html.vue"]]);export{h as default};

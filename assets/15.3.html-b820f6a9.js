const e=JSON.parse(`{"key":"v-62da8a7e","path":"/reading/algorithm/offer_oriented/AL_DS/15-graph/15.3.html","title":"15.3 拓扑排序","lang":"zh-CN","frontmatter":{"title":"15.3 拓扑排序","date":"2023-09-17T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":2,"title":"15.3.1 Kahn's algorithm","slug":"_15-3-1-kahn-s-algorithm","link":"#_15-3-1-kahn-s-algorithm","children":[]},{"level":2,"title":"15.3.2 问题113: 课程排序","slug":"_15-3-2-问题113-课程排序","link":"#_15-3-2-问题113-课程排序","children":[{"level":3,"title":"15.3.2.1 分析&题解","slug":"_15-3-2-1-分析-题解","link":"#_15-3-2-1-分析-题解","children":[]}]},{"level":2,"title":"15.3.3 问题114: 外星文字典","slug":"_15-3-3-问题114-外星文字典","link":"#_15-3-3-问题114-外星文字典","children":[{"level":3,"title":"15.3.3.1 分析&题解","slug":"_15-3-3-1-分析-题解","link":"#_15-3-3-1-分析-题解","children":[]}]},{"level":2,"title":"15.3.4 问题115: 重建序列","slug":"_15-3-4-问题115-重建序列","link":"#_15-3-4-问题115-重建序列","children":[{"level":3,"title":"15.3.4.1 分析&题解","slug":"_15-3-4-1-分析-题解","link":"#_15-3-4-1-分析-题解","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1694989466000},"readingTime":{"minutes":7.85,"words":2354},"filePathRelative":"reading/algorithm/offer_oriented/AL_DS/15-graph/15.3.md","localizedDate":"2023年9月17日","excerpt":"<blockquote>\\n<p>In <a href=\\"https://en.wikipedia.org/wiki/Computer_science\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">computer science</a>, a <strong>topological sort</strong> or <strong>topological ordering</strong> of a <a href=\\"https://en.wikipedia.org/wiki/Directed_graph\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">directed graph</a> is a <a href=\\"https://en.wikipedia.org/wiki/Total_order\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">linear ordering</a> of its <a href=\\"https://en.wikipedia.org/wiki/Vertex_(graph_theory)\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vertices</a> such that for every directed edge <em>uv</em> from vertex <em>u</em> to vertex <em>v</em>, <em>u</em> comes before <em>v</em> in the ordering.</p>\\n<p>For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks.</p>\\n</blockquote>"}`);export{e as data};

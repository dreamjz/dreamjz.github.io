import{_ as e,X as p,Y as o,Z as n,$ as s,a0 as t,a1 as i,F as c}from"./framework-8cb7ec75.js";const l={},u=i(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>ini是windows上常用的配置文件格式。MySQL的Windows版本就是使用ini格式存储配置的。<code>go-ini</code>是Golang中用于操作ini文件的三方库</p><h3 id="ini文件简介" tabindex="-1"><a class="header-anchor" href="#ini文件简介" aria-hidden="true">#</a> ini文件简介</h3><p>.ini 文件是Initialization File的缩写，即初始化文件 ，是windows的系统配置文件所采用的存储格式</p><h4 id="文件格式" tabindex="-1"><a class="header-anchor" href="#文件格式" aria-hidden="true">#</a> 文件格式</h4><p>ini文件由节、键、值组成,注释使用<code>;</code></p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">; commnet line</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">section</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">key1</span><span class="token punctuation">=</span><span class="token value attr-value">value1</span>
<span class="token key attr-name">key2</span><span class="token punctuation">=</span><span class="token value attr-value">value2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快速开始-quick-start" tabindex="-1"><a class="header-anchor" href="#快速开始-quick-start" aria-hidden="true">#</a> 快速开始 quick start</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go get -u gopkg.in/ini.v1 v1.63.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">; config.ini</span>
<span class="token key attr-name">app_name</span> <span class="token punctuation">=</span> <span class="token value attr-value">awesome web</span>

<span class="token comment">; possible values: DEBUG, INFO, WARNING, ERROR, FATAL</span>
<span class="token key attr-name">log_level</span> <span class="token punctuation">=</span> <span class="token value attr-value">DEBUG</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysql</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">3306</span>
<span class="token key attr-name">user</span> <span class="token punctuation">=</span> <span class="token value attr-value">u</span>
<span class="token key attr-name">password</span> <span class="token punctuation">=</span> <span class="token value attr-value">123456</span>
<span class="token key attr-name">database</span> <span class="token punctuation">=</span> <span class="token value attr-value">awesome</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">redis</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">ip</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">6381</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/config.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config error &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;App name:&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;app_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Log level:&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;log_level&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Mysql ip:&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	mysqlPort<span class="token punctuation">,</span> err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>mysqlPort<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Redis ip:&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	redisPort<span class="token punctuation">,</span> err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>redisPort<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
App name: awesome web
Log level: DEBUG
Mysql ip: <span class="token number">127.0</span>.0.1
<span class="token number">3306</span>
Redis ip: <span class="token number">127.0</span>.0.1
<span class="token number">6381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在ini文件中，每个键值对占用一行，中间使用<code>=</code>分隔。<code>;</code>开头为注释，文件内容以<code>section</code>组织，<code>section</code>以<code>[section_name]</code>开始，下一个<code>section</code>结束。所有的section前的内容属于默认section</p><p>使用<code>go-ini</code>读取配置文件步骤如下：</p><ul><li>首先调用<code>init.load</code>加载文件，获取配置对象<code>config</code>(类型<code>ini/File</code>)</li><li>之后调用<code>Section</code>方法获取section，默认section名为&quot;&quot;,也可使用<code>ini.DefaultSection</code></li><li>调用<code>Key</code>方法获取key(类型<code>ini/Key</code>)对象</li><li>根据value的类型调用不同的方法获取值，如<code>String</code>,<code>Int</code> 等</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>config.Section(&quot;section_name&quot;).Key(&quot;key_name&quot;).[Value(),String(),Int()...]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置文件中存储的均为字符串，故<code>String()</code>仅返回值；若类型为<code>int/uint/float64</code>时，转换可能失败，故<code>Int()/Uint()/Float64()</code>返回值和error</p><h2 id="musttype-便捷方法" tabindex="-1"><a class="header-anchor" href="#musttype-便捷方法" aria-hidden="true">#</a> MustType 便捷方法</h2><p>若每次取值需要进行错误判断，那么Code将会变得繁琐。为此，<code>go-ini</code>也提供对应的<code>MustType</code>方法，这种方法仅返回一个值。同时可接收变长参数，若无法进行类型转换，取参数列表中的第一个返回</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">; config_2.ini</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">redis</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">port_6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/config_2.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;read config error :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Before call MustType&quot;</span><span class="token punctuation">)</span>
	port<span class="token punctuation">,</span> err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;port:&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Call MustType&quot;</span><span class="token punctuation">)</span>
	port <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MustInt</span><span class="token punctuation">(</span><span class="token number">6379</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;port:&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span>
	port<span class="token punctuation">,</span> err <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;After call MustType&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;port:&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
Before call MustType
strconv.ParseInt: parsing <span class="token string">&quot;port_6379&quot;</span><span class="token builtin class-name">:</span> invalid syntax
port: <span class="token number">0</span>
Call MustType
port: <span class="token number">6379</span>
After call MustType
port: <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一次调用<code>Int</code>方法返回错误，在调用<code>MustInt</code>将参数设置为6379之后，再次调用<code>Int</code>返回6379</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// gopkg.in/ini.v1/key.go</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>k <span class="token operator">*</span>Key<span class="token punctuation">)</span> <span class="token function">MustInt</span><span class="token punctuation">(</span>defaultVal <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
  val<span class="token punctuation">,</span> err <span class="token operator">:=</span> k<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>defaultVal<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    k<span class="token punctuation">.</span>value <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">FormatInt</span><span class="token punctuation">(</span><span class="token function">int64</span><span class="token punctuation">(</span>defaultVal<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> defaultVal<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> val
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="section-操作" tabindex="-1"><a class="header-anchor" href="#section-操作" aria-hidden="true">#</a> Section 操作</h2><h3 id="获取信息" tabindex="-1"><a class="header-anchor" href="#获取信息" aria-hidden="true">#</a> 获取信息</h3><p>在加载配置之后，可以通过<code>Sections</code>获取所有sectionm,<code>SectionStrings</code>方法获取所有section name.</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/config.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Sections:%#v\\n\\n&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Sections</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Section names:%v\\n\\n&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">SectionStrings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	newSection <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;new_section&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;New section:%#v\\n\\n&quot;</span><span class="token punctuation">,</span> newSection<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Section names:%v\\n\\n&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">SectionStrings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go
Sections:<span class="token punctuation">[</span><span class="token punctuation">]</span>*ini.Section<span class="token punctuation">{</span><span class="token punctuation">(</span>*ini.Section<span class="token punctuation">)</span><span class="token punctuation">(</span>0xc00011a620<span class="token punctuation">)</span>, <span class="token punctuation">(</span>*ini.Section<span class="token punctuation">)</span><span class="token punctuation">(</span>0xc00011a770<span class="token punctuation">)</span>, <span class="token punctuation">(</span>*ini.Section<span class="token punctuation">)</span><span class="token punctuation">(</span>0xc00011aa10<span class="token punctuation">)</span><span class="token punctuation">}</span>

Section names:<span class="token punctuation">[</span>DEFAULT mysql redis<span class="token punctuation">]</span>

New section:<span class="token operator">&amp;</span>ini.Section<span class="token punctuation">{</span>f:<span class="token punctuation">(</span>*ini.File<span class="token punctuation">)</span><span class="token punctuation">(</span>0xc00012c000<span class="token punctuation">)</span>, Comment:<span class="token string">&quot;&quot;</span>, name:<span class="token string">&quot;new_section&quot;</span>, keys:map<span class="token punctuation">[</span>string<span class="token punctuation">]</span>*ini.Key<span class="token punctuation">{</span><span class="token punctuation">}</span>, keyList:<span class="token punctuation">[</span><span class="token punctuation">]</span>string<span class="token punctuation">{</span><span class="token punctuation">}</span>, keysHash:map<span class="token punctuation">[</span>string<span class="token punctuation">]</span>string<span class="token punctuation">{</span><span class="token punctuation">}</span>, isRawSection:false, rawBody:<span class="token string">&quot;&quot;</span><span class="token punctuation">}</span>

Section names:<span class="token punctuation">[</span>DEFAULT mysql redis new_section<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用<code>Section(name)</code>获取以name为名的section，若此section不存在，则自动创建一个section返回.之后调用<code>SectionStrings</code>新的section也会被返回</p><p>也可以手动创建一个新的分区</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>err <span class="token operator">:=</span> cfg<span class="token punctuation">.</span><span class="token function">NewSection</span><span class="token punctuation">(</span><span class="token string">&quot;new&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="子分区" tabindex="-1"><a class="header-anchor" href="#子分区" aria-hidden="true">#</a> 子分区</h3><p>在配置文件中，可以使用占位符<code>%(name)s</code>表示用之前已定义的Key<code>name</code>的值来替换，<code>s</code>表示值为字符串占用类型</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">NAME</span> <span class="token punctuation">=</span> <span class="token value attr-value">ini</span> 
<span class="token key attr-name">VERSION</span> <span class="token punctuation">=</span> <span class="token value attr-value">v1</span>
<span class="token key attr-name">IMPORT_PATH</span> <span class="token punctuation">=</span> <span class="token value attr-value">gopkg.in/%(NAME)s.%(VERSION)s</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">package</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">CLONE_URL</span> <span class="token punctuation">=</span> <span class="token value attr-value">https://%(IMPORT_PATH)s</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">package.sub</span><span class="token punctuation">]</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述文件设置<code>IMPORT_PATH</code>时使用前面定义的<code>NAME</code>和<code>VERSION</code>。在<code>package</code>中设置<code>CLONE_URL</code>时，使用了默认section中定义的<code>IMPORT_PATH</code></p><p>可以在section名中使用<code>.</code>来表示子section。若在<code>package.sub</code>中未找到所需的key就会到<code>package</code>中寻找</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/sub_section.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;Read config error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;CLONE_URL:&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;package.sub&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Key</span><span class="token punctuation">(</span><span class="token string">&quot;CLONE_URL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
CLONE_URL: https://gopkg.in/ini.v1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>package.sub</code>中没有<code>CLONE_URL</code>，返回<code>package</code>中的值</p><h2 id="保存配置" tabindex="-1"><a class="header-anchor" href="#保存配置" aria-hidden="true">#</a> 保存配置</h2><p>有时需要将配置写入到文件中。写入配置有两种方式：</p><ul><li><code>SaveTo</code>:写入到文件中</li><li><code>WriteTo</code>:写入到<code>io.Writer</code>中</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>err <span class="token operator">=</span> cfg<span class="token punctuation">.</span><span class="token function">SaveTo</span><span class="token punctuation">(</span><span class="token string">&quot;my.ini&quot;</span><span class="token punctuation">)</span>
err <span class="token operator">=</span> cfg<span class="token punctuation">.</span><span class="token function">SaveToIndent</span><span class="token punctuation">(</span><span class="token string">&quot;my.ini&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">)</span>

cfg<span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span>
cfg<span class="token punctuation">.</span><span class="token function">WriteToIndent</span><span class="token punctuation">(</span>writer<span class="token punctuation">,</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	defaultSection <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
	defaultSection<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;app_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;save config&quot;</span><span class="token punctuation">)</span>
	defaultSection<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;log_level&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DEBUG&quot;</span><span class="token punctuation">)</span>

	mysqlSec<span class="token punctuation">,</span> err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">NewSection</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;create mysql section error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	mysqlSec<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span>
	mysqlSec<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3306&quot;</span><span class="token punctuation">)</span>

	redisSec<span class="token punctuation">,</span> err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">NewSection</span><span class="token punctuation">(</span><span class="token string">&quot;reids&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;create redis section error :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	redisSec<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">)</span>
	redisSec<span class="token punctuation">.</span><span class="token function">NewKey</span><span class="token punctuation">(</span><span class="token string">&quot;port&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;6379&quot;</span><span class="token punctuation">)</span>

	err <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">SaveTo</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/saved-config.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;save config error :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	err <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">SaveToIndent</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/saved-config-pretty.ini&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;save config error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	config<span class="token punctuation">.</span><span class="token function">WriteTo</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	config<span class="token punctuation">.</span><span class="token function">WriteToIndent</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>saved-config.ini:</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">app_name</span>  <span class="token punctuation">=</span> <span class="token value attr-value">save config</span>
<span class="token key attr-name">log_level</span> <span class="token punctuation">=</span> <span class="token value attr-value">DEBUG</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysql</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">ip</span>   <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">3306</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">reids</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">ip</span>   <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>saved-config-pretty.ini:</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">app_name</span>  <span class="token punctuation">=</span> <span class="token value attr-value">save config</span>
<span class="token key attr-name">log_level</span> <span class="token punctuation">=</span> <span class="token value attr-value">DEBUG</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysql</span><span class="token punctuation">]</span></span>
 <span class="token key attr-name">ip</span>   <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
 <span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">3306</span>

<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">reids</span><span class="token punctuation">]</span></span>
 <span class="token key attr-name">ip</span>   <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1</span>
 <span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>[SaveTo/WriteTo]Indent</code>方法会对Section下的key-Value添加缩进</p><h2 id="section和struct映射" tabindex="-1"><a class="header-anchor" href="#section和struct映射" aria-hidden="true">#</a> Section和struct映射</h2><p>定义结构变量，加载完配置文件后，调用<code>MapTo</code>将配置项赋值到结构变量的字段中</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;gopkg.in/ini.v1&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	AppName  <span class="token builtin">string</span> <span class="token string">\`ini:&quot;app_name&quot;\`</span>
	LogLevel <span class="token builtin">string</span> <span class="token string">\`ini:&quot;log_level&quot;\`</span>

	MySql MysqlConfig <span class="token string">\`ini:&quot;mysql&quot;&#39;\`</span>
	Redis RedisConfig <span class="token string">\`ini:&quot;redis&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> MysqlConfig <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	IP       <span class="token builtin">string</span> <span class="token string">\`ini:&quot;ip&quot;\`</span>
	Port     <span class="token builtin">int</span>    <span class="token string">\`ini:&quot;port&quot;\`</span>
	User     <span class="token builtin">string</span> <span class="token string">\`ini:&quot;user&quot;\`</span>
	Password <span class="token builtin">string</span> <span class="token string">\`ini:&quot;password&quot;\`</span>
	Database <span class="token builtin">string</span> <span class="token string">\`ini:&quot;database&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> RedisConfig <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	IP   <span class="token builtin">string</span> <span class="token string">\`ini:&quot;ip&quot;\`</span>
	Port <span class="token builtin">int</span>    <span class="token string">\`ini:&quot;port&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	config<span class="token punctuation">,</span> err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Load</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/config.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;load config error:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	c <span class="token operator">:=</span> Config<span class="token punctuation">{</span><span class="token punctuation">}</span>
	config<span class="token punctuation">.</span><span class="token function">MapTo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>MapTo</code>内部使用了反射，所以结构字段必须是导出的。若字段名和键名不同，则需要在结构标签中指定对应的键名。</p><p>可以使用<code>ini.MapTo(&amp;c,&quot;my.ini&quot;)</code>将加载和映射合并</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>err <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">MapTo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span><span class="token string">&quot;my.ini&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以仅映射一个分区：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>mysqlConfig <span class="token operator">:=</span> MysqlConfig<span class="token punctuation">{</span><span class="token punctuation">}</span>
err <span class="token operator">:=</span> config<span class="token punctuation">.</span><span class="token function">Section</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">MapTo</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mysqlConfig<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以通过结构体生成配置：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>	config2 <span class="token operator">:=</span> ini<span class="token punctuation">.</span><span class="token function">Empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	c1 <span class="token operator">:=</span> Config<span class="token punctuation">{</span>
		AppName<span class="token punctuation">:</span>  <span class="token string">&quot;map_to_struct&quot;</span><span class="token punctuation">,</span>
		LogLevel<span class="token punctuation">:</span> <span class="token string">&quot;DEBUG&quot;</span><span class="token punctuation">,</span>
		MySql<span class="token punctuation">:</span> MysqlConfig<span class="token punctuation">{</span>
			IP<span class="token punctuation">:</span>   <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
			Port<span class="token punctuation">:</span> <span class="token number">3306</span><span class="token punctuation">,</span>
			User<span class="token punctuation">:</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		Redis<span class="token punctuation">:</span> RedisConfig<span class="token punctuation">{</span>
			IP<span class="token punctuation">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	err <span class="token operator">=</span> ini<span class="token punctuation">.</span><span class="token function">ReflectFrom</span><span class="token punctuation">(</span>config2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c1<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;load from struct error&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	err <span class="token operator">=</span> config2<span class="token punctuation">.</span><span class="token function">SaveTo</span><span class="token punctuation">(</span><span class="token string">&quot;../resources/load_from_Struct.ini&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;save config error&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2>`,61),r=n("code",null,"go-ini",-1),d={href:"https://ini.unknwon.io/",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"参考",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),s(" 参考")],-1),v={href:"https://github.com/go-ini/ini",target:"_blank",rel:"noopener noreferrer"},m={href:"https://ini.unknwon.io/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://darjun.github.io/2020/01/15/godailylib/go-ini/",target:"_blank",rel:"noopener noreferrer"};function b(f,q){const a=c("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[r,s("还有其他的高级特性，可以参考"),n("a",d,[s("官方文档"),t(a)])]),k,n("ol",null,[n("li",null,[n("a",v,[s("go-ini"),t(a)]),s(" gitHub repo")]),n("li",null,[n("a",m,[s("go-ini"),t(a)]),s(" godoc")]),n("li",null,[n("a",g,[s("go-ini"),t(a)]),s(" darjun blog")])])])}const h=e(l,[["render",b],["__file","go-ini.html.vue"]]);export{h as default};

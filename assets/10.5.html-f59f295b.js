const n=JSON.parse('{"key":"v-28fb7c4a","path":"/note/golang/open-source-books/the-way-to-go/10/10.5.html","title":"10.5 匿名字段和内嵌结构体","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"10.5.1 定义","slug":"_10-5-1-定义","link":"#_10-5-1-定义","children":[]},{"level":2,"title":"10.5.2 内嵌结构体","slug":"_10-5-2-内嵌结构体","link":"#_10-5-2-内嵌结构体","children":[]},{"level":2,"title":"10.5.3 命名冲突","slug":"_10-5-3-命名冲突","link":"#_10-5-3-命名冲突","children":[]}],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"note/golang/open-source-books/the-way-to-go/10/10.5.md","excerpt":"<h1> 10.5 匿名字段和内嵌结构体</h1>\\n<h2> 10.5.1 定义</h2>\\n<ul>\\n<li><strong>匿名字段</strong>：只有类型的字段，字段名就是类型名</li>\\n<li><strong>内嵌结构体</strong>：匿名字段类型是结构体</li>\\n</ul>\\n<h2> 10.5.2 内嵌结构体</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> A <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    ax<span class=\\"token punctuation\\">,</span> ay <span class=\\"token builtin\\">int</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">type</span> B <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    A\\n    bx<span class=\\"token punctuation\\">,</span> by <span class=\\"token builtin\\">int</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

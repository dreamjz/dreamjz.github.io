const e=JSON.parse('{"key":"v-3db4b2fc","path":"/note/golang/open-source-books/the-way-to-go/05/05.4.html","title":"5.4 for 结构","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"5.4.1 基于计数器的迭代","slug":"_5-4-1-基于计数器的迭代","link":"#_5-4-1-基于计数器的迭代","children":[]},{"level":2,"title":"5.4.2 基于条件判断的迭代","slug":"_5-4-2-基于条件判断的迭代","link":"#_5-4-2-基于条件判断的迭代","children":[]},{"level":2,"title":"5.4.3 无限循环","slug":"_5-4-3-无限循环","link":"#_5-4-3-无限循环","children":[]},{"level":2,"title":"5.4.4 for-range 结构","slug":"_5-4-4-for-range-结构","link":"#_5-4-4-for-range-结构","children":[]}],"readingTime":{"minutes":0.71,"words":214},"filePathRelative":"note/golang/open-source-books/the-way-to-go/05/05.4.md","excerpt":"<h1> 5.4 for 结构</h1>\\n<p>Go 中的循环只有 <code>for</code>。</p>\\n<h2> 5.4.1 基于计数器的迭代</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">for</span> 初始化语句；条件语句；修饰语句 <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// ...</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

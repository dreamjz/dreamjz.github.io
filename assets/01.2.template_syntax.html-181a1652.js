import{_ as p,Z as l,$ as o,a0 as a,a1 as n,a2 as t,a3 as e,H as c}from"./framework-dee406ed.js";const i={},u=e(`<h1 id="_4-模板语法" tabindex="-1"><a class="header-anchor" href="#_4-模板语法" aria-hidden="true">#</a> 4. 模板语法</h1><p>Vue 使用一种基于 HTML 的模板语法，可以被符合规范的浏览器和 HTML 解析器解析。</p><p>底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。</p><p>结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。</p><h2 id="_4-1-文本插值" tabindex="-1"><a class="header-anchor" href="#_4-1-文本插值" aria-hidden="true">#</a> 4.1 文本插值</h2><p>使用“Mustache”语法 (双大括号)：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-2-原始-html" tabindex="-1"><a class="header-anchor" href="#_4-2-原始-html" aria-hidden="true">#</a> 4.2 原始 HTML</h2>`,8),r={href:"https://cn.vuejs.org/api/built-in-directives.html#v-html",target:"_blank",rel:"noopener noreferrer"},d=a("code",null,"v-html",-1),k=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Using text interpolation: {{ rawHtml }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Using v-html directive: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rawHtml<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>指令由 <code>v-</code> 作为前缀，表明它们是一些由 Vue 提供的特殊 attribute</p><div class="hint-container warning"><p class="hint-container-title">安全警告</p><pre><code>	在网站上动态渲染任意 HTML 是非常危险的，因为这非常容易造成 [XSS 漏洞](https://en.wikipedia.org/wiki/Cross-site_scripting)。请仅在内容安全可信时再使用 \`v-html\`，并且**永远不要**使用用户提供的 HTML 内容。
</code></pre></div><h2 id="_4-3-attribute-绑定" tabindex="-1"><a class="header-anchor" href="#_4-3-attribute-绑定" aria-hidden="true">#</a> 4.3 Attribute 绑定</h2><p>双大括号不能在 HTML attributes 中使用</p>`,5),h={href:"https://cn.vuejs.org/api/built-in-directives.html#v-bind",target:"_blank",rel:"noopener noreferrer"},g=a("code",null,"v-bind",-1),v=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dynamicId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>v-bind</code> 指令指示 Vue 将元素的 <code>id</code> attribute 与组件的 <code>dynamicId</code> 属性保持一致。</p><p>如果绑定的值是 <code>null</code> 或者 <code>undefined</code>，那么该 attribute 将会从渲染的元素上移除。</p><h3 id="_4-3-1-简写" tabindex="-1"><a class="header-anchor" href="#_4-3-1-简写" aria-hidden="true">#</a> 4.3.1 简写</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dynamicId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-3-2-布尔型-attribute" tabindex="-1"><a class="header-anchor" href="#_4-3-2-布尔型-attribute" aria-hidden="true">#</a> 4.3.2 布尔型 Attribute</h3>`,6),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Attributes#%E5%B8%83%E5%B0%94%E5%80%BC%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},b={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled",target:"_blank",rel:"noopener noreferrer"},_=a("code",null,"disabled",-1),f=e(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isButtonDisabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),q=a("code",null,"isButtonDisabled",-1),x={href:"https://developer.mozilla.org/en-US/docs/Glossary/Truthy",target:"_blank",rel:"noopener noreferrer"},M=a("code",null,'<button disabled="">',-1),S=a("code",null,"disabled",-1),j={href:"https://developer.mozilla.org/en-US/docs/Glossary/Falsy",target:"_blank",rel:"noopener noreferrer"},H=e(`<h3 id="_4-3-2-动态绑定多个值" tabindex="-1"><a class="header-anchor" href="#_4-3-2-动态绑定多个值" aria-hidden="true">#</a> 4.3.2 动态绑定多个值</h3><p>有像这样的一个包含多个 attribute 的 JavaScript 对象：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> objectOfAttrs <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;container&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;wrapper&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过不带参数的 <code>v-bind</code>，你可以将它们绑定到单个元素上：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>objectOfAttrs<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-3-3-使用-javascript-表达式" tabindex="-1"><a class="header-anchor" href="#_4-3-3-使用-javascript-表达式" aria-hidden="true">#</a> 4.3.3 使用 JavaScript 表达式</h3><p>Vue 在所有的数据绑定中都支持完整的 JavaScript 表达式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{{ number + 1 }}

{{ ok ? &#39;YES&#39; : &#39;NO&#39; }}

{{ message.split(&#39;&#39;).reverse().join(&#39;&#39;) }}

&lt;div :id=&quot;\`list-\${id}\`&quot;&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些表达式都会被作为 JavaScript ，以当前组件实例为作用域解析执行。</p><ul><li>每个绑定仅支持<strong>单一表达式</strong>，也就是一段能够被求值的 JavaScript 代码</li></ul><p>在 Vue 模板内，JavaScript 表达式可以被使用在如下场景上：</p><ul><li><strong>在文本插值中 (双大括号)</strong></li><li>在任何 Vue <strong>指令</strong> (以 <code>v-</code> 开头的特殊 attribute) attribute 的值中</li></ul><h4 id="调用函数" tabindex="-1"><a class="header-anchor" href="#调用函数" aria-hidden="true">#</a> 调用函数</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>toTitleDate(date)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  {{ formatDate(date) }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>绑定在表达式中的方法在组件每次更新时都会被重新调用，因此<strong>不应该</strong>产生任何副作用，比如改变数据或触发异步操作。</p></div><h4 id="受限的全局访问" tabindex="-1"><a class="header-anchor" href="#受限的全局访问" aria-hidden="true">#</a> 受限的全局访问</h4>`,16),L={href:"https://github.com/vuejs/core/blob/main/packages/shared/src/globalsWhitelist.ts#L3",target:"_blank",rel:"noopener noreferrer"},T=a("p",null,"没有显式包含在列表中的全局对象将不能在模板内表达式中访问。",-1),y={href:"https://cn.vuejs.org/api/application.html#app-config-globalproperties",target:"_blank",rel:"noopener noreferrer"},V=a("code",null,"app.config.globalProperties",-1),A=a("h2",{id:"_4-4-指令-directives",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-4-指令-directives","aria-hidden":"true"},"#"),n(" 4.4 指令 Directives")],-1),B={href:"https://cn.vuejs.org/api/built-in-directives.html",target:"_blank",rel:"noopener noreferrer"},D=a("code",null,"v-",-1),E=e(`<p>一个指令的任务是在其表达式的值变化时响应式地更新 DOM。</p><h3 id="_4-4-3-参数-arguments" tabindex="-1"><a class="header-anchor" href="#_4-4-3-参数-arguments" aria-hidden="true">#</a> 4.4.3 参数 Arguments</h3><p>某些指令会需要一个“参数”，在指令名后通过一个<strong>冒号</strong>隔开做标识。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 简写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里 <code>href</code> 就是一个参数。</p><h3 id="_4-4-4-动态参数" tabindex="-1"><a class="header-anchor" href="#_4-4-4-动态参数" aria-hidden="true">#</a> 4.4.4 动态参数</h3><p>在指令参数上也可以使用一个 JavaScript 表达式，需要包含在一对方括号内：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>[attributeName]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- 简写 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[attributeName]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 <code>attributeName</code> 会作为一个 JavaScript 表达式被动态执行，计算得到的值会被用作最终的参数。</p><p>如果组件实例有一个数据属性 <code>attributeName</code>，其值为 <code>&quot;href&quot;</code>，那么这个绑定就等价于 <code>v-bind:href</code>。</p><h4 id="动态参数值的限制" tabindex="-1"><a class="header-anchor" href="#动态参数值的限制" aria-hidden="true">#</a> 动态参数值的限制</h4><p>动态参数中表达式的值：</p><ul><li>字符串</li><li><code>null</code>，特殊值 <code>null</code> 意为显式移除该绑定。其他非字符串的值会触发警告。</li></ul><h4 id="动态参数语法的限制" tabindex="-1"><a class="header-anchor" href="#动态参数语法的限制" aria-hidden="true">#</a> 动态参数语法的限制</h4><p>动态参数表达式因为某些字符的缘故有一些语法限制，比如空格和引号，在 HTML attribute 名称中都是不合法的</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 这会触发一个编译器警告 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[&#39;foo&#39;</span> <span class="token attr-name">+</span> <span class="token attr-name">bar]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,16),N={href:"https://cn.vuejs.org/guide/essentials/computed.html",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>当使用 DOM 内嵌模板 (直接写在 HTML 文件里的模板) 时，需要避免在名称中使用大写字母，因为浏览器会强制将其转换为小写：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:[someAttr]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将会在 DOM 内嵌模板中被转换为 <code>:[someattr]</code></p><p>如果组件拥有 “someAttr” 属性而非 “someattr”，这段代码将不会工作。</p><p><strong>单文件组件内的模板不受此限制</strong></p><h3 id="_4-4-5-修饰符-modifiers" tabindex="-1"><a class="header-anchor" href="#_4-4-5-修饰符-modifiers" aria-hidden="true">#</a> 4.4.5 修饰符 Modifiers</h3><p>修饰符是以点开头的特殊后缀，表明指令需要以一些特殊的方式被绑定。</p><p>例如 <code>.prevent</code> 修饰符会告知 <code>v-on</code> 指令对触发的事件调用 <code>event.preventDefault()</code>：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/directive.69c37117.png" alt="指令语法图" tabindex="0" loading="lazy"><figcaption>指令语法图</figcaption></figure>`,10);function J(z,O){const s=c("ExternalLinkIcon");return l(),o("div",null,[u,a("p",null,[n("双大括号会将数据解释为纯文本，而不是 HTML。若想插入 HTML，需要使用 "),a("a",r,[d,n(" 指令"),t(s)]),n("：")]),k,a("p",null,[n("响应式地绑定一个 attribute，应该使用 "),a("a",h,[g,n(" 指令"),t(s)]),n("：")]),v,a("p",null,[a("a",m,[n("布尔型 attribute"),t(s)]),n(" 依据 true / false 值来决定 attribute 是否应该存在于该元素上。")]),a("p",null,[n("例如 "),a("a",b,[_,t(s)]),n(":")]),f,a("ul",null,[a("li",null,[n("当 "),q,n(" 为"),a("a",x,[n("真值"),t(s)]),n("或一个空字符串 (即 "),M,n(") 时，元素会包含这个 "),S,n(" attribute")]),a("li",null,[n("当其为其他"),a("a",j,[n("假值"),t(s)]),n("时 attribute 将被忽略")])]),H,a("p",null,[n("模板中的表达式将被沙盒化，仅能够访问到"),a("a",L,[n("有限的全局对象列表"),t(s)]),n("。")]),T,a("p",null,[n("可以在 "),a("a",y,[V,t(s)]),n(" 上显式地添加它们，供所有的 Vue 表达式使用。")]),A,a("p",null,[a("a",B,[n("指令"),t(s)]),n("是带有 "),D,n(" 前缀的特殊 attribute。")]),E,a("p",null,[n("如果需要传入一个复杂的动态参数，推荐使用"),a("a",N,[n("计算属性"),t(s)]),n("替换复杂的表达式")]),w])}const U=p(i,[["render",J],["__file","01.2.template_syntax.html.vue"]]);export{U as default};

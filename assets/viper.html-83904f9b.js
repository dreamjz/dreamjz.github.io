import{_ as p,Z as o,$ as i,a0 as s,a1 as n,a2 as t,a4 as e,H as c}from"./framework-d03928c9.js";const l={},u=e(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p><code>viper</code>是一个配置解决方案，拥有丰富的特性：</p><ul><li>支持 JOSN/TOML/YAML/HCL/envfile/properties 等多种格式配置文件</li><li>可以设置监听配置文件的修改，修改时自动加载新配置</li><li>从环境变量、命令行选项和<code>io.Reader</code>中读取配置</li><li>从远程配置系统中读取和监听修改，如 etcd/Consul</li><li>代码逻辑中显示设置建值</li></ul><h2 id="快速开始-quick-start" tabindex="-1"><a class="header-anchor" href="#快速开始-quick-start" aria-hidden="true">#</a> 快速开始 Quick Start</h2><p>在 go module 中引入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go get -u github.com/spf13/viper latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),r={href:"https://learnxinyminutes.com/docs/toml/",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">app_name</span><span class="token punctuation">=</span><span class="token string">&quot;golang daily lib -- viper&quot;</span>

<span class="token key property">log_level</span><span class="token punctuation">=</span><span class="token string">&quot;DEBUG&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">mysql</span><span class="token punctuation">]</span>
<span class="token key property">ip</span><span class="token punctuation">=</span><span class="token string">&quot;127.0.0.1&quot;</span>
<span class="token key property">port</span> <span class="token punctuation">=</span> <span class="token number">3306</span>
<span class="token key property">user</span> <span class="token punctuation">=</span> <span class="token string">&quot;root&quot;</span>
<span class="token key property">password</span> <span class="token punctuation">=</span> <span class="token number">123456</span>
<span class="token key property">database</span> <span class="token punctuation">=</span> <span class="token string">&quot;awesome&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">redis</span><span class="token punctuation">]</span>
<span class="token key property">ip</span> <span class="token punctuation">=</span> <span class="token string">&quot;127.0.0.1&quot;</span>
<span class="token key property">port</span> <span class="token punctuation">=</span> <span class="token number">7381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/spf13/viper&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;toml&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 设置默认值</span>
	viper<span class="token punctuation">.</span><span class="token function">SetDefault</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span>

	err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// print config</span>
	<span class="token comment">// base config</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;app name&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;app_name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;log level&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;log_level&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// mysql config</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql ip:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql port:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql user:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql pass:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql database:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.database&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// redis config</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis ip:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;redis.ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis port:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>viper使用较为简单：</p><ul><li>SetConfigName: 设置文件名</li><li>SetConfigType: 设置配置类型</li><li>AddConfigPath: 设置配置文件路径</li><li>ReadInConfig: 读取配置</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go
app name golang daily lib -- viper
log level DEBUG
mysql ip: <span class="token number">127.0</span>.0.1
mysql port: <span class="token number">3306</span>
mysql user: root
mysql pass: <span class="token number">123456</span>
mysql database: awesome
redis ip: <span class="token number">127.0</span>.0.1
redis port: <span class="token number">7381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读取" tabindex="-1"><a class="header-anchor" href="#读取" aria-hidden="true">#</a> 读取</h2><p>viper 提供了多种形式的读取函数。上述的例子中，<code>Get</code>函数返回<code>interface{}</code>类型的值，但是使用不太方便</p><p><code>GetType</code>系列函数可以返回指定类型的值。Type 可以是 <code>Bool/Float64/Int/String/Time/Duration/IntSlice/StringSlice</code>,需要注意<em>若指定Key不存在或类型不正确，<code>GetType</code>将返回类型的零值</em></p><p>若要判断key是否存在，可以使用<code>IsSet</code>函数</p><p>使用<code>GetStringMap</code>和<code>GetStringMapString</code>将以map的形式返回Key下的所有键值对，前者返回<code>map[string]interface{}</code>,后者返回<code>map[string]string</code></p><p><code>AllSettings</code>以<code>map[string]interface{}</code>返回所有值</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/spf13/viper&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;toml&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;protocols:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetStringSlice</span><span class="token punctuation">(</span><span class="token string">&quot;server.protocols&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;ports:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetIntSlice</span><span class="token punctuation">(</span><span class="token string">&quot;server.ports&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetDuration</span><span class="token punctuation">(</span><span class="token string">&quot;server.timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql ip:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql port&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> viper<span class="token punctuation">.</span><span class="token function">IsSet</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis port is set &quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis port is not set&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql settings: &quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetStringMap</span><span class="token punctuation">(</span><span class="token string">&quot;redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;mysql settings: &quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetStringMapString</span><span class="token punctuation">(</span><span class="token string">&quot;mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;all settings:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">AllSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在config.toml中添加<code>protocols</code>和<code>ports</code>配置</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">server</span><span class="token punctuation">]</span>
<span class="token key property">protocols</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;https&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ftp&quot;</span><span class="token punctuation">]</span>
<span class="token key property">ports</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">10001</span><span class="token punctuation">,</span><span class="token number">10002</span><span class="token punctuation">]</span>
<span class="token key property">timeout</span> <span class="token punctuation">=</span> <span class="token string">&quot;3s&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
protocols: <span class="token punctuation">[</span>https http ftp<span class="token punctuation">]</span>
ports: <span class="token punctuation">[</span><span class="token number">10000</span> <span class="token number">10001</span> <span class="token number">10002</span><span class="token punctuation">]</span>
timeout: 3s
mysql ip: <span class="token number">127.0</span>.0.1
mysql port <span class="token number">3306</span>
redis port is <span class="token builtin class-name">set</span> 
mysql settings:  map<span class="token punctuation">[</span>ip:127.0.0.1 port:7381<span class="token punctuation">]</span>
mysql settings:  map<span class="token punctuation">[</span>database:awesome ip:127.0.0.1 password:123456 port:3306 user:root<span class="token punctuation">]</span>
all settings: map<span class="token punctuation">[</span>app_name:golang daily lib -- viper log_level:DEBUG mysql:map<span class="token punctuation">[</span>database:awesome ip:127.0.0.1 password:123456 port:3306 user:root<span class="token punctuation">]</span> redis:map<span class="token punctuation">[</span>ip:127.0.0.1 port:7381<span class="token punctuation">]</span> server:map<span class="token punctuation">[</span>ports:<span class="token punctuation">[</span><span class="token number">10000</span> <span class="token number">10001</span> <span class="token number">10002</span><span class="token punctuation">]</span> protocols:<span class="token punctuation">[</span>https http ftp<span class="token punctuation">]</span> timeout:3s<span class="token punctuation">]</span><span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上例中<code>GetDuration</code>可以读取<code>Duration</code>类型配置，只要是<code>time.ParseDuration</code>接受的格式均可，例如：<code>3s</code>,<code>2min</code>,<code>1min30s</code></p><h2 id="设置配置" tabindex="-1"><a class="header-anchor" href="#设置配置" aria-hidden="true">#</a> 设置配置</h2><p>viper 支持在多个地方设置，使用以下顺序依次读取：</p><ul><li>使用<code>Set</code>函数显式设置的</li><li>命令行选项</li><li>环境变量</li><li>配置文件</li><li>默认值</li></ul><h3 id="viper-set" tabindex="-1"><a class="header-anchor" href="#viper-set" aria-hidden="true">#</a> <code>viper.Set</code></h3><p>若Key-Value通过<code>viper.Set</code>设置，那么此配置的优先级是最高的</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>viper<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span><span class="token number">5379</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将上述代码放入示例程序中，<code>viper.GetInt(&quot;redis.port&quot;)</code>将为5379(优先级在配置文件之前)</p><h3 id="命令行选项" tabindex="-1"><a class="header-anchor" href="#命令行选项" aria-hidden="true">#</a> 命令行选项</h3><p>如果Key没有通过<code>viper.Set</code>显式设置,viper 将会从命令行选项中读取；命令行选项使用<code>pflag</code>来解析选项，首先在<code>init</code>方法中定义选项并调用<code>viper.BindPFlags</code>绑定选项到配置中：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// set-kv/main.go</span>
<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">,</span> <span class="token string">&quot;redis port&quot;</span><span class="token punctuation">)</span>

	<span class="token comment">// 绑定命令行</span>
	viper<span class="token punctuation">.</span><span class="token function">BindPFlags</span><span class="token punctuation">(</span>pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;toml&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	viper<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.port&quot;</span><span class="token punctuation">,</span> <span class="token number">3307</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Mysql port:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Redis port&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置<code>redis.port</code>命令行参数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go <span class="token parameter variable">--redis.port</span> <span class="token number">6667</span>
Mysql port: <span class="token number">3307</span>
Redis port <span class="token number">6667</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不设置命令行参数,读取配置文件配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go                   
Mysql port: <span class="token number">3307</span>
Redis port <span class="token number">7381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将配置文件的<code>redis.port</code>注释， 将会读取设置的默认值：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
Mysql port: <span class="token number">3307</span>
Redis port <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量" aria-hidden="true">#</a> 环境变量</h3><p>若从配置和命令行选项中未获取参数，则将从环境变量中获取；我们可以单个绑定，也可设置自动绑定</p><p>在<code>init</code>函数中使用<code>AutomaticEnv</code>绑定全部环境变量:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 绑定全部环境变量</span>
    viper<span class="token punctuation">.</span><span class="token function">AutomaticEnv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;HOME:&quot;</span><span class="token punctuation">,</span>viper<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;HOME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出HOME环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go 
<span class="token environment constant">HOME</span><span class="token builtin class-name">:</span> /home/username
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>单独绑定环境变量<code>redis_port</code>:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    viper<span class="token punctuation">.</span><span class="token function">BindEnv</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;redis_port&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port:&quot;</span><span class="token punctuation">,</span>viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置环境变量<code>redis_port</code>(os:Manjaor shell:zsh,注意此处的环境变量名不可含有<code>.</code>,<code>=</code>两边不要有空格)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">redis_port</span><span class="token operator">=</span><span class="token number">6666</span><span class="token punctuation">;</span>go run ./main.go  
<span class="token environment constant">HOME</span><span class="token builtin class-name">:</span> /home/kesa
redis.port <span class="token number">6666</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是使用export设置环境变量只对当前process生效，在新的shell process中用export设置环境变量程序是无法读取到的</p><p>对于<code>BindEnv</code>函数：</p><ul><li>只传入一个参数：此参数将同时作为键名和环境变量名</li><li>传入两个参数： 第一个为键名，第二个为环境变量名</li><li>传入两个以上参数： 将会按第二个参数开始的多个环境变量名顺序读取，直到读取到值为止</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   	           				viper<span class="token punctuation">.</span><span class="token function">BindEnv</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;redis_port_1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;redis_port_2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;redis_port3&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port:&quot;</span><span class="token punctuation">,</span>viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// run-main.sh
<span class="token comment">#!/bin/zsh</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">redis_port_1</span><span class="token operator">=</span><span class="token number">6000</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">redis_port_2</span><span class="token operator">=</span><span class="token number">6001</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">redis_port_3</span><span class="token operator">=</span><span class="token number">6002</span>
go run ./main.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ ./run-main.sh
<span class="token environment constant">HOME</span><span class="token builtin class-name">:</span> /home/kesa
redis.port <span class="token number">6000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序读取到<code>redis_port_1</code>之后就不会继续读取后续的环境变量</p><p>还可以使用<code>viper.SetEnvPrefix</code>函数设置环境变量前缀，之后通过<code>AtuomaticEnv</code>和一个参数的<code>BindEnv</code>绑定的环境变量，在使用<code>Get*</code>是变回加上前缀进行查找，若设置的环境变量不存在，viper会转成全大写后再次查找，例如：使用<code>home</code>可以查到<code>HOME</code>的值</p><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><p>在上述的步骤中未获取配置，则会从配置文件中的配置查找，关于配置文件的用法参见[quick start](/zh/golang/&#39;golang daily lib&#39;/viper.html#快速开始-quick-start)</p><h3 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值" aria-hidden="true">#</a> 默认值</h3><p>关于默认值的配置，可参见 [quick start](/zh/golang/&#39;golang daily lib&#39;/viper.html#快速开始-quick-start)</p><h2 id="读取配置" tabindex="-1"><a class="header-anchor" href="#读取配置" aria-hidden="true">#</a> 读取配置</h2><h3 id="从io-reader中读取" tabindex="-1"><a class="header-anchor" href="#从io-reader中读取" aria-hidden="true">#</a> 从<code>io.Reader</code>中读取</h3><p>viper 支持从<code>io.Reader</code>中读取配置。这种形式比较灵活，来源可以是文件，可以是程序中生成的字符串，或者是从网络连接中读取的字节流</p><p>从字符串中读取配置：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bytes&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/spf13/viper&quot;</span>
	<span class="token string">&quot;log&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;yaml&quot;</span><span class="token punctuation">)</span>
	ymlConfig <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">\`
app_name: read-config
log_level: debug
mysql:
 port: 3306
redis:
 port: 6379
\`</span><span class="token punctuation">)</span>
	err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadConfig</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span>ymlConfig<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;redis port:&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go
redis port: <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="unmarshal" tabindex="-1"><a class="header-anchor" href="#unmarshal" aria-hidden="true">#</a> Unmarshal</h3><p>viper 支持将配置Unmarshal到结构体中</p><p>创建yaml配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># /resources/config2.yml</span>
<span class="token key atrule">app_name</span><span class="token punctuation">:</span> unmarshal
<span class="token key atrule">log_level</span><span class="token punctuation">:</span> debug
<span class="token key atrule">mysql</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
  <span class="token key atrule">ip</span><span class="token punctuation">:</span> 127.0.0.1
<span class="token key atrule">redis</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建结构体并解析：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	AppName  <span class="token builtin">string</span> <span class="token string">\`mapstructure:&quot;app_name&quot;\`</span>
	LogLevel <span class="token builtin">string</span> <span class="token string">\`mapstructure:&quot;log_level&quot;\`</span>

	MySql MySqlConfig
	Redis RedisConfig
<span class="token punctuation">}</span>

<span class="token keyword">type</span> MySqlConfig <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Port <span class="token builtin">int</span>
	ip   <span class="token builtin">string</span> <span class="token comment">// will not be parsed</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> RedisConfig <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Port <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// viper.SetConfigName(&quot;config&quot;)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config2&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;yaml&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> c Config
	viper<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go
main.Config<span class="token punctuation">{</span>
	AppName:<span class="token string">&quot;unmarshal&quot;</span>,
	LogLevel:<span class="token string">&quot;debug&quot;</span>, 
	MySql:
		main.MySqlConfig<span class="token punctuation">{</span>
			Port:3306, 
			ip:<span class="token string">&quot;&quot;</span>
		<span class="token punctuation">}</span>,
        Redis:main.RedisConfig<span class="token punctuation">{</span>
        	Port:6379
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结构体的字段必须是导出的才会被赋值，示例中的<code>MysqlConfig.ip</code>由于不是导出的所以未赋值</p>`,71),k={href:"https://github.com/mitchellh/mapstructure",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>值得注意的是<code>viper.SetConfigName</code>仅设置配置文件名（忽略扩展名）,<code>viper.SetConfigType</code>设置的是配置文件内容格式（用于解析）</p><p>若存在同名的配置<code>config.toml</code>和<code>config.yml</code>,在上例的程序中设置配置文件名为<code>config</code>，解析类型为<code>yaml</code>，可能遇到解析报错，程序会将<code>config.toml</code>当做<code>yaml</code>文件解析，需要设置不同的文件名来解决</p><h2 id="保存配置" tabindex="-1"><a class="header-anchor" href="#保存配置" aria-hidden="true">#</a> 保存配置</h2><p>viper提供了以下接口将配置保存下来：</p><ul><li><code>WriteConfig</code>: 将当前的 viper 配置写入至预设路径，若未设置路径则报错；此方式将覆盖当前配置</li><li><code>SafeWriteConfig</code>:功能同上，但不覆盖已有配置</li><li><code>WriteConfigAs</code>:保存配置到指定路径，覆盖已有配置</li><li><code>SafeWriteConfig</code>:功能同上，不覆盖已有配置</li></ul><p>下例通过程序生成配置文件：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config3&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>

	viper<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;app_name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;save-config&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;mysql.port&quot;</span><span class="token punctuation">,</span> <span class="token number">3306</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">SafeWriteConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;write config fialed :&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行后生成<code>config3.json</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;app_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;save-config&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;mysql&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">3306</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;redis&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">6379</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="监听文件修改" tabindex="-1"><a class="header-anchor" href="#监听文件修改" aria-hidden="true">#</a> 监听文件修改</h2><p>viper 可以监听文件修改，实现配置热加载，无需重启服务即可使配置生效</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigName</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">SetConfigType</span><span class="token punctuation">(</span><span class="token string">&quot;toml&quot;</span><span class="token punctuation">)</span>
	viper<span class="token punctuation">.</span><span class="token function">AddConfigPath</span><span class="token punctuation">(</span><span class="token string">&quot;../resources&quot;</span><span class="token punctuation">)</span>

	err <span class="token operator">:=</span> viper<span class="token punctuation">.</span><span class="token function">ReadInConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;read config failed: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	viper<span class="token punctuation">.</span><span class="token function">WatchConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Before : redis.port=&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;After : redis.port=&quot;</span><span class="token punctuation">,</span> viper<span class="token punctuation">.</span><span class="token function">GetInt</span><span class="token punctuation">(</span><span class="token string">&quot;redis.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用<code>viper.WatchConfig</code>函数，viper会自动监听配置修改</p><p>上例中，先打印redis.port，在Sleep期间修改配置文件，配置修改成功生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go run ./main.go
Before <span class="token builtin class-name">:</span> <span class="token assign-left variable">redis.port</span><span class="token operator">=</span> <span class="token number">7381</span>
After <span class="token builtin class-name">:</span> <span class="token assign-left variable">redis.port</span><span class="token operator">=</span> <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可为配置修改增加回调函数：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>viper<span class="token punctuation">.</span><span class="token function">OnConfigChange</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>e fsnotify<span class="token punctuation">.</span>Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Config file:%s Op:%s\\n&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> e<span class="token punctuation">.</span>Op<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),m={href:"https://github.com/fsnotify/fsnotify",target:"_blank",rel:"noopener noreferrer"},b=s("h2",{id:"参考",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),n(" 参考")],-1),g={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},f={href:"https://darjun.github.io/2020/01/18/godailylib/viper/#%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8",target:"_blank",rel:"noopener noreferrer"};function q(h,y){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,s("p",null,[n("配置文件使用TOML格式(语法快速入门可以看"),s("a",r,[n("learn X in Y miniutes"),t(a)]),n(")，config.toml:")]),d,s("p",null,[n("unmarshal功能引用了mapstructure,详情参见项目"),s("a",k,[n("github.com/mitchellh/mapstructure"),t(a)])]),v,s("p",null,[n("在文件修改时会执行此回调函数,viper 使用"),s("a",m,[n("fsnotify"),t(a)]),n("库来实现监听文件修改的功能")]),b,s("ol",null,[s("li",null,[s("a",g,[n("viper"),t(a)]),n(" GitHub-repo")]),s("li",null,[s("a",f,[n("viper"),t(a)]),n(" darjun/blog")])])])}const x=p(l,[["render",q],["__file","viper.html.vue"]]);export{x as default};

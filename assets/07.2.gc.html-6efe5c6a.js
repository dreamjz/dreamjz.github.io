const l=JSON.parse('{"key":"v-b3a58990","path":"/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.2.gc.html","title":"7.2 垃圾收集器","lang":"zh-CN","frontmatter":{"title":"7.2 垃圾收集器","date":"2023-10-02T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"7.2.1 设计原理","slug":"_7-2-1-设计原理","link":"#_7-2-1-设计原理","children":[{"level":3,"title":"标记清除","slug":"标记清除","link":"#标记清除","children":[]},{"level":3,"title":"三色标记","slug":"三色标记","link":"#三色标记","children":[]},{"level":3,"title":"增量和并发","slug":"增量和并发","link":"#增量和并发","children":[]}]},{"level":2,"title":"7.2.2 Golang GC 的演进过程","slug":"_7-2-2-golang-gc-的演进过程","link":"#_7-2-2-golang-gc-的演进过程","children":[{"level":3,"title":"并发垃圾收集","slug":"并发垃圾收集","link":"#并发垃圾收集","children":[]},{"level":3,"title":"回收堆目标","slug":"回收堆目标","link":"#回收堆目标","children":[]},{"level":3,"title":"混合写屏障","slug":"混合写屏障","link":"#混合写屏障","children":[]}]},{"level":2,"title":"7.2.3 实现原理","slug":"_7-2-3-实现原理","link":"#_7-2-3-实现原理","children":[{"level":3,"title":"触发时机","slug":"触发时机","link":"#触发时机","children":[]},{"level":3,"title":"垃圾收集启动","slug":"垃圾收集启动","link":"#垃圾收集启动","children":[]},{"level":3,"title":"并发扫描与标记辅助","slug":"并发扫描与标记辅助","link":"#并发扫描与标记辅助","children":[]},{"level":3,"title":"标记终止","slug":"标记终止","link":"#标记终止","children":[]},{"level":3,"title":"内存清理","slug":"内存清理","link":"#内存清理","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":19.9,"words":5970},"filePathRelative":"reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.2.gc.md","localizedDate":"2023年10月2日","excerpt":"<h2> 7.2.1 设计原理</h2>\\n<p>Golang 的内存管理组件：</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310030304479.png\\" alt=\\"mutator-allocator-collector\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>mutator-allocator-collector</figcaption></figure>\\n<p>如上图所示，用户程序（Mutator）会通过内存分配器（Allocator）在堆上申请内存，而垃圾收集器（Collector）负责回收堆上的内存空间，内存分配器和垃圾收集器共同管理着程序中的堆内存空间。</p>"}');export{l as data};

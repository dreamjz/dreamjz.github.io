const n=JSON.parse('{"key":"v-d3d42dea","path":"/interview/golang/ans/14-q-syntax.html","title":"判断切片是否相同的两种方式性能比较","lang":"zh-CN","frontmatter":{"title":"判断切片是否相同的两种方式性能比较"},"headers":[{"level":2,"title":"1. 实现","slug":"_1-实现","link":"#_1-实现","children":[{"level":3,"title":"1.1 单元测试","slug":"_1-1-单元测试","link":"#_1-1-单元测试","children":[]}]},{"level":2,"title":"2. Benchmark","slug":"_2-benchmark","link":"#_2-benchmark","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":2.12,"words":635},"filePathRelative":"interview/golang/ans/14-q-syntax.md","excerpt":"<p>比较两个切片可以使用两种方式：</p>\\n<ol>\\n<li>遍历切片比较每个元素，可以判断临界条件以快速失败提高性能</li>\\n<li>使用反射，<code>reflect.DeepEqual(x, y any) bool</code>，因为是通用型函数，并且使用反射获取类型信息，在有性能要求的场景中不建议使用</li>\\n</ol>\\n<h2> 1. 实现</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">sliceEqual</span><span class=\\"token punctuation\\">(</span>a1<span class=\\"token punctuation\\">,</span> a2 <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">bool</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>a1<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>a2<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token comment\\">// 异或运算</span>\\n\\t<span class=\\"token comment\\">// 参与比较的切片不能为 nil</span>\\n\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>a1 <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">!=</span> <span class=\\"token punctuation\\">(</span>a2 <span class=\\"token operator\\">==</span> <span class=\\"token boolean\\">nil</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token keyword\\">for</span> i<span class=\\"token punctuation\\">,</span> v <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> a1 <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> a2<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">!=</span> v <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

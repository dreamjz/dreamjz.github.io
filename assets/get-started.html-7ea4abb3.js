import{_ as d,Z as c,$ as l,a0 as n,a1 as e,a2 as a,a4 as i,H as o}from"./framework-d03928c9.js";const r={},t=i(`<p>Docker是一个开源的应用容器引擎，容器是一个虚拟化的独立环境，开发者可以部署应用到一个可移植的容器中，然后发布到任何流行的linux机器上，也可以实现虚拟化</p><p>Docker 从 <code>1.13</code> 版本之后采用时间线的方式作为版本号，分为社区版 <code>CE</code> 和企业版 <code>EE</code>，社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等</p><p>社区版按照 <code>stable</code> 和 <code>edge</code> 两种方式发布，每个季度更新 <code>stable</code> 版本，如 <code>17.06</code>，<code>17.09</code>；每个月份更新 <code>edge</code> 版本，如<code>17.09</code>，<code>17.10</code></p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><p>本文操作环境为<code>Manjaro</code>,使用<code>pacman</code>进行安装：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo pacman -S docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看版本:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> version
Client:
 Version:           <span class="token number">20.10</span>.9
 API version:       <span class="token number">1.41</span>
 Go version:        go1.17.1
 Git commit:        c2ea9bc90b
 Built:             Mon Oct  <span class="token number">4</span> <span class="token number">19</span>:13:02 <span class="token number">2021</span>
 OS/Arch:           linux/amd64
 Context:           default
 Experimental:      <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动服务：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo systemctl start docker.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或设置开机启动：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo systemctl enable docker.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行<code>hello-world</code>镜像，验证安装是否成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">docker</span> run hello-world    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意默认<code>docker</code>指令需要<code>root</code>用户权限，可以将当前用户加入<code>docker group</code></p><p>查看当前用户群组：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> /etc/group<span class="token operator">|</span><span class="token function">grep</span> <span class="token function">docker</span> 
docker:x:961:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>若<code>docker</code>不存在则创建：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">groupadd</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将当前用户加入<code>docker</code>群组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以新的组登录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ newgrp <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>测试<code>hello-world</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run hello-world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ docker --help

管理命令:
  container   管理容器
  image       管理镜像
  network     管理网络
命令：
  attach      介入到一个正在运行的容器
  build       根据 Dockerfile 构建一个镜像
  commit      根据容器的更改创建一个新的镜像
  cp          在本地文件系统与容器中复制 文件/文件夹
  create      创建一个新容器
  exec        在容器中执行一条命令
  images      列出镜像
  kill        杀死一个或多个正在运行的容器    
  logs        取得容器的日志
  pause       暂停一个或多个容器的所有进程
  ps          列出所有容器
  pull        拉取一个镜像或仓库到 registry
  push        推送一个镜像或仓库到 registry
  rename      重命名一个容器
  restart     重新启动一个或多个容器
  rm          删除一个或多个容器
  rmi         删除一个或多个镜像
  run         在一个新的容器中执行一条命令
  search      在 Docker Hub 中搜索镜像
  start       启动一个或多个已经停止运行的容器
  stats       显示一个容器的实时资源占用
  stop        停止一个或多个正在运行的容器
  tag         为镜像创建一个新的标签
  top         显示一个容器内的所有进程
  unpause     恢复一个或多个容器内所有被暂停的进程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="容器使用" tabindex="-1"><a class="header-anchor" href="#容器使用" aria-hidden="true">#</a> 容器使用</h2><h3 id="启动容器" tabindex="-1"><a class="header-anchor" href="#启动容器" aria-hidden="true">#</a> 启动容器</h3><p>使用<code>docker pull</code>获取<code>centos</code>镜像：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker pull centos:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> images                                       
REPOSITORY    TAG       IMAGE ID       CREATED       SIZE
hello-world   latest    feb5d9fea6a5   <span class="token number">5</span> weeks ago   <span class="token number">13</span>.3kB
centos        latest    5d0da3dc9764   <span class="token number">6</span> weeks ago   231MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>centos</code>镜像启动容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> centos /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>i</code>:交互式操作</li><li><code>t</code>:终端</li><li><code>centos</code>:镜像名</li><li><code>/bin/bash</code>:命令，启动bash</li></ul><p>执行<code>exit</code>可以退出容器，此时容器会停止</p><p>查看所有容器,<code>docker ps</code>查看正在运行的容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span> 
CONTAINER ID   IMAGE         COMMAND       CREATED          STATUS                      PORTS     NAMES
da34e8514a0e   centos        <span class="token string">&quot;/bin/bash&quot;</span>   <span class="token number">14</span> minutes ago   Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">1</span> second ago               admiring_buck
d03b9c3fa042   hello-world   <span class="token string">&quot;/hello&quot;</span>      <span class="token number">19</span> minutes ago   Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">19</span> minutes ago             magical_panini
105c030cdc8c   hello-world   <span class="token string">&quot;/hello&quot;</span>      <span class="token number">41</span> minutes ago   Exited <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">41</span> minutes ago             eager_haslett
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动，停止，重启已停止的容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> start CONTAINER_ID
CONTAINER_ID
$ <span class="token function">docker</span> stop CONTAINER_ID
CONTAINER_ID
$ <span class="token function">docker</span> restart CONTAINER_ID
CONTAINER_ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除容器：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> CONTAINER_ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="后台启动容器-daemon" tabindex="-1"><a class="header-anchor" href="#后台启动容器-daemon" aria-hidden="true">#</a> 后台启动容器（daemon）</h3><p>启动容器时使用<code>-d</code>,可以将容器作为守护进程（daemon）在后台运行，需要使用<code>attach</code>或<code>exec</code>指令进入容器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-itd</span> centos /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="docker-attach" tabindex="-1"><a class="header-anchor" href="#docker-attach" aria-hidden="true">#</a> <code>docker attach</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> attach CONTAINER_ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意在退出容器后，容器将会停止</p><h4 id="docker-exec" tabindex="-1"><a class="header-anchor" href="#docker-exec" aria-hidden="true">#</a> <code>docker exec</code></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> CONTAINER_ID COMMAND 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导入和导出容器" tabindex="-1"><a class="header-anchor" href="#导入和导出容器" aria-hidden="true">#</a> 导入和导出容器</h3><p>使用<code>docker export</code>可将容器导出到本地快照</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> <span class="token builtin class-name">export</span> cb50e17da895 <span class="token operator">&gt;</span> ./centos.tar  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>导入容器快照作为镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> centos.tar<span class="token operator">|</span><span class="token function">docker</span> <span class="token function">import</span> - test/centos:local
 sha256:b4e46ee456b5b7ecb4cf35bb3b3c3d5c09230020a87c5f18f71a9004cadf2668
$ <span class="token function">docker</span> images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
test/centos   <span class="token builtin class-name">local</span>     b4e46ee456b5   <span class="token number">6</span> seconds ago   231MB
hello-world   latest    feb5d9fea6a5   <span class="token number">5</span> weeks ago     <span class="token number">13</span>.3kB
centos        latest    5d0da3dc9764   <span class="token number">6</span> weeks ago     231MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="镜像使用" tabindex="-1"><a class="header-anchor" href="#镜像使用" aria-hidden="true">#</a> 镜像使用</h2><h3 id="设置镜像加速" tabindex="-1"><a class="header-anchor" href="#设置镜像加速" aria-hidden="true">#</a> 设置镜像加速</h3><p>此处使用网易云镜像服务：<code>https://hub-mirror.c.163.com</code></p><p>请首先执行以下命令，查看是否在 <code>docker.service</code> 文件中配置过镜像地址</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ systemctl cat docker | grep &#39;\\-\\-registry\\-mirror&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果该命令有输出，那么请执行 <code>$ systemctl cat docker</code> 查看 <code>ExecStart=</code> 出现的位置，修改对应的文件内容去掉 <code>--registry-mirror</code> 参数及其值，并按接下来的步骤进行配置。</p><p>如果以上命令没有任何输出，那么就可以在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动</p></blockquote><p>之后重新启动服务:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ sudo systemctl daemon-reload
$ sudo systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看镜像" tabindex="-1"><a class="header-anchor" href="#查看镜像" aria-hidden="true">#</a> 查看镜像</h3><p>使用<code>docker images</code>可以查看本地主机的镜像，信息说明：</p><ul><li>REPOSITORY ： 镜像的仓库</li><li>TAG： 镜像标签</li><li>CREATED： 镜像创建时间</li><li>SIZE：镜像大小</li></ul><p>同一仓库的镜像有不同的tag，可以使用<code>repository:tag</code>来指定某一镜像</p><p>获取镜像时，不指定tag，则默认为<code>latest</code></p><h3 id="搜索镜像" tabindex="-1"><a class="header-anchor" href="#搜索镜像" aria-hidden="true">#</a> 搜索镜像</h3>`,73),u={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},p=n("code",null,"docker search",-1),v=i(`<p>搜索<code>centos</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$docker</span> search centos                                                                       <span class="token number">23</span>:48:33 
NAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
centos                            The official build of CentOS.                   <span class="token number">6833</span>      <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>       
ansible/centos7-ansible           Ansible on Centos7                              <span class="token number">135</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
consol/centos-xfce-vnc            Centos container with <span class="token string">&quot;headless&quot;</span> VNC session…   <span class="token number">132</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
jdeathe/centos-ssh                OpenSSH / Supervisor / EPEL/IUS/SCL Repos - …   <span class="token number">121</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
centos/systemd                    systemd enabled base container.                 <span class="token number">105</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>docker pull</code>下载镜像，<code>docker rmi</code>移除镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> pull centos:5.11
<span class="token punctuation">..</span>.
$ <span class="token function">docker</span> rmi centos:5.11
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建镜像" tabindex="-1"><a class="header-anchor" href="#创建镜像" aria-hidden="true">#</a> 创建镜像</h3><p>当从docker镜像仓库下载的镜像不能满足时，有两种方式创建自定义的镜像：</p><ul><li>从已有的仓库中提交镜像</li><li>使用Docker File创建镜像</li></ul><h4 id="使用docker-commit提交镜像" tabindex="-1"><a class="header-anchor" href="#使用docker-commit提交镜像" aria-hidden="true">#</a> 使用docker commit提交镜像</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;a new image&quot;</span> <span class="token parameter variable">-a</span> <span class="token string">&quot;me&quot;</span> cb50e17da895 dreamjz/centos:local
sha256:7a7a770a75a350729b9c84e512c97515e10e3075266eca8e2294b83321bd6c26
$ <span class="token function">docker</span> images
REPOSITORY       TAG       IMAGE ID       CREATED         SIZE
dreamjz/centos   <span class="token builtin class-name">local</span>     7a7a770a75a3   <span class="token number">5</span> seconds ago   231MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-m</code>：提交的描述信息</li><li><code>-a</code>: 指定镜像作者</li><li><code>cb50e17da895</code>: 容器ID</li><li><code>dreamjz/centos:local</code>: 目标镜像名</li></ul><h4 id="使用dokerfile构建镜像" tabindex="-1"><a class="header-anchor" href="#使用dokerfile构建镜像" aria-hidden="true">#</a> 使用Dokerfile构建镜像</h4><p>DockerFile是一个用来构建镜像的文本文件，内容包含了一条条构建镜像所需的指令和说明</p><p>下面以定制一个nginx镜像为例</p><p>创建一个空目录<code>\\$HOME/tmp/</code>,创建<code>Dockerfile</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> ~/tmp
$ <span class="token builtin class-name">cd</span> tmp
$ <span class="token function">touch</span> Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写入内容：</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> nginx</span>
<span class="token instruction"><span class="token keyword">RUN</span> echo <span class="token string">&#39;Local nginx imamge&#39;</span> &gt; /usr/share/nginx/html/index.html</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>FROM</code>:指定基础镜像，这里基于nginx镜像</li><li><code>RUN</code>:执行命令</li></ul><p>使用<code>docker build</code>构建镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> nginx:local <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>-t</code>:指定镜像名</li><li><code>.</code>:表示以当前构建打包路径</li></ul><p>查看镜像：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker images
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,24),m={href:"https://github.com/jaywcjlove/docker-tutorial",target:"_blank",rel:"noopener noreferrer"},b={href:"https://stackoverflow.com/questions/48957195/how-to-fix-docker-got-permission-denied-issue",target:"_blank",rel:"noopener noreferrer"},h={href:"http://www.runoob.com/docker/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function k(g,x){const s=o("ExternalLinkIcon");return c(),l("div",null,[t,n("p",null,[e("可以在"),n("a",u,[e("Dokcer Hub"),a(s)]),e("查找镜像，也可以使用"),p,e(":")]),v,n("ol",null,[n("li",null,[n("a",m,[e("Docker 入门教程"),a(s)]),e(" github repo")]),n("li",null,[n("a",b,[e("How to fix docker: Got permission denied issue"),a(s)]),e(" stackoverflow")]),n("li",null,[n("a",h,[e("Docker 教程"),a(s)]),e(" 教程")])])])}const E=d(r,[["render",k],["__file","get-started.html.vue"]]);export{E as default};

const e=JSON.parse('{"key":"v-1bdaf698","path":"/reading/en/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.3.html","title":"Linked Lists","lang":"zh-CN","frontmatter":{"title":"Linked Lists","date":"2022-01-25T00:00:00.000Z","category":["algorithm","data structure"],"tag":["linked list"],"timeline":true},"headers":[{"level":2,"title":"3.3.1 Definition","slug":"_3-3-1-definition","link":"#_3-3-1-definition","children":[]},{"level":2,"title":"3.3.2 Deletion and Insertion","slug":"_3-3-2-deletion-and-insertion","link":"#_3-3-2-deletion-and-insertion","children":[]},{"level":2,"title":"3.3.3 Josephus problem","slug":"_3-3-3-josephus-problem","link":"#_3-3-3-josephus-problem","children":[{"level":3,"title":"3.3.3.1 Using array for Josephus Problem","slug":"_3-3-3-1-using-array-for-josephus-problem","link":"#_3-3-3-1-using-array-for-josephus-problem","children":[]}]},{"level":2,"title":"Exercises","slug":"exercises","link":"#exercises","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1701449868000},"readingTime":{"minutes":6.01,"words":1804},"filePathRelative":"reading/en/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.3.md","localizedDate":"2022年1月25日","excerpt":"<p>When our primary interest is to go through a collection of items sequentially, one by one, we can organize the items as a <em>linked list</em>: a basic data structure where each item contains the information that we need to get to the next item. The primary advantage of linked lists over arrays is that the <mark>links provide us with the capability to  rearrange the items efficiently</mark>. This flexibility is gained at the expense of quick access to any arbitrary item in the list, because the only way to get to an item in the list is to follow links, one node to the next. There are a number of ways to organize linked lists, all starting with the following basic definition.</p>"}');export{e as data};

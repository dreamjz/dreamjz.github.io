const e=JSON.parse('{"key":"v-0b99f408","path":"/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.1.html","title":"Building Blocks","lang":"zh-CN","frontmatter":{"title":"Building Blocks","date":"2022-01-20T00:00:00.000Z","category":["algorithm","data structure"],"timeline":true},"headers":[{"level":2,"title":"3.1.1 Data Type","slug":"_3-1-1-data-type","link":"#_3-1-1-data-type","children":[]},{"level":2,"title":"3.1.2 Function Definition","slug":"_3-1-2-function-definition","link":"#_3-1-2-function-definition","children":[]},{"level":2,"title":"3.1.3 Types of Numbers","slug":"_3-1-3-types-of-numbers","link":"#_3-1-3-types-of-numbers","children":[]}],"git":{"updatedTime":1682668422000},"readingTime":{"minutes":3.38,"words":1014},"filePathRelative":"reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.1.md","localizedDate":"2022年1月20日","excerpt":"<p>All the data that we process on computer ultimately decompose into individual bits, but writing programs that exclusively process bits would be tiresome indeed. <em>Types</em> allow us to specify how we will use particular sets of bits and <em>functions</em> allow us to specify the operations that we will perform on the data. We use C <em>structures</em> to group together heterogeneous pieces of information, and we consider these basic C mechanisms, in the context of presenting a general approach to organizing our programs. Our primary goal is to lay the groundwork for the development, of the higher-level constructs that will serve as the basis for most of the algorithm in this book.</p>"}');export{e as data};

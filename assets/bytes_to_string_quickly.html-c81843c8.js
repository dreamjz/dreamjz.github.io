const n=JSON.parse('{"key":"v-6beeb8fc","path":"/blog/golang/bytes_to_string_quickly.html","title":"Bytes to String Quickly","lang":"zh-CN","frontmatter":{"title":"Bytes to String Quickly","date":"2023-09-13T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"1. unsafe.Pointer (Recommended)","slug":"_1-unsafe-pointer-recommended","link":"#_1-unsafe-pointer-recommended","children":[]},{"level":2,"title":"2. unsafe.String(ptr *byte, len IntegerType) string (Recommended v1.20)","slug":"_2-unsafe-string-ptr-byte-len-integertype-string-recommended-v1-20","link":"#_2-unsafe-string-ptr-byte-len-integertype-string-recommended-v1-20","children":[]},{"level":2,"title":"3. Type Conversion","slug":"_3-type-conversion","link":"#_3-type-conversion","children":[]},{"level":2,"title":"Benchmark","slug":"benchmark","link":"#benchmark","children":[]},{"level":2,"title":"4. Bytes To String using unsafe package (Not Recommended)","slug":"_4-bytes-to-string-using-unsafe-package-not-recommended","link":"#_4-bytes-to-string-using-unsafe-package-not-recommended","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1696353574000},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"blog/golang/bytes_to_string_quickly.md","localizedDate":"2023年9月13日","excerpt":"<p>Using <strong><code>unsafe</code></strong> package to convert <code>byte</code> slice to <code>string </code> is more efficient than <strong>type conversion</strong>.</p>\\n<h2> 1. <code>unsafe.Pointer</code> (Recommended)</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">BytesToStringUnsafePointer</span><span class=\\"token punctuation\\">(</span>buf <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">byte</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span><span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span>unsafe<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Pointer</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>buf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

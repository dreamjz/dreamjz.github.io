const n=JSON.parse(`{"key":"v-62f3befe","path":"/blog/golang/how/6.panic.html","title":"panic-recovery 底层实现总结","lang":"zh-CN","frontmatter":{"title":"panic-recovery 底层实现总结","date":"2023-10-10T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"1. 数据结构","slug":"_1-数据结构","link":"#_1-数据结构","children":[]},{"level":2,"title":"2. 触发 panic","slug":"_2-触发-panic","link":"#_2-触发-panic","children":[]},{"level":2,"title":"3. 执行 recovery","slug":"_3-执行-recovery","link":"#_3-执行-recovery","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1698138189000},"readingTime":{"minutes":3.04,"words":913},"filePathRelative":"blog/golang/how/6.panic.md","localizedDate":"2023年10月10日","excerpt":"<h2> 1. 数据结构</h2>\\n<p><code>panic</code> 关键字在 Go 语言的源代码是由数据结构 <a href=\\"https://draveness.me/golang/tree/runtime._panic\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>runtime._panic</code></a> 表示的：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// A _panic holds information about an active panic.</span>\\n<span class=\\"token comment\\">//</span>\\n<span class=\\"token comment\\">// A _panic value must only ever live on the stack.</span>\\n<span class=\\"token comment\\">//</span>\\n<span class=\\"token comment\\">// The argp and link fields are stack pointers, but don't need special</span>\\n<span class=\\"token comment\\">// handling during stack growth: because they are pointer-typed and</span>\\n<span class=\\"token comment\\">// _panic values only live on the stack, regular stack pointer</span>\\n<span class=\\"token comment\\">// adjustment takes care of them.</span>\\n<span class=\\"token keyword\\">type</span> _panic <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\targp      unsafe<span class=\\"token punctuation\\">.</span>Pointer <span class=\\"token comment\\">// pointer to arguments of deferred call run during panic; cannot move - known to liblink</span>\\n\\targ       any            <span class=\\"token comment\\">// argument to panic</span>\\n\\tlink      <span class=\\"token operator\\">*</span>_panic        <span class=\\"token comment\\">// link to earlier panic</span>\\n\\tpc        <span class=\\"token builtin\\">uintptr</span>        <span class=\\"token comment\\">// where to return to in runtime if this panic is bypassed</span>\\n\\tsp        unsafe<span class=\\"token punctuation\\">.</span>Pointer <span class=\\"token comment\\">// where to return to in runtime if this panic is bypassed</span>\\n\\trecovered <span class=\\"token builtin\\">bool</span>           <span class=\\"token comment\\">// whether this panic is over</span>\\n\\taborted   <span class=\\"token builtin\\">bool</span>           <span class=\\"token comment\\">// the panic was aborted</span>\\n\\tgoexit    <span class=\\"token builtin\\">bool</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};

const e=JSON.parse('{"key":"v-809ed732","path":"/note/rpc/gRPC/basic_tutorial.html","title":"Basics tutorial","lang":"zh-CN","frontmatter":{"title":"Basics tutorial","date":"2021-12-30T00:00:00.000Z","category":["golang","rpc"],"tag":["grpc"],"timeline":true,"article":false},"headers":[{"level":2,"title":"1. Why use gRPC","slug":"_1-why-use-grpc","link":"#_1-why-use-grpc","children":[]},{"level":2,"title":"2. Defining the service","slug":"_2-defining-the-service","link":"#_2-defining-the-service","children":[]},{"level":2,"title":"3. Generating client and server code","slug":"_3-generating-client-and-server-code","link":"#_3-generating-client-and-server-code","children":[]},{"level":2,"title":"4. Creating the server","slug":"_4-creating-the-server","link":"#_4-creating-the-server","children":[{"level":3,"title":"4.1 Implementing RouteGuide","slug":"_4-1-implementing-routeguide","link":"#_4-1-implementing-routeguide","children":[]},{"level":3,"title":"4.2 Simple RPC","slug":"_4-2-simple-rpc","link":"#_4-2-simple-rpc","children":[]},{"level":3,"title":"4.3 Server-side streaming RPC","slug":"_4-3-server-side-streaming-rpc","link":"#_4-3-server-side-streaming-rpc","children":[]},{"level":3,"title":"4.4 Client-side streaming RPC","slug":"_4-4-client-side-streaming-rpc","link":"#_4-4-client-side-streaming-rpc","children":[]},{"level":3,"title":"4.5 Bidirectional streaming RPC","slug":"_4-5-bidirectional-streaming-rpc","link":"#_4-5-bidirectional-streaming-rpc","children":[]}]},{"level":2,"title":"5. Starting the server","slug":"_5-starting-the-server","link":"#_5-starting-the-server","children":[]},{"level":2,"title":"6. Creating the client","slug":"_6-creating-the-client","link":"#_6-creating-the-client","children":[{"level":3,"title":"6.1 Creating a stub","slug":"_6-1-creating-a-stub","link":"#_6-1-creating-a-stub","children":[]},{"level":3,"title":"6.2 Calling service methods","slug":"_6-2-calling-service-methods","link":"#_6-2-calling-service-methods","children":[]},{"level":3,"title":"6.3 Simple RPC","slug":"_6-3-simple-rpc","link":"#_6-3-simple-rpc","children":[]},{"level":3,"title":"6.4 Server-side streaming RPC","slug":"_6-4-server-side-streaming-rpc","link":"#_6-4-server-side-streaming-rpc","children":[]},{"level":3,"title":"6.5 Client-side streaming RPC","slug":"_6-5-client-side-streaming-rpc","link":"#_6-5-client-side-streaming-rpc","children":[]},{"level":3,"title":"6.6 Bidirectional streaming RPC","slug":"_6-6-bidirectional-streaming-rpc","link":"#_6-6-bidirectional-streaming-rpc","children":[]}]},{"level":2,"title":"7. Try it out","slug":"_7-try-it-out","link":"#_7-try-it-out","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943930000},"readingTime":{"minutes":9.34,"words":2802},"filePathRelative":"note/rpc/gRPC/basic_tutorial.md","localizedDate":"2021年12月30日","excerpt":"<h2> 1. Why use gRPC</h2>\\n<p>The example is a simple route mapping application that lets clients get information about features on their route, create a summary of their route, and exchange route information such as traffic updates with the server and other clients.</p>"}');export{e as data};

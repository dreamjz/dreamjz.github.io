const n=JSON.parse('{"key":"v-40eed35c","path":"/note/golang/open-source-books/the-way-to-go/04/04.4.html","title":"4.4 变量","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"4.4.1 类型","slug":"_4-4-1-类型","link":"#_4-4-1-类型","children":[{"level":3,"title":"值类型","slug":"值类型","link":"#值类型","children":[]},{"level":3,"title":"引用类型","slug":"引用类型","link":"#引用类型","children":[]}]},{"level":2,"title":"4.4.2 init 函数","slug":"_4-4-2-init-函数","link":"#_4-4-2-init-函数","children":[]}],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"note/golang/open-source-books/the-way-to-go/04/04.4.md","excerpt":"<h1> 4.4 变量</h1>\\n<ul>\\n<li>\\n<p>使用 <code>var</code> 声明：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">var</span> identifier <span class=\\"token keyword\\">type</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// 声明</span>\\n<span class=\\"token keyword\\">var</span> a <span class=\\"token builtin\\">int</span>\\n<span class=\\"token keyword\\">var</span> b <span class=\\"token builtin\\">string</span>\\n<span class=\\"token keyword\\">var</span> <span class=\\"token punctuation\\">(</span>\\n\\tc <span class=\\"token builtin\\">bool</span>\\n    d <span class=\\"token operator\\">*</span><span class=\\"token builtin\\">int</span>\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>采用驼峰命名法</p>\\n</li>\\n<li>\\n<p>赋值：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// 声明并赋值</span>\\n<span class=\\"token keyword\\">var</span> e <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token comment\\">// 自动推断类型（编译期）</span>\\n<span class=\\"token keyword\\">var</span> f <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"f\\"</span>\\n<span class=\\"token comment\\">// 并行赋值</span>\\n<span class=\\"token keyword\\">var</span> g<span class=\\"token punctuation\\">,</span> h <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span>\\n<span class=\\"token comment\\">// 交换</span>\\ng<span class=\\"token punctuation\\">,</span> h <span class=\\"token operator\\">=</span> h<span class=\\"token punctuation\\">,</span> g <span class=\\"token comment\\">// g:2, h: 1</span>\\n<span class=\\"token comment\\">// 抛弃值</span>\\n<span class=\\"token boolean\\">_</span><span class=\\"token punctuation\\">,</span> b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">7</span> \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><strong>全局变量</strong>： 可以声明，但不使用</p>\\n</li>\\n<li>\\n<p><strong>局部变量</strong>： 声明后必须使用，可使用 <code>:=</code> 进行简短声明并赋值</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code>a <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">1</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div></li>\\n</ul>"}');export{n as data};

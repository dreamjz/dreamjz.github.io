const n=JSON.parse('{"key":"v-3f39fabd","path":"/note/golang/open-source-books/the-way-to-go/04/04.3.html","title":"4.3 常量","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"4.3.1 赋值","slug":"_4-3-1-赋值","link":"#_4-3-1-赋值","children":[]},{"level":2,"title":"4.3.2 枚举","slug":"_4-3-2-枚举","link":"#_4-3-2-枚举","children":[{"level":3,"title":"iota","slug":"iota","link":"#iota","children":[]}]}],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"note/golang/open-source-books/the-way-to-go/04/04.3.md","excerpt":"<h1> 4.3 常量</h1>\\n<ul>\\n<li>\\n<p>使用 <code>const</code> 定义</p>\\n</li>\\n<li>\\n<p>存储不会改变的数据</p>\\n</li>\\n<li>\\n<p>数据类型只能为：布尔型、数字型、字符串</p>\\n</li>\\n<li>\\n<p>格式：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">const</span> indetifier <span class=\\"token punctuation\\">[</span><span class=\\"token keyword\\">type</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> value\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div><ul>\\n<li>显式类型定义：<code>const str string = \\"A\\"</code></li>\\n<li>隐式类型定义：<code>const Pi = 3.14</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>常量值必须是<strong>编译期</strong>可确定的</p>\\n</li>\\n</ul>"}');export{n as data};

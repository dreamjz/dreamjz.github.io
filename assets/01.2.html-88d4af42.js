const n=JSON.parse(`{"key":"v-2c75103d","path":"/reading/algorithm/offer_oriented/AL_DS/01_integer/01.2.html","title":"1.2 二进制","lang":"zh-CN","frontmatter":{"title":"1.2 二进制","date":"2023-08-30T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":3,"title":"1.2.1 问题02： 二进制加法","slug":"_1-2-1-问题02-二进制加法","link":"#_1-2-1-问题02-二进制加法","children":[]},{"level":3,"title":"1.2.2 问题03：前n个数字二进制形式中1的个数","slug":"_1-2-2-问题03-前n个数字二进制形式中1的个数","link":"#_1-2-2-问题03-前n个数字二进制形式中1的个数","children":[]},{"level":3,"title":"1.2.3 问题04: 只出现一次的数字","slug":"_1-2-3-问题04-只出现一次的数字","link":"#_1-2-3-问题04-只出现一次的数字","children":[]},{"level":3,"title":"1.2.4 问题05: 单词长度的最大乘积","slug":"_1-2-4-问题05-单词长度的最大乘积","link":"#_1-2-4-问题05-单词长度的最大乘积","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1693581879000},"readingTime":{"minutes":6.73,"words":2020},"filePathRelative":"reading/algorithm/offer_oriented/AL_DS/01_integer/01.2.md","localizedDate":"2023年8月30日","excerpt":"<h3> 1.2.1 问题02： 二进制加法</h3>\\n<p>输入两个表示二进制的字符串，计算其和并以二进制字符串形式输出。</p>\\n<p>如，“11” 和 “01”，则输出“101”。</p>\\n<h4> 1.2.1.1 分析</h4>\\n<p>若直接将字符串转换成数字类型，因为没有确定字符串的长度，所以会导致溢出。</p>\\n<p>可将字符按位对齐，以逢二进一的规则计算。</p>\\n<h4> 1.2.1.2 题解</h4>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> soint\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token string\\">\\"unsafe\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">addBinary</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">{</span>\\n    lenA<span class=\\"token punctuation\\">,</span> lenB <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">)</span>\\n    buf <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">byte</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>lenA<span class=\\"token punctuation\\">,</span> lenB<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n\\n    carry <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">0</span>\\n    <span class=\\"token comment\\">// 从最低位开始</span>\\n    <span class=\\"token keyword\\">for</span> i<span class=\\"token punctuation\\">,</span> j <span class=\\"token operator\\">:=</span> lenA<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> lenB<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span> j <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> <span class=\\"token punctuation\\">{</span>\\n       digitA<span class=\\"token punctuation\\">,</span> digitB <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span>\\n       <span class=\\"token keyword\\">if</span> i <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n          digitA <span class=\\"token operator\\">=</span> <span class=\\"token function\\">toDigit</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token keyword\\">if</span> j <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n          digitB <span class=\\"token operator\\">=</span> <span class=\\"token function\\">toDigit</span><span class=\\"token punctuation\\">(</span>b<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token comment\\">// 按位计算</span>\\n       digitSum <span class=\\"token operator\\">:=</span> digitA <span class=\\"token operator\\">+</span> digitB <span class=\\"token operator\\">+</span> carry\\n\\n       <span class=\\"token keyword\\">var</span> charSum <span class=\\"token builtin\\">byte</span> <span class=\\"token operator\\">=</span> <span class=\\"token char\\">'0'</span>\\n       <span class=\\"token keyword\\">if</span> digitSum <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">{</span>\\n          carry <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span>\\n          <span class=\\"token keyword\\">if</span> digitSum <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span> <span class=\\"token punctuation\\">{</span>\\n             charSum <span class=\\"token operator\\">=</span> <span class=\\"token char\\">'1'</span>\\n          <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token keyword\\">if</span> digitSum <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">{</span>\\n          charSum <span class=\\"token operator\\">=</span> <span class=\\"token char\\">'1'</span>\\n          carry <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token keyword\\">if</span> digitSum <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n          carry <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token comment\\">// 存入结果</span>\\n       buf<span class=\\"token punctuation\\">[</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">+</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> charSum\\n\\n       i<span class=\\"token operator\\">--</span>\\n       j<span class=\\"token operator\\">--</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">if</span> carry <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n       buf<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token char\\">'1'</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n       buf <span class=\\"token operator\\">=</span> buf<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token punctuation\\">]</span> <span class=\\"token comment\\">// 首位为0，则抛弃</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 将字节数组转化为字符串</span>\\n    result <span class=\\"token operator\\">:=</span> unsafe<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span>unsafe<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">SliceData</span><span class=\\"token punctuation\\">(</span>buf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token function\\">len</span><span class=\\"token punctuation\\">(</span>buf<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span> result\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> a <span class=\\"token operator\\">&gt;</span> b <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token keyword\\">return</span> a\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> b\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">toDigit</span><span class=\\"token punctuation\\">(</span>c <span class=\\"token builtin\\">byte</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> c<span class=\\"token operator\\">-</span><span class=\\"token char\\">'0'</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">1</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};

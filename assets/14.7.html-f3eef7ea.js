import{_ as l,Z as e,$ as i,a3 as t}from"./framework-09afcf0b.js";const a={},_=t('<h1 id="_14-7-互斥锁和通道" tabindex="-1"><a class="header-anchor" href="#_14-7-互斥锁和通道" aria-hidden="true">#</a> 14.7 互斥锁和通道</h1><p>普遍的经验法则：</p><ul><li><p>使用锁的情景：</p><ul><li>访问共享数据结构中的缓存信息</li><li>保存应用程序上下文和状态信息数据</li></ul></li><li><p>使用通道的情景：</p><ul><li>与异步操作的结果进行交互</li><li>分发任务</li><li>传递数据所有权</li></ul></li></ul><p>当你发现你的锁使用规则变得很复杂时，可以反省使用通道会不会使问题变得简单些。</p>',4),c=[_];function r(n,o){return e(),i("div",null,c)}const d=l(a,[["render",r],["__file","14.7.html.vue"]]);export{d as default};

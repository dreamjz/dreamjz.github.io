const n=JSON.parse('{"key":"v-414df518","path":"/note/golang/open-source-books/the-way-to-go/06/06.8.html","title":"6.8 闭包","lang":"zh-CN","frontmatter":{},"headers":[],"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"note/golang/open-source-books/the-way-to-go/06/06.8.md","excerpt":"<h1> 6.8 闭包</h1>\\n<p>匿名函数同样被称之为闭包（函数式语言的术语）：它们被允许调用定义在其它环境下的变量。</p>\\n<p>闭包可使得某个函数捕捉到一些外部状态，例如：函数被创建时的状态。另一种表示方式为：一个闭包继承了函数所声明时的作用域。这种状态（作用域内的变量）都被共享到闭包的环境中，因此这些变量可以在闭包中被操作，直到被销毁。</p>\\n<ul>\\n<li>\\n<p>可直接调用</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        fmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>配合<code>defer</code>:</p>\\n</li>\\n<li>\\n<p>配合<code>go</code></p>\\n</li>\\n</ul>"}');export{n as data};

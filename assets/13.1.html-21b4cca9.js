import{_ as n,Z as a,$ as s,a3 as e}from"./framework-09afcf0b.js";const t={},o=e(`<h1 id="_13-1-错误处理" tabindex="-1"><a class="header-anchor" href="#_13-1-错误处理" aria-hidden="true">#</a> 13.1 错误处理</h1><p>Go 有预先定义的 <code>error</code> 接口类型</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-1-1-定义错误" tabindex="-1"><a class="header-anchor" href="#_13-1-1-定义错误" aria-hidden="true">#</a> 13.1.1 定义错误</h2><p>使用<code>errors</code>创建新的错误类型：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>myErr <span class="token operator">:=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;my error&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通常错误信息都有<code>Error: ...</code>的前缀，所以自定以的错误信息不要以大写字母开头。</p><h2 id="_13-1-2-使用-fmt-创建错误对象" tabindex="-1"><a class="header-anchor" href="#_13-1-2-使用-fmt-创建错误对象" aria-hidden="true">#</a> 13.1.2 使用 fmt 创建错误对象</h2><p><code>fmt.Errorf()</code>使用错误信息生成错误对象：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;math: square root of negative number %g&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),r=[o];function c(i,p){return a(),s("div",null,r)}const l=n(t,[["render",c],["__file","13.1.html.vue"]]);export{l as default};

import{_ as o,Z as c,$ as p,a0 as n,a1 as s,a2 as e,a4 as t,H as i}from"./framework-d03928c9.js";const l={},u=t(`<h1 id="_12-生命周期钩子" tabindex="-1"><a class="header-anchor" href="#_12-生命周期钩子" aria-hidden="true">#</a> 12. 生命周期钩子</h1><p>每个 Vue 组件实例在创建时都需要经历一系列的初始化步骤，在此过程中，它会运行被称为生命周期钩子的函数，让开发者有机会在特定阶段运行自己的代码。</p><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/lifecycle.16e4c08e.png" alt="组件生命周期图示" tabindex="0" loading="lazy"><figcaption>组件生命周期图示</figcaption></figure><h2 id="_12-1-注册周期钩子" tabindex="-1"><a class="header-anchor" href="#_12-1-注册周期钩子" aria-hidden="true">#</a> 12.1 注册周期钩子</h2><p><code>onMounted</code> 钩子可以用来在组件完成初始渲染并创建 DOM 节点后运行代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">the component is now mounted.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),r={href:"https://cn.vuejs.org/api/composition-api-lifecycle.html#onmounted",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"onMounted",-1),k={href:"https://cn.vuejs.org/api/composition-api-lifecycle.html#onupdated",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"onUpdated",-1),h={href:"https://cn.vuejs.org/api/composition-api-lifecycle.html#onunmounted",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"onUnmounted",-1),_={href:"https://cn.vuejs.org/api/composition-api-lifecycle.html",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>当调用 <code>onMounted</code> 时，Vue 会自动将回调函数注册到当前正被初始化的组件实例上。这意味着这些钩子应当在组件初始化时被<strong>同步</strong>注册。例如，请不要这样做：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 异步注册时当前组件实例已丢失</span>
    <span class="token comment">// 这将不会正常工作</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这并不意味着对 <code>onMounted</code> 的调用必须放在 <code>setup()</code> 或 <code>&lt;script setup&gt;</code> 内的词法上下文中。<code>onMounted()</code> 也可以在一个外部函数中调用，只要调用栈是同步的，且最终起源自 <code>setup()</code> 就可以。</p>`,3);function f(b,x){const a=i("ExternalLinkIcon");return c(),p("div",null,[u,n("p",null,[s("还有其他一些钩子，会在实例生命周期的不同阶段被调用，最常用的是 "),n("a",r,[d,e(a)]),s("、"),n("a",k,[m,e(a)]),s(" 和 "),n("a",h,[v,e(a)]),s("。所有生命周期钩子的完整参考及其用法请参考 "),n("a",_,[s("API 索引"),e(a)]),s("。")]),g])}const j=o(l,[["render",f],["__file","01.10.lifecycle_hooks.html.vue"]]);export{j as default};

(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{687:function(t,a,s){"use strict";s.r(a);var n=s(5),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-what-is-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-what-is-string"}},[t._v("#")]),t._v(" 1. What is String")]),t._v(" "),s("p",[t._v("We use the term "),s("em",[t._v("string")]),t._v(" to refer to a variable-length array of characters, defined by a starting point and by a string-termination character marking the end.")]),t._v(" "),s("p",[t._v("Strings are valuable as low-level data structures for two basic reasons:")]),t._v(" "),s("ul",[s("li",[t._v("Many computing applications involve processing textual data, which can be represented directly with strings.")]),t._v(" "),s("li",[t._v("Many computer systems provide direct and efficient access to "),s("em",[t._v("bytes")]),t._v(" of memory, which correspond directly to characters in strings. In many situations, the string abstraction matches needs of the application to the capabilities of the machine.")])]),t._v(" "),s("p",[t._v("The abstract notion of sequence of characters ending with a string-termination character could be implemented in many ways. For example, we can use array, linked list and other implementations.")]),t._v(" "),s("p",[s("mark",[t._v("The difference between a string and an array of characters revolves around "),s("em",[t._v("length")]),t._v(".")]),t._v(" Both represent contiguous areas of memory, but the "),s("mark",[t._v("length of an array is set at the time that the array is created")]),t._v(", whereas the "),s("mark",[t._v("length of a string may change during the execution of a program")]),t._v(".")]),t._v(" "),s("p",[t._v("We need to reserve memory for a string, either at compile time, by declaring a fixed-length array of characters, or at execution time, by calling "),s("code",[t._v("malloc")]),t._v(".")]),t._v(" "),s("p",[t._v("Once the array is allocated, we can fill it with characters, starting at the beginning, and ending with the string-termination character:")]),t._v(" "),s("ul",[s("li",[t._v("Without a string-termination character, a string is no more or no less than an array of characters")]),t._v(" "),s("li",[t._v("With the string-termination character, we can work at a higher level of abstraction and consider only the portion of the array from the beginning to the string-termination character to contain meaningful information. (In C, it is "),s("code",[t._v("\\0")]),t._v(")")])]),t._v(" "),s("h2",{attrs:{id:"_2-elementary-string-processing-operations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-elementary-string-processing-operations"}},[t._v("#")]),t._v(" 2. Elementary string-processing operations")]),t._v(" "),s("p",[t._v("This table gives implementation of basic string-processing operations, using two different C primitives.")]),t._v(" "),s("ul",[s("li",[t._v("The indexed-array approach is a more natural way to express the algorithms and leads to code easier to understand")]),t._v(" "),s("li",[t._v("The pointer approach leads to more compact code")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-indexed-array-versions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-indexed-array-versions"}},[t._v("#")]),t._v(" 2.1 Indexed array versions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operation")]),t._v(" "),s("th",[t._v("Code")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("em",[t._v("Compute string length")]),t._v(" "),s("code",[t._v("(strlen(a))")])]),t._v(" "),s("td",[s("code",[t._v("for(i=0; a[i]!=0;i++);return i;")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Copy")]),t._v(" "),s("code",[t._v("(strcpy(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("for (i = 0; (a[i] = b[i])!= 0; i++);")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Compare")]),t._v(" "),s("code",[t._v("(strcmp(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("for(i = 0; a[i] == b[i]; i++) if(a[i]==0) return 0;")]),s("br"),s("code",[t._v("return a[i] - b[i];")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Compare(prefix)")]),t._v(" "),s("code",[t._v("(strcmp(a, b, strlen(a)))")])]),t._v(" "),s("td",[s("code",[t._v("for (i=0;a[i]==b[i];i++) if(a[i]==0) return 0;")]),s("br"),s("code",[t._v("if(a[i]==0) return 0;")]),s("br"),s("code",[t._v("return a[i]-b[i];")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Append")]),s("code",[t._v("(strcat(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("strcpy(a+strlen(a), b)")])])])])]),t._v(" "),s("h3",{attrs:{id:"_2-2-equivalent-pointer-versions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-equivalent-pointer-versions"}},[t._v("#")]),t._v(" 2.2 Equivalent Pointer versions")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Operation")]),t._v(" "),s("th",[t._v("Code")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("em",[t._v("Compute string length")]),t._v(" "),s("code",[t._v("(strlen(a))")])]),t._v(" "),s("td",[s("code",[t._v("b=a; while(*b++); return b-a-1;")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Copy")]),t._v(" "),s("code",[t._v("(strcpy(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("while(*a++ = *b++);")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Compare")]),t._v(" "),s("code",[t._v("(strcmp(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("while(*a++ == *b++) if(*(a-1)==0) return 0;")]),s("br"),s("code",[t._v("return *(a-1) - *(b-1);")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Compare(prefix)")]),t._v(" "),s("code",[t._v("strcmp(a, b , strlen(a))")])]),t._v(" "),s("td",[s("code",[t._v("while (*a++ == *b++) if (*(a-1)==0) return 0;")]),s("br"),s("code",[t._v("if (*(a-1) == 0) return 0;")]),s("br"),s("code",[t._v("return *(a-1) - *(b-1);")])])]),t._v(" "),s("tr",[s("td",[s("em",[t._v("Append")]),s("code",[t._v("(strcat(a, b))")])]),t._v(" "),s("td",[s("code",[t._v("strcpy(a+strlen(a), b)")])])])])]),t._v(" "),s("p",[t._v("One of the most important operations that we perform on strings is the "),s("em",[t._v("compare")]),t._v(" operation, which tell us which of two strings would appear first in the dictionary. This ordering is called "),s("em",[t._v("lexicographic order")]),t._v(" (字典序).")]),t._v(" "),s("h2",{attrs:{id:"_3-string-search-program-3-15"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-string-search-program-3-15"}},[t._v("#")]),t._v(" 3. String search (program-3.15)")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// program_3.15 String Search")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parameter list cannot be empty"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" argv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"String: %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// read entered string")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// search string")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pos: %d, "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br")])]),s("p",[t._v("This program discovers all occurrences of a word form the "),s("code",[t._v("stdin")]),t._v(" in a large text string.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("a")]),t._v(" : we declare the text string as a fixed-size character array (could also use "),s("code",[t._v("malloc")]),t._v(").")]),t._v(" "),s("li",[s("code",[t._v("argv[1]")]),t._v(": the command line argument string pointer, its memory is allocated by the system before the program is invoked.")]),t._v(" "),s("li",[t._v("For each starting position in "),s("code",[t._v("a")]),t._v(", we try matching the substring starting at that position in "),s("code",[t._v("p")]),t._v(", testing for equality character one by one.")]),t._v(" "),s("li",[t._v("Whenever we reach the end of "),s("code",[t._v("p")]),t._v(" successfully, we print out the starting position "),s("code",[t._v("i")]),t._v(".")])]),t._v(" "),s("h2",{attrs:{id:"_4-performance-bug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-performance-bug"}},[t._v("#")]),t._v(" 4. Performance Bug")]),t._v(" "),s("p",[t._v("String processing provides a convincing example of the need to be knowledgeable about the performance of library functions. The problem is that a "),s("mark",[t._v("library function might take more time than we expect")]),t._v(".")]),t._v(" "),s("p",[t._v("For example, "),s("em",[t._v("determining the length of a string takes time proportional to the length of the string")]),t._v(". Ignoring this fact can lead to severe performance problems.")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("The code fragment above takes time proportional to at least the "),s("em",[t._v("square")]),t._v(" of the length of "),s("code",[t._v("a")]),t._v(", no matter what code is in the body of the loop, it goes all the way through "),s("code",[t._v("a")]),t._v(" to determine its length each time through the loop.")]),t._v(" "),s("p",[t._v("Problem such as this are difficult to detect because the program might work fine for small strings, but then slow down or even never finish when it goes into production.")]),t._v(" "),s("p",[t._v("This kind of error is called a "),s("em",[s("strong",[t._v("performance bug")])]),t._v(", the code can be verified to be correct, but it does not perform as efficiently as we expect.")]),t._v(" "),s("p",[s("mark",[t._v("Library functions, all to often, cannot guarantee to provide the best performance for all applications. Even if the performance is well documented, we have no assurance  that some future implementation might not involve performance changes that will have adverse effects on our programs.")])]),t._v(" "),s("h2",{attrs:{id:"_5-memory-allocation-for-strings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-memory-allocation-for-strings"}},[t._v("#")]),t._v(" 5. Memory allocation for strings")]),t._v(" "),s("p",[t._v("Memory allocation for strings is more difficult than linked list because strings "),s("mark",[t._v("vary in size")]),t._v(". We tend to assume that each string sits in memory of indeterminate allocation,  just big enough for the string and its termination character.")]),t._v(" "),s("p",[t._v("So we must be very careful to ensure adequate allocation when we are performing operations that build or lengthen strings.")]),t._v(" "),s("h2",{attrs:{id:"exercises"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exercises"}},[t._v("#")]),t._v(" Exercises")]),t._v(" "),s("ul",[s("li",[t._v("3.56")])]),t._v(" "),s("h2",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[t._v("#")]),t._v(" Reference")]),t._v(" "),s("ol",[s("li",[s("a",{attrs:{href:"https://www.amazon.com/Algorithms-Parts-1-4-Fundamentals-Structures-dp-0201314525/dp/0201314525/ref=mt_other?_encoding=UTF8&me=&qid=",target:"_blank",rel:"noopener noreferrer"}},[t._v("Algorithms in C"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://stackoverflow.com/questions/11968558/how-to-enter-the-value-of-eof-in-the-terminal",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to enter the value of EOF in the terminal"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);
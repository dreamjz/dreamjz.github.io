(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{697:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("链表提供了高效的节点重排能力，顺序性的节点访问方式以及可以通过增删节点来灵活调整链表的长度。")]),s._v(" "),a("p",[s._v("当一个列表键包含了数量较多或元素都是长度较长的字符串时，Redis 会使用链表作为其底层实现。")]),s._v(" "),a("p",[s._v("除了列表键之外，发布与订阅、慢查询、监视器等功能也用到了链表，Redis 服务器本身还使用链表来保存多个客户端的状态信息，以及使用链表来构建客户端输出缓冲区 (output buffer)。")]),s._v(" "),a("h2",{attrs:{id:"_2-1-链表和链表节点的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-链表和链表节点的实现"}},[s._v("#")]),s._v(" 2.1 链表和链表节点的实现")]),s._v(" "),a("p",[s._v("每个链表节点使用一个 "),a("a",{attrs:{href:"https://github.com/redis/redis/blob/d96f47cf06b1cc24b82109e0e87ac5428517525a/src/adlist.h",target:"_blank",rel:"noopener noreferrer"}},[s._v("adlist.h/listNode"),a("OutboundLink")],1),s._v(" 结构表示：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前置节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("prev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后置节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("listNode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点值")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("多个 listNode 可以通过 prev 和 next 指针组成双端链表。")]),s._v(" "),a("p",[s._v("Redis 使用 "),a("a",{attrs:{href:"https://github.com/redis/redis/blob/d96f47cf06b1cc24b82109e0e87ac5428517525a/src/adlist.h",target:"_blank",rel:"noopener noreferrer"}},[s._v("adlist.h/list"),a("OutboundLink")],1),s._v(" 来持有链表：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("list")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表头节点")]),s._v("\n    listNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("head"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表尾节点")]),s._v("\n    listNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("tail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 链表节点数量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点复制函数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点值释放函数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("free"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点值对比函数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("list 结构为链表提供了表头指针 head、表尾指针 tail、链表长度计数器 len 以及三个实现多台链表所需的特定函数：")]),s._v(" "),a("ul",[a("li",[s._v("dup 函数用于复制链表节点所保存的值")]),s._v(" "),a("li",[s._v("free 函数用于释放链表节点所保存的值")]),s._v(" "),a("li",[s._v("match 函数用于对比链表节点所保存的值和输入值是否相等")])]),s._v(" "),a("p",[s._v("Redis 链表实现了以下特性：")]),s._v(" "),a("ul",[a("li",[s._v("双端：链表节点带有 prev 和 next 指针，获取某个节点的前置和后置节点的时间复杂度都是 "),a("em",[s._v("O(1)")])]),s._v(" "),a("li",[s._v("无环： 表头节点的 prev 和表尾节点的 next 均指向 NULL，对链表的访问以 NULL 为终点")]),s._v(" "),a("li",[s._v("带表头和表尾指针：通过 list.head 和 list.tail 访问表头和表尾指针的时间复杂度为 "),a("em",[s._v("O(1)")])]),s._v(" "),a("li",[s._v("多态： 链表节点使用 void* 指针保存节点值，并且可以通过 dup、free、match 为节点值设置类型特定函数，所以链表可以用于保存不同类型的值")])]),s._v(" "),a("h2",{attrs:{id:"_2-2-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-总结"}},[s._v("#")]),s._v(" 2.2 总结")]),s._v(" "),a("ul",[a("li",[s._v("链表被广泛用于实现 Redis 各种功能，例如列表键、发布与订阅、慢查询、监视器等")]),s._v(" "),a("li",[s._v("每个链表节点由一个 listNode 结构表示，每个节点都前置和后置节点的指针，Redis 实现的是双端链表")]),s._v(" "),a("li",[s._v("每个链表由 list 结构表示，这个结构带有表头和表尾节点指针，链表长度等信息")]),s._v(" "),a("li",[s._v("因链表表头节点的前置节点和表尾节点的后置节点均指向 NULL，故Redis 的链表是无环链表")]),s._v(" "),a("li",[s._v("通过为链表设置不同的类型特定函数，Redis 链表可以用于保存各种不同的类型的值")])])])}),[],!1,null,null,null);t.default=e.exports}}]);
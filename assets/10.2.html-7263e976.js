const e=JSON.parse('{"key":"v-33389004","path":"/note/golang/open-source-books/the-way-to-go/10/10.2.html","title":"10.2 使用工厂方法创建结构体实例","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"10.2.1 结构体工厂","slug":"_10-2-1-结构体工厂","link":"#_10-2-1-结构体工厂","children":[{"level":3,"title":"强制使用","slug":"强制使用","link":"#强制使用","children":[]}]}],"readingTime":{"minutes":0.4,"words":121},"filePathRelative":"note/golang/open-source-books/the-way-to-go/10/10.2.md","excerpt":"<h1> 10.2 使用工厂方法创建结构体实例</h1>\\n<h2> 10.2.1 结构体工厂</h2>\\n<p>工厂函数名一般以<code>New/new</code>开头。</p>\\n<p>假设定义<code>File</code>:</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> File <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n    fd <span class=\\"token builtin\\">int</span> \\t\\t<span class=\\"token comment\\">// 文件描述符</span>\\n    name <span class=\\"token builtin\\">string</span> <span class=\\"token comment\\">// 文件名 </span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

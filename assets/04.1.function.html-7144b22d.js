const e=JSON.parse('{"key":"v-829e24fa","path":"/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.1.function.html","title":"4.1 函数调用","lang":"zh-CN","frontmatter":{"title":"4.1 函数调用","date":"2023-09-25T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"4.1.1 调用惯例","slug":"_4-1-1-调用惯例","link":"#_4-1-1-调用惯例","children":[{"level":3,"title":"C","slug":"c","link":"#c","children":[]},{"level":3,"title":"Go","slug":"go","link":"#go","children":[]},{"level":3,"title":"两种方式的对比","slug":"两种方式的对比","link":"#两种方式的对比","children":[]}]},{"level":2,"title":"4.1.2 参数传递","slug":"_4-1-2-参数传递","link":"#_4-1-2-参数传递","children":[{"level":3,"title":"整型和数组","slug":"整型和数组","link":"#整型和数组","children":[]},{"level":3,"title":"结构体和指针","slug":"结构体和指针","link":"#结构体和指针","children":[]},{"level":3,"title":"4.1.3 小结","slug":"_4-1-3-小结","link":"#_4-1-3-小结","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":8.89,"words":2667},"filePathRelative":"reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.1.function.md","localizedDate":"2023年9月25日","excerpt":"<h2> 4.1.1 调用惯例</h2>\\n<h3> C</h3>\\n<p>使用 <a href=\\"https://gcc.gnu.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">gcc</a>或者 <a href=\\"https://clang.llvm.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">clang</a> 将 C 语言编译成汇编代码是分析其调用惯例的最好方法，从汇编语言中可以了解函数调用的具体过程。</p>\\n<p>以<code>gcc</code>编译器为例（备注：我用的是windows的版本，原书使用linux）：</p>"}');export{e as data};

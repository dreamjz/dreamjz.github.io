import{_ as a,Z as p,$ as t,a0 as n,a1 as e,a2 as o,a3 as c,H as l}from"./framework-09afcf0b.js";const i={},r=c(`<h2 id="_1-遍历简单元素的切片" tabindex="-1"><a class="header-anchor" href="#_1-遍历简单元素的切片" aria-hidden="true">#</a> 1. 遍历简单元素的切片</h2><p>以整型切片为例：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">iterUsingFor</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterUsingRangeIdx</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterUsingRangeVal</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> v
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token comment">// test funcs </span>

<span class="token keyword">func</span> <span class="token function">BenchmarkIterIntSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name <span class="token builtin">string</span>
		f    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingFor&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingFor<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeIdx&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingRangeIdx<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeVal&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingRangeVal<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">100000</span><span class="token punctuation">;</span> k <span class="token operator">*=</span> <span class="token number">10</span> <span class="token punctuation">{</span>
		nums <span class="token operator">:=</span> <span class="token function">genSliceWithCap</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>

		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
			b<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%-20s_%.e&quot;</span><span class="token punctuation">,</span> tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
					tt<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			k <span class="token operator">=</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">648061189</span>                <span class="token number">1.799</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">558745578</span>                <span class="token number">2.117</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">659441024</span>                <span class="token number">1.817</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">235078812</span>                <span class="token number">4.992</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">243918748</span>                <span class="token number">4.898</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">238101757</span>                <span class="token number">4.989</span> ns<span class="token operator">/</span>op           <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">31692288</span>                <span class="token number">34.52</span> ns<span class="token operator">/</span>op            <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">35111434</span>                <span class="token number">32.87</span> ns<span class="token operator">/</span>op            <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>             <span class="token number">34526412</span>                <span class="token number">34.20</span> ns<span class="token operator">/</span>op            <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>              <span class="token number">4440621</span>               <span class="token number">280.1</span> ns<span class="token operator">/</span>op             <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>              <span class="token number">4533476</span>               <span class="token number">262.6</span> ns<span class="token operator">/</span>op             <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>              <span class="token number">4577653</span>               <span class="token number">260.0</span> ns<span class="token operator">/</span>op             <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">440082</span>              <span class="token number">2529</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">448012</span>              <span class="token number">2545</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">441699</span>              <span class="token number">2667</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">47096</span>             <span class="token number">25617</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">47168</span>             <span class="token number">25343</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op
BenchmarkIterIntSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">47026</span>             <span class="token number">25219</span> ns<span class="token operator">/</span>op               <span class="token number">0</span> B<span class="token operator">/</span>op          <span class="token number">0</span> allocs<span class="token operator">/</span>op

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出三种遍历方式差距不大。</p><h2 id="_2-遍历-结构体-切片" tabindex="-1"><a class="header-anchor" href="#_2-遍历-结构体-切片" aria-hidden="true">#</a> 2. 遍历 结构体 切片</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">type</span> MySt <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	id   <span class="token builtin">int</span>
	data <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterMsUsingFor</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res MySt
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterMsUsingRangeIdx</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res MySt
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterMsUsingRangeVal</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res MySt
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> v
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token comment">// tests</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkIterStructSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name <span class="token builtin">string</span>
		f    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>MySt<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingFor&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsUsingFor<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeIdx&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsUsingRangeIdx<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeVal&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsUsingRangeVal<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">;</span> k <span class="token operator">*=</span> <span class="token number">10</span> <span class="token punctuation">{</span>
		a <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>MySt<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
			b<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%-20s_%.e&quot;</span><span class="token punctuation">,</span> tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
					tt<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			k <span class="token operator">=</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>BenchmarkIterStructSlice/UsingFor_____________0e+00-12          665996229                1.843 ns/op
BenchmarkIterStructSlice/UsingRangeIdx________0e+00-12          569261311                2.073 ns/op
BenchmarkIterStructSlice/UsingRangeVal________0e+00-12          599262607                2.030 ns/op
BenchmarkIterStructSlice/UsingFor_____________1e+01-12          255458889                4.777 ns/op
BenchmarkIterStructSlice/UsingRangeIdx________1e+01-12          232607139                4.888 ns/op
BenchmarkIterStructSlice/UsingRangeVal________1e+01-12            759051              1472 ns/op
BenchmarkIterStructSlice/UsingFor_____________1e+02-12          35052460                34.58 ns/op
BenchmarkIterStructSlice/UsingRangeIdx________1e+02-12          39883009                32.57 ns/op
BenchmarkIterStructSlice/UsingRangeVal________1e+02-12             71300             15636 ns/op
BenchmarkIterStructSlice/UsingFor_____________1e+03-12           4288478               268.2 ns/op
BenchmarkIterStructSlice/UsingRangeIdx________1e+03-12           4752506               267.9 ns/op
BenchmarkIterStructSlice/UsingRangeVal________1e+03-12              4719            262072 ns/op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出使用索引的<code>for-range</code>和<code>for</code>性能差不多，但是使用元素值遍历时，性能显著下降。</p><h2 id="_3-遍历-结构体指针-切片" tabindex="-1"><a class="header-anchor" href="#_3-遍历-结构体指针-切片" aria-hidden="true">#</a> 3. 遍历 结构体指针 切片</h2><p>若将结构体换成指针：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token function">iterMsPtrUsingFor</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token operator">*</span>MySt
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterMsPtrUsingRangeIdx</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token operator">*</span>MySt
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterMsPtrUsingRangeVal</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token operator">*</span>MySt
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> v
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>


<span class="token keyword">func</span> <span class="token function">genMsSlice</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt <span class="token punctuation">{</span>
	res <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token operator">&amp;</span>MySt<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token comment">// tests</span>
<span class="token keyword">func</span> <span class="token function">BenchmarkIterStructPtrSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name <span class="token builtin">string</span>
		f    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>MySt<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingFor&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsPtrUsingFor<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeIdx&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsPtrUsingRangeIdx<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;UsingRangeVal&quot;</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterMsPtrUsingRangeVal<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">1000</span><span class="token punctuation">;</span> k <span class="token operator">*=</span> <span class="token number">10</span> <span class="token punctuation">{</span>
		a <span class="token operator">:=</span> <span class="token function">genMsSlice</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
			b<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%-20s_%.e&quot;</span><span class="token punctuation">,</span> tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
					tt<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			k <span class="token operator">=</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次测试：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingFor_____________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">558088916</span>                <span class="token number">2.064</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeIdx________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">679685667</span>                <span class="token number">1.757</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeVal________0e<span class="token operator">+</span><span class="token number">00</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">576765020</span>                <span class="token number">2.185</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">244455494</span>                <span class="token number">4.911</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">253984057</span>                <span class="token number">4.843</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">240997875</span>                <span class="token number">4.937</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">31083170</span>                <span class="token number">33.86</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">34513502</span>                <span class="token number">34.15</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">12</span>               <span class="token number">37010649</span>                <span class="token number">32.97</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingFor_____________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">4621555</span>               <span class="token number">271.9</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeIdx________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">4567570</span>               <span class="token number">268.8</span> ns<span class="token operator">/</span>op
BenchmarkIterStructPtrSlice<span class="token operator">/</span>UsingRangeVal________1e<span class="token operator">+</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">12</span>                <span class="token number">4618844</span>               <span class="token number">267.9</span> ns<span class="token operator">/</span>op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时三者性能差距不大。</p><h2 id="_4-原因" tabindex="-1"><a class="header-anchor" href="#_4-原因" aria-hidden="true">#</a> 4. 原因</h2><p><code>for-range</code><strong>遍历元素</strong>时，每次都会进行一次<strong>拷贝</strong>，当元素内存占用比较高时，会降低内存和时间性能。</p><p>所以，在遍历时应注意目标元素的类型及其内存占用情况选择合适的方式遍历。</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,19),u={href:"https://geektutu.com/post/hpg-range.html",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=l("ExternalLinkIcon");return p(),t("div",null,[r,n("ol",null,[n("li",null,[n("a",u,[e("https://geektutu.com/post/hpg-range.html"),o(s)])])])])}const b=a(i,[["render",k],["__file","02.3.for-range.html.vue"]]);export{b as default};

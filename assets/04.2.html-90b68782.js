const n=JSON.parse('{"key":"v-2ea4da10","path":"/note/golang/open-source-books/advanced-go-programming/04.2.html","title":"04.2 Protobuf","lang":"zh-CN","frontmatter":{"title":"04.2 Protobuf","date":"2021-12-22T00:00:00.000Z","category":["golang","rpc"],"timeline":true},"headers":[{"level":2,"title":"4.2 Protobuf","slug":"_4-2-protobuf","link":"#_4-2-protobuf","children":[{"level":3,"title":"4.2.1 Protobuf 入门","slug":"_4-2-1-protobuf-入门","link":"#_4-2-1-protobuf-入门","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":2.48,"words":745},"filePathRelative":"note/golang/open-source-books/advanced-go-programming/04.2.md","localizedDate":"2021年12月22日","excerpt":"<h2> 4.2 Protobuf</h2>\\n<p>Protobuf ( Protocol Buffer ) 是 Google 开发的数据描述语言，可以作为跨语言的 RPC</p>\\n<p>序列化数据格式。</p>\\n<h3> 4.2.1 Protobuf 入门</h3>\\n<p>下面将 Protobuf 和 RPC 结合在一起使用，通过 Protobuf 确保 RPC 的接口安全和规范。</p>\\n<p>首先创建 <code>hello.proto</code> ，其中包装了 HelloService 服务中用到的字符串类型</p>\\n<div class=\\"language-protobuf line-numbers-mode\\" data-ext=\\"protobuf\\"><pre class=\\"language-protobuf\\"><code><span class=\\"token keyword\\">syntax</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"proto3\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">package</span> main<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">option</span> go_pacakge <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"../protobuffers\\"</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 需要指定 go package </span>\\n\\n<span class=\\"token keyword\\">message</span> <span class=\\"token class-name\\">User</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token builtin\\">string</span> name <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

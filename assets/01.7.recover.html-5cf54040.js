const e=JSON.parse('{"key":"v-9acf99fc","path":"/reading/golang/7-days-golang/01-Gee-Web/01.7.recover.html","title":"7. 错误恢复","lang":"zh-CN","frontmatter":{"title":"7. 错误恢复","date":"2023-10-10T00:00:00.000Z","category":["golang"],"article":false},"headers":[{"level":2,"title":"1. 错误处理","slug":"_1-错误处理","link":"#_1-错误处理","children":[{"level":3,"title":"1.1 recovery","slug":"_1-1-recovery","link":"#_1-1-recovery","children":[]},{"level":3,"title":"1.2 gee","slug":"_1-2-gee","link":"#_1-2-gee","children":[]},{"level":3,"title":"1.2 Demo","slug":"_1-2-demo","link":"#_1-2-demo","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943615000},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"reading/golang/7-days-golang/01-Gee-Web/01.7.recover.md","localizedDate":"2023年10月10日","excerpt":"<h2> 1. 错误处理</h2>\\n<p>当前系统中，若某个位置触发了 panic，将会导致系统停机，这是不可接收的，所以需要引入错误处理机制。</p>\\n<p>因为已经实现了中间件机制，可以将错误处理作为中间件引入。</p>\\n<p><a href=\\"https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day7-recovery\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day7-recovery</a></p>"}');export{e as data};

const e=JSON.parse('{"key":"v-c4551e66","path":"/reading/golang/high-performance-go/02-datastructure/02.4.reflect.html","title":"2.4 反射性能","lang":"zh-CN","frontmatter":{"title":"2.4 反射性能","date":"2023-10-03T00:00:00.000Z","category":["golang"],"article":false},"headers":[{"level":2,"title":"1. 反射的用途","slug":"_1-反射的用途","link":"#_1-反射的用途","children":[]},{"level":2,"title":"2. 反射如何简化代码","slug":"_2-反射如何简化代码","link":"#_2-反射如何简化代码","children":[]},{"level":2,"title":"3. 反射的性能","slug":"_3-反射的性能","link":"#_3-反射的性能","children":[{"level":3,"title":"3.1 创建对象","slug":"_3-1-创建对象","link":"#_3-1-创建对象","children":[]},{"level":3,"title":"3.2 修改字段的值","slug":"_3-2-修改字段的值","link":"#_3-2-修改字段的值","children":[]},{"level":3,"title":"3.3 FieldByName 和 Field","slug":"_3-3-fieldbyname-和-field","link":"#_3-3-fieldbyname-和-field","children":[]}]},{"level":2,"title":"4. 如何提高性能","slug":"_4-如何提高性能","link":"#_4-如何提高性能","children":[{"level":3,"title":"4.1 避免使用反射","slug":"_4-1-避免使用反射","link":"#_4-1-避免使用反射","children":[]},{"level":3,"title":"4.2 缓存","slug":"_4-2-缓存","link":"#_4-2-缓存","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943615000},"readingTime":{"minutes":4.51,"words":1352},"filePathRelative":"reading/golang/high-performance-go/02-datastructure/02.4.reflect.md","localizedDate":"2023年10月3日","excerpt":"<h2> 1. 反射的用途</h2>\\n<p>标准库 <a href=\\"https://golang.org/pkg/reflect/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">reflect</a> 为 Go 语言提供了运行时动态获取对象的类型和值以及动态创建对象的能力。反射可以帮助抽象和简化代码，提高开发效率。</p>"}');export{e as data};

import{d as r,r as w,a as Hn,b as ki,c as y,i as U,e as Pe,f as fi,g as yi,o as R,h,j as i,k as Tn,l as Yt,m as W,n as ee,p as Ya,q as Ei,u as Mn,s as da,t as Fn,v as wi,w as Un,x as S,y as ae,z as Zt,A as Xt,B as Li,C as Ai,D as ns,E as es,T as qn,F as Q,G as Ti,R as H,H as Y,I as te,J as sn,K as Ii,L as as,M as Pi,N as In,O as Ae,P as Di,Q as ua,S as Za,U as xi,V as Ri,W as Oi,X as Vi,Y as Si}from"./framework-09afcf0b.js";const Ci="modulepreload",$i=function(n){return"/"+n},Xa={},e=function(a,t,s){if(!t||t.length===0)return a();const o=document.getElementsByTagName("link");return Promise.all(t.map(l=>{if(l=$i(l),l in Xa)return;Xa[l]=!0;const c=l.endsWith(".css"),p=c?'[rel="stylesheet"]':"";if(!!s)for(let v=o.length-1;v>=0;v--){const m=o[v];if(m.href===l&&(!c||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${l}"]${p}`))return;const d=document.createElement("link");if(d.rel=c?"stylesheet":Ci,c||(d.as="script",d.crossOrigin=""),d.href=l,document.head.appendChild(d),c)return new Promise((v,m)=>{d.addEventListener("load",v),d.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${l}`)))})})).then(()=>a())},Mi={"v-8daa1a0e":()=>e(()=>import("./index.html-7810276b.js"),[]).then(({data:n})=>n),"v-fd0cf4b0":()=>e(()=>import("./about-me.html-c0e7a356.js"),[]).then(({data:n})=>n),"v-145ac574":()=>e(()=>import("./index.html-69910e8d.js"),[]).then(({data:n})=>n),"v-2d0a870d":()=>e(()=>import("./index.html-aecb009b.js"),[]).then(({data:n})=>n),"v-5aa3d8ba":()=>e(()=>import("./intro.html-9ea1502a.js"),[]).then(({data:n})=>n),"v-367b840a":()=>e(()=>import("./slides.html-79e8c393.js"),[]).then(({data:n})=>n),"v-6beb5d16":()=>e(()=>import("./index.html-aa785371.js"),[]).then(({data:n})=>n),"v-14e2aca8":()=>e(()=>import("./index.html-c7b3b2d5.js"),[]).then(({data:n})=>n),"v-15054f24":()=>e(()=>import("./index.html-1b62881b.js"),[]).then(({data:n})=>n),"v-ba0625c8":()=>e(()=>import("./index.html-8ba7b317.js"),[]).then(({data:n})=>n),"v-1559a150":()=>e(()=>import("./index.html-b8424712.js"),[]).then(({data:n})=>n),"v-29289036":()=>e(()=>import("./bookmark.html-7a3db438.js"),[]).then(({data:n})=>n),"v-6beeb8fc":()=>e(()=>import("./bytes_to_string_quickly.html-1e878361.js"),[]).then(({data:n})=>n),"v-53e31fe0":()=>e(()=>import("./natural_sort.html-e772e1db.js"),[]).then(({data:n})=>n),"v-4b6696b8":()=>e(()=>import("./clash-linux.html-a320b5a2.js"),[]).then(({data:n})=>n),"v-86290fc2":()=>e(()=>import("./pi-docker-blog.html-e9a0b388.js"),[]).then(({data:n})=>n),"v-99c27f88":()=>e(()=>import("./pi-go.html-c50c6022.js"),[]).then(({data:n})=>n),"v-b5ed2b58":()=>e(()=>import("./pi-nginx.html-5ae53e33.js"),[]).then(({data:n})=>n),"v-50e28978":()=>e(()=>import("./ghaction.html-fc84942f.js"),[]).then(({data:n})=>n),"v-d113dcdc":()=>e(()=>import("./live2d_widget.html-89bfcc37.js"),[]).then(({data:n})=>n),"v-020997ea":()=>e(()=>import("./migrate_to_v2.html-e7d9f8ea.js"),[]).then(({data:n})=>n),"v-17581545":()=>e(()=>import("./moe-counter.html-ba12dab6.js"),[]).then(({data:n})=>n),"v-0ae43aab":()=>e(()=>import("./ssl.html-8f722ac9.js"),[]).then(({data:n})=>n),"v-1c39fd42":()=>e(()=>import("./rewrite_history.html-fe0eda17.js"),[]).then(({data:n})=>n),"v-7a6ac2b6":()=>e(()=>import("./SliceTricks.html-6ec1ba6d.js"),[]).then(({data:n})=>n),"v-c02a4b2e":()=>e(()=>import("./1.file_permission.html-1b417af0.js"),[]).then(({data:n})=>n),"v-2ebd7ecc":()=>e(()=>import("./1.popular_protocols.html-c072caad.js"),[]).then(({data:n})=>n),"v-395cd082":()=>e(()=>import("./index.html-fda6d694.js"),[]).then(({data:n})=>n),"v-70eda030":()=>e(()=>import("./disable.html-2225fde8.js"),[]).then(({data:n})=>n),"v-3777b6d3":()=>e(()=>import("./encrypt.html-2615f3d7.js"),[]).then(({data:n})=>n),"v-4a2a37eb":()=>e(()=>import("./markdown.html-56c73ba2.js"),[]).then(({data:n})=>n),"v-0e4acecb":()=>e(()=>import("./page.html-681adfd0.js"),[]).then(({data:n})=>n),"v-fb852992":()=>e(()=>import("./cherry.html-16fa9747.js"),[]).then(({data:n})=>n),"v-4fd051a1":()=>e(()=>import("./dragonfruit.html-e3fded89.js"),[]).then(({data:n})=>n),"v-57615dc1":()=>e(()=>import("./strawberry.html-f095184c.js"),[]).then(({data:n})=>n),"v-285adf66":()=>e(()=>import("./tomato.html-27e7537a.js"),[]).then(({data:n})=>n),"v-a747c65e":()=>e(()=>import("./golang.html-897bf02c.js"),[]).then(({data:n})=>n),"v-57cc0d8b":()=>e(()=>import("./mysql.html-addac695.js"),[]).then(({data:n})=>n),"v-2916a324":()=>e(()=>import("./network.html-c3fc95e7.js"),[]).then(({data:n})=>n),"v-822adc4e":()=>e(()=>import("./redis.html-422cd7ef.js"),[]).then(({data:n})=>n),"v-72954ae8":()=>e(()=>import("./1.twoSum.html-18bae42b.js"),[]).then(({data:n})=>n),"v-0894e1ba":()=>e(()=>import("./102.binary_tree_level_order_traversal.html-7e109d21.js"),[]).then(({data:n})=>n),"v-535d9b4c":()=>e(()=>import("./103.binary_tree_zigzag_level_order_traversal.html-7c02c63f.js"),[]).then(({data:n})=>n),"v-549fa92c":()=>e(()=>import("./121.122.123.188.309.714.stock_series.html-bced49aa.js"),[]).then(({data:n})=>n),"v-3eb533c2":()=>e(()=>import("./141.142.linked_list_cycle.html-cb445381.js"),[]).then(({data:n})=>n),"v-097e0892":()=>e(()=>import("./146.LRU_cache.html-dff4122b.js"),[]).then(({data:n})=>n),"v-9655c078":()=>e(()=>import("./15.three_sum.html-2460db67.js"),[]).then(({data:n})=>n),"v-5125b4c6":()=>e(()=>import("./20.valid_parentheses.html-5a7c1765.js"),[]).then(({data:n})=>n),"v-2037675e":()=>e(()=>import("./200.number_of_islands.html-347e96aa.js"),[]).then(({data:n})=>n),"v-29f01add":()=>e(()=>import("./206.reverse_linked_list.html-03f8aa3c.js"),[]).then(({data:n})=>n),"v-a32a07dc":()=>e(()=>import("./21.merge_two_sorted_lists.html-6e639906.js"),[]).then(({data:n})=>n),"v-6348cbb8":()=>e(()=>import("./215.kth_ele_in_arr.html-5025fe6b.js"),[]).then(({data:n})=>n),"v-dab163b2":()=>e(()=>import("./25.reverse_nodes_in_k_group.html-4798fb80.js"),[]).then(({data:n})=>n),"v-0aac4a8d":()=>e(()=>import("./3.longest_substring_without_repeating_characters.html-4707928b.js"),[]).then(({data:n})=>n),"v-de9f1ca0":()=>e(()=>import("./33.search_in_rotated_sorted_array.html-95991cfc.js"),[]).then(({data:n})=>n),"v-8355eb16":()=>e(()=>import("./46.permutations.html-4480a9c3.js"),[]).then(({data:n})=>n),"v-6b3e55f8":()=>e(()=>import("./5.longest_palindromic_substring.html-225d6d97.js"),[]).then(({data:n})=>n),"v-2fe69306":()=>e(()=>import("./53.maximum_subarray.html-1d75c8ea.js"),[]).then(({data:n})=>n),"v-1af74c42":()=>e(()=>import("./88.merge_sorted_array.html-ab1fad6b.js"),[]).then(({data:n})=>n),"v-377f2ac8":()=>e(()=>import("./quick_start.html-530dd39d.js"),[]).then(({data:n})=>n),"v-7991054c":()=>e(()=>import("./endless.html-ed282776.js"),[]).then(({data:n})=>n),"v-959407fc":()=>e(()=>import("./gin.html-6b98d4ef.js"),[]).then(({data:n})=>n),"v-385e0822":()=>e(()=>import("./go-jwt.html-57e567eb.js"),[]).then(({data:n})=>n),"v-18c55e38":()=>e(()=>import("./nginx.html-90af9f8d.js"),[]).then(({data:n})=>n),"v-5208c422":()=>e(()=>import("./quick_start.html-7fe71dea.js"),[]).then(({data:n})=>n),"v-72b977ca":()=>e(()=>import("./index.html-afa57612.js"),[]).then(({data:n})=>n),"v-27637179":()=>e(()=>import("./index.html-c5ddac91.js"),[]).then(({data:n})=>n),"v-810fe0d8":()=>e(()=>import("./01.dp_sc_optimization_summary.html-3d25b046.js"),[]).then(({data:n})=>n),"v-570e4ea8":()=>e(()=>import("./02.general_solution_of_stock_series_problem.html-cd092c5e.js"),[]).then(({data:n})=>n),"v-e16459c4":()=>e(()=>import("./01.QuickSort.html-7e46efa5.js"),[]).then(({data:n})=>n),"v-3f5dd1dc":()=>e(()=>import("./02.MergeSort.html-8b6dc28b.js"),[]).then(({data:n})=>n),"v-025d7b61":()=>e(()=>import("./03.HeapSort.html-81ecb19f.js"),[]).then(({data:n})=>n),"v-7ee1bb0f":()=>e(()=>import("./0.00.html-ac7840ce.js"),[]).then(({data:n})=>n),"v-4e6da3c9":()=>e(()=>import("./01.1.html-857d2fa5.js"),[]).then(({data:n})=>n),"v-50227c68":()=>e(()=>import("./01.2.html-b9c49998.js"),[]).then(({data:n})=>n),"v-51d75507":()=>e(()=>import("./01.3.html-130c9adc.js"),[]).then(({data:n})=>n),"v-1f30217a":()=>e(()=>import("./1.impl_of_heap.html-18a62190.js"),[]).then(({data:n})=>n),"v-2b556b2e":()=>e(()=>import("./01.1.why_is_this_slicegrow_formula.html-968a48b5.js"),[]).then(({data:n})=>n),"v-57baa4bc":()=>e(()=>import("./01.2.why_hmap_overflowthreshold_loadfactory.html-263e7281.js"),[]).then(({data:n})=>n),"v-e0a4562c":()=>e(()=>import("./3.why_cannot_value_using_pointerinterfacemethods.html-306da848.js"),[]).then(({data:n})=>n),"v-040284a4":()=>e(()=>import("./4.why_iterate_map_randomly.html-9b1ed354.js"),[]).then(({data:n})=>n),"v-58aa03b4":()=>e(()=>import("./1.html-803fab49.js"),[]).then(({data:n})=>n),"v-55405276":()=>e(()=>import("./2.html-cb8897e0.js"),[]).then(({data:n})=>n),"v-51d6a138":()=>e(()=>import("./3.html-2f7978d8.js"),[]).then(({data:n})=>n),"v-4e6ceffa":()=>e(()=>import("./4.html-bb920c6c.js"),[]).then(({data:n})=>n),"v-e748286e":()=>e(()=>import("./1.html-f7e76d47.js"),[]).then(({data:n})=>n),"v-e3de7730":()=>e(()=>import("./2.html-061c4bf4.js"),[]).then(({data:n})=>n),"v-e074c5f2":()=>e(()=>import("./3.html-b38e9f4e.js"),[]).then(({data:n})=>n),"v-dd0b14b4":()=>e(()=>import("./4.html-6c9d81a8.js"),[]).then(({data:n})=>n),"v-62f769e2":()=>e(()=>import("./118.pascals-triangle.html-c46c9031.js"),[]).then(({data:n})=>n),"v-70286756":()=>e(()=>import("./119.Pascals-Triangle-II.html-bf908042.js"),[]).then(({data:n})=>n),"v-06561839":()=>e(()=>import("./151_reverse_words_in_string.html-b18c28f8.js"),[]).then(({data:n})=>n),"v-1e6f1d5c":()=>e(()=>import("./153.Find-Minimum-In-Rotated-Sorted-Array.html-e757a45f.js"),[]).then(({data:n})=>n),"v-492efb38":()=>e(()=>import("./167.Two-sum-ii-input-array-is-sorted.html-426f4323.js"),[]).then(({data:n})=>n),"v-311bd816":()=>e(()=>import("./1_Two_Sum.html-7b04eaa0.js"),[]).then(({data:n})=>n),"v-5501cf2c":()=>e(()=>import("./35_Search_insert_position.html-3eb07c26.js"),[]).then(({data:n})=>n),"v-ad253b78":()=>e(()=>import("./557.Reverse-Words-In-a-String-III.html-ac0aae58.js"),[]).then(({data:n})=>n),"v-821df360":()=>e(()=>import("./724_Pivot_Index.html-10d7bc7e.js"),[]).then(({data:n})=>n),"v-04b56930":()=>e(()=>import("./Concepts.html-2fcd913f.js"),[]).then(({data:n})=>n),"v-765b1aa3":()=>e(()=>import("./705.Design-HashSet.html-5ac6d5d5.js"),[]).then(({data:n})=>n),"v-3940b36a":()=>e(()=>import("./706.Design-HashMap.html-03f5f72d.js"),[]).then(({data:n})=>n),"v-349a846f":()=>e(()=>import("./concepts.html-2792eddb.js"),[]).then(({data:n})=>n),"v-43f192d4":()=>e(()=>import("./01.1.html-9bc35327.js"),[]).then(({data:n})=>n),"v-4087e196":()=>e(()=>import("./01.2.html-4d0a84f1.js"),[]).then(({data:n})=>n),"v-3d1e3058":()=>e(()=>import("./01.3.html-e2995d32.js"),[]).then(({data:n})=>n),"v-27edcf18":()=>e(()=>import("./Preface.html-1cf51571.js"),[]).then(({data:n})=>n),"v-193915ab":()=>e(()=>import("./preface.html-c8490669.js"),[]).then(({data:n})=>n),"v-799d9d9d":()=>e(()=>import("./docker-nginx.html-60b2ded3.js"),[]).then(({data:n})=>n),"v-4c02f4c4":()=>e(()=>import("./get-started.html-9ca8a52d.js"),[]).then(({data:n})=>n),"v-64cfc26e":()=>e(()=>import("./GMPModel.html-45ff8ed8.js"),[]).then(({data:n})=>n),"v-344dc579":()=>e(()=>import("./01.1.html-3d0d3aad.js"),[]).then(({data:n})=>n),"v-36029e18":()=>e(()=>import("./01.2.html-5f2c4e65.js"),[]).then(({data:n})=>n),"v-37b776b7":()=>e(()=>import("./01.3.html-ecae0ba8.js"),[]).then(({data:n})=>n),"v-24dbb155":()=>e(()=>import("./Preface.html-fb46135a.js"),[]).then(({data:n})=>n),"v-3b58180c":()=>e(()=>import("./cast.html-cf064ba2.js"),[]).then(({data:n})=>n),"v-f00eb258":()=>e(()=>import("./cobra.html-8ade2ecf.js"),[]).then(({data:n})=>n),"v-16ceb7bd":()=>e(()=>import("./email.html-476a99e5.js"),[]).then(({data:n})=>n),"v-476f03ed":()=>e(()=>import("./flag.html-03dbda69.js"),[]).then(({data:n})=>n),"v-9371a17a":()=>e(()=>import("./fsnotify.html-462aad8b.js"),[]).then(({data:n})=>n),"v-6ad98bb7":()=>e(()=>import("./go-flags.html-c37a97da.js"),[]).then(({data:n})=>n),"v-5bb14210":()=>e(()=>import("./go-homedir.html-f91cc85c.js"),[]).then(({data:n})=>n),"v-fa7c9c8c":()=>e(()=>import("./go-ini.html-e55ca467.js"),[]).then(({data:n})=>n),"v-90b97d26":()=>e(()=>import("./godotenv.html-c56a5c35.js"),[]).then(({data:n})=>n),"v-28002915":()=>e(()=>import("./log.html-7157971b.js"),[]).then(({data:n})=>n),"v-2d00fe8d":()=>e(()=>import("./logrus.html-4c932d79.js"),[]).then(({data:n})=>n),"v-63741259":()=>e(()=>import("./preface.html-c5238976.js"),[]).then(({data:n})=>n),"v-4a26dc54":()=>e(()=>import("./uniplace-carbon.html-cd976a2d.js"),[]).then(({data:n})=>n),"v-4b73468f":()=>e(()=>import("./viper.html-061e9c2e.js"),[]).then(({data:n})=>n),"v-06fc599e":()=>e(()=>import("./01.1.html-77df6c57.js"),[]).then(({data:n})=>n),"v-08b1323d":()=>e(()=>import("./01.2.html-509956ce.js"),[]).then(({data:n})=>n),"v-0a660adc":()=>e(()=>import("./01.3.html-9a07de0d.js"),[]).then(({data:n})=>n),"v-0c1ae37b":()=>e(()=>import("./01.4.html-a2fea0ca.js"),[]).then(({data:n})=>n),"v-0dcfbc1a":()=>e(()=>import("./01.5.html-d3e365f8.js"),[]).then(({data:n})=>n),"v-7dc3935f":()=>e(()=>import("./gorm.html-bc6551bd.js"),[]).then(({data:n})=>n),"v-7d56e130":()=>e(()=>import("./01.1.html-d9eeae6b.js"),[]).then(({data:n})=>n),"v-63a80d45":()=>e(()=>import("./00_preface.html-5a4f058a.js"),[]).then(({data:n})=>n),"v-8a2d5246":()=>e(()=>import("./spf13-vim-plugin.html-820627ca.js"),[]).then(({data:n})=>n),"v-ba0a5a48":()=>e(()=>import("./atls.html-91118187.js"),[]).then(({data:n})=>n),"v-809ed732":()=>e(()=>import("./basic_tutorial.html-957e117a.js"),[]).then(({data:n})=>n),"v-0852c2d9":()=>e(()=>import("./generated_code.html-d7d46555.js"),[]).then(({data:n})=>n),"v-25febabc":()=>e(()=>import("./introduction.html-ad8249d8.js"),[]).then(({data:n})=>n),"v-79e08508":()=>e(()=>import("./preface.html-8cfbfdd1.js"),[]).then(({data:n})=>n),"v-64ab95ec":()=>e(()=>import("./quick_start.html-3a18ca11.js"),[]).then(({data:n})=>n),"v-34935b8c":()=>e(()=>import("./basics-go.html-7dd2b18e.js"),[]).then(({data:n})=>n),"v-4d2d1dcb":()=>e(()=>import("./language-guide-proto3.html-bd24f55e.js"),[]).then(({data:n})=>n),"v-f15d7708":()=>e(()=>import("./preface.html-0b4b2b22.js"),[]).then(({data:n})=>n),"v-50cc852d":()=>e(()=>import("./00_preface.html-9b8fcb39.js"),[]).then(({data:n})=>n),"v-601a5951":()=>e(()=>import("./vue-cli.html-75e899df.js"),[]).then(({data:n})=>n),"v-34943ad0":()=>e(()=>import("./vue-router.html-4121aa52.js"),[]).then(({data:n})=>n),"v-33bd0e54":()=>e(()=>import("./vuex.html-4cf125e5.js"),[]).then(({data:n})=>n),"v-4242d329":()=>e(()=>import("./01.overview.html-43e76c48.js"),[]).then(({data:n})=>n),"v-8b53256e":()=>e(()=>import("./03.sync.html-ccf47a31.js"),[]).then(({data:n})=>n),"v-0bddc6dd":()=>e(()=>import("./04.pattern.html-b6b4542b.js"),[]).then(({data:n})=>n),"v-d2b5c958":()=>e(()=>import("./05.massive_concurrency.html-e84475b6.js"),[]).then(({data:n})=>n),"v-3b40d3e9":()=>e(()=>import("./01.1.html-5a0e60c1.js"),[]).then(({data:n})=>n),"v-3cf5ac88":()=>e(()=>import("./01.2.html-ae241e67.js"),[]).then(({data:n})=>n),"v-3eaa8527":()=>e(()=>import("./01.3.html-f2fc19d8.js"),[]).then(({data:n})=>n),"v-dee84ee8":()=>e(()=>import("./01.html-a2e1aa8c.js"),[]).then(({data:n})=>n),"v-5c650e76":()=>e(()=>import("./preface.html-946aabdd.js"),[]).then(({data:n})=>n),"v-0f79baa2":()=>e(()=>import("./gee-web.html-130a774e.js"),[]).then(({data:n})=>n),"v-d4eae3a0":()=>e(()=>import("./preface.html-52ac29a1.js"),[]).then(({data:n})=>n),"v-57168dca":()=>e(()=>import("./summary.html-3e95e324.js"),[]).then(({data:n})=>n),"v-b018f792":()=>e(()=>import("./01.1.html-901e1a0b.js"),[]).then(({data:n})=>n),"v-77b5ddf5":()=>e(()=>import("./03.1.html-5df19770.js"),[]).then(({data:n})=>n),"v-796ab694":()=>e(()=>import("./03.2.html-bce73d8c.js"),[]).then(({data:n})=>n),"v-7b1f8f33":()=>e(()=>import("./03.3.html-9768caf4.js"),[]).then(({data:n})=>n),"v-7cd467d2":()=>e(()=>import("./03.4.html-f40c57cb.js"),[]).then(({data:n})=>n),"v-20003db7":()=>e(()=>import("./preface.html-c1c5d0a8.js"),[]).then(({data:n})=>n),"v-3ce7855e":()=>e(()=>import("./summary.html-26f9d4af.js"),[]).then(({data:n})=>n),"v-320e8b4e":()=>e(()=>import("./04.1.html-22c6b24d.js"),[]).then(({data:n})=>n),"v-2ea4da10":()=>e(()=>import("./04.2.html-90b68782.js"),[]).then(({data:n})=>n),"v-2b3b28d2":()=>e(()=>import("./04.3.html-4def4c35.js"),[]).then(({data:n})=>n),"v-27d17794":()=>e(()=>import("./04.4.html-15f5bcaa.js"),[]).then(({data:n})=>n),"v-2a93f832":()=>e(()=>import("./Preface.html-6591dc0f.js"),[]).then(({data:n})=>n),"v-805e4cfe":()=>e(()=>import("./preface.html-36593a32.js"),[]).then(({data:n})=>n),"v-fd464dca":()=>e(()=>import("./summary.html-0e80c62c.js"),[]).then(({data:n})=>n),"v-ac901672":()=>e(()=>import("./01.0.html-4052a79a.js"),[]).then(({data:n})=>n),"v-a9266534":()=>e(()=>import("./01.1.html-eb3040df.js"),[]).then(({data:n})=>n),"v-09e51b69":()=>e(()=>import("./03.0.html-9eb66d9c.js"),[]).then(({data:n})=>n),"v-0b99f408":()=>e(()=>import("./03.1.html-470f4d9d.js"),[]).then(({data:n})=>n),"v-0d4ecca7":()=>e(()=>import("./03.2.html-9345c1be.js"),[]).then(({data:n})=>n),"v-0f03a546":()=>e(()=>import("./03.3.html-f38c2bcd.js"),[]).then(({data:n})=>n),"v-10b87de5":()=>e(()=>import("./03.4.html-edc6a88b.js"),[]).then(({data:n})=>n),"v-126d5684":()=>e(()=>import("./03.5.html-1c95252a.js"),[]).then(({data:n})=>n),"v-14222f23":()=>e(()=>import("./03.6.html-e986c5f9.js"),[]).then(({data:n})=>n),"v-15d707c2":()=>e(()=>import("./03.7.html-5d57f6ec.js"),[]).then(({data:n})=>n),"v-bac7172a":()=>e(()=>import("./03.html-4e424319.js"),[]).then(({data:n})=>n),"v-5e331da4":()=>e(()=>import("./00.0.preface.html-1b2d0aa1.js"),[]).then(({data:n})=>n),"v-20d09562":()=>e(()=>import("./01.1.http_basic.html-d28cb64d.js"),[]).then(({data:n})=>n),"v-15d3b17c":()=>e(()=>import("./01.2.context.html-87f7f7c8.js"),[]).then(({data:n})=>n),"v-c8c456c8":()=>e(()=>import("./01.3.trie_router.html-50a14d21.js"),[]).then(({data:n})=>n),"v-5800d1ea":()=>e(()=>import("./01.4.group.html-e936b70f.js"),[]).then(({data:n})=>n),"v-92f80350":()=>e(()=>import("./01.5.middleware.html-611ab217.js"),[]).then(({data:n})=>n),"v-1458e00e":()=>e(()=>import("./01.6.html_template.html-8159ac72.js"),[]).then(({data:n})=>n),"v-9acf99fc":()=>e(()=>import("./01.7.recover.html-7dc72910.js"),[]).then(({data:n})=>n),"v-a9da6580":()=>e(()=>import("./01.1.benchmark.html-cfebce89.js"),[]).then(({data:n})=>n),"v-567da953":()=>e(()=>import("./01.2.pprof.html-9e67186b.js"),[]).then(({data:n})=>n),"v-1244a7cb":()=>e(()=>import("./02.1.string_concat.html-3408ec03.js"),[]).then(({data:n})=>n),"v-681ca6cc":()=>e(()=>import("./02.2.slice.html-dd412bd8.js"),[]).then(({data:n})=>n),"v-c4bbd09c":()=>e(()=>import("./02.3.for-range.html-7fcec2d2.js"),[]).then(({data:n})=>n),"v-c4551e66":()=>e(()=>import("./02.4.reflect.html-5318c0ed.js"),[]).then(({data:n})=>n),"v-7b90e602":()=>e(()=>import("./02.5.empty_struct.html-70a60ea4.js"),[]).then(({data:n})=>n),"v-2057ad0f":()=>e(()=>import("./02.6.mem_alignment.html-640854a1.js"),[]).then(({data:n})=>n),"v-f6665750":()=>e(()=>import("./03.1.mutex.html-ec83cedb.js"),[]).then(({data:n})=>n),"v-e6d3b74a":()=>e(()=>import("./03.2.once.html-669ca2cc.js"),[]).then(({data:n})=>n),"v-f23db260":()=>e(()=>import("./04.1.reduce_exe_size.html-cdd058de.js"),[]).then(({data:n})=>n),"v-6a293671":()=>e(()=>import("./04.2.mem_escape.html-6b12362b.js"),[]).then(({data:n})=>n),"v-7fa49b0c":()=>e(()=>import("./04.3.deadcode.html-4c769fdf.js"),[]).then(({data:n})=>n),"v-350af4a0":()=>e(()=>import("./minidb.html-89dc22c6.js"),[]).then(({data:n})=>n),"v-7811b9c6":()=>e(()=>import("./preface.html-0e73288e.js"),[]).then(({data:n})=>n),"v-40f6cc6c":()=>e(()=>import("./benchmark.html-0d2c18e4.js"),[]).then(({data:n})=>n),"v-4f5da57e":()=>e(()=>import("./pprof.html-fe01ccb9.js"),[]).then(({data:n})=>n),"v-3bd0497f":()=>e(()=>import("./04.1.html-3354920a.js"),[]).then(({data:n})=>n),"v-3d85221e":()=>e(()=>import("./04.2.html-9feda4a0.js"),[]).then(({data:n})=>n),"v-3f39fabd":()=>e(()=>import("./04.3.html-abe1f2f8.js"),[]).then(({data:n})=>n),"v-40eed35c":()=>e(()=>import("./04.4.html-b53f9c7a.js"),[]).then(({data:n})=>n),"v-42a3abfb":()=>e(()=>import("./04.5.html-9879ab90.js"),[]).then(({data:n})=>n),"v-4458849a":()=>e(()=>import("./04.6.html-b90c6b34.js"),[]).then(({data:n})=>n),"v-460d5d39":()=>e(()=>import("./04.7.html-47be4ed9.js"),[]).then(({data:n})=>n),"v-47c235d8":()=>e(()=>import("./04.8.html-582c0aad.js"),[]).then(({data:n})=>n),"v-49770e77":()=>e(()=>import("./04.9.html-ecea394b.js"),[]).then(({data:n})=>n),"v-36e15080":()=>e(()=>import("./05.0.html-24df200f.js"),[]).then(({data:n})=>n),"v-3896291f":()=>e(()=>import("./05.1.html-21cbcd79.js"),[]).then(({data:n})=>n),"v-3a4b01be":()=>e(()=>import("./05.2.html-32e0293e.js"),[]).then(({data:n})=>n),"v-3bffda5d":()=>e(()=>import("./05.3.html-c8504586.js"),[]).then(({data:n})=>n),"v-3db4b2fc":()=>e(()=>import("./05.4.html-a22e3930.js"),[]).then(({data:n})=>n),"v-3f698b9b":()=>e(()=>import("./05.5.html-67e99cb4.js"),[]).then(({data:n})=>n),"v-411e643a":()=>e(()=>import("./05.6.html-2dca89ee.js"),[]).then(({data:n})=>n),"v-355c08bf":()=>e(()=>import("./06.1.html-60ed3d0f.js"),[]).then(({data:n})=>n),"v-76581383":()=>e(()=>import("./06.10.html-00f2b313.js"),[]).then(({data:n})=>n),"v-79c1c4c1":()=>e(()=>import("./06.12.html-6d39f269.js"),[]).then(({data:n})=>n),"v-3710e15e":()=>e(()=>import("./06.2.html-c31ff0cf.js"),[]).then(({data:n})=>n),"v-38c5b9fd":()=>e(()=>import("./06.3.html-baac7c4a.js"),[]).then(({data:n})=>n),"v-3a7a929c":()=>e(()=>import("./06.4.html-69c7e89d.js"),[]).then(({data:n})=>n),"v-3c2f6b3b":()=>e(()=>import("./06.5.html-1a5f8cf7.js"),[]).then(({data:n})=>n),"v-3de443da":()=>e(()=>import("./06.6.html-3b7694c6.js"),[]).then(({data:n})=>n),"v-3f991c79":()=>e(()=>import("./06.7.html-1634217e.js"),[]).then(({data:n})=>n),"v-414df518":()=>e(()=>import("./06.8.html-f8dccd1e.js"),[]).then(({data:n})=>n),"v-4302cdb7":()=>e(()=>import("./06.9.html-fc411e92.js"),[]).then(({data:n})=>n),"v-0e9fed90":()=>e(()=>import("./6.11.html-8bfa0ab9.js"),[]).then(({data:n})=>n),"v-3221e85f":()=>e(()=>import("./07.1.html-59d01571.js"),[]).then(({data:n})=>n),"v-33d6c0fe":()=>e(()=>import("./07.2.html-5a2e9332.js"),[]).then(({data:n})=>n),"v-358b999d":()=>e(()=>import("./07.3.html-53c6c369.js"),[]).then(({data:n})=>n),"v-3740723c":()=>e(()=>import("./07.4.html-737c5f42.js"),[]).then(({data:n})=>n),"v-38f54adb":()=>e(()=>import("./07.5.html-b73bfa37.js"),[]).then(({data:n})=>n),"v-3aaa237a":()=>e(()=>import("./07.6.html-2c761d7f.js"),[]).then(({data:n})=>n),"v-2d32ef60":()=>e(()=>import("./08.0.html-1c91a981.js"),[]).then(({data:n})=>n),"v-2ee7c7ff":()=>e(()=>import("./08.1.html-8438aafb.js"),[]).then(({data:n})=>n),"v-309ca09e":()=>e(()=>import("./08.2.html-c14f4add.js"),[]).then(({data:n})=>n),"v-3251793d":()=>e(()=>import("./08.3.html-f0fdf9bd.js"),[]).then(({data:n})=>n),"v-340651dc":()=>e(()=>import("./08.4.html-6a2e0aa0.js"),[]).then(({data:n})=>n),"v-35bb2a7b":()=>e(()=>import("./08.5.html-6fc30e53.js"),[]).then(({data:n})=>n),"v-3770031a":()=>e(()=>import("./08.6.html-b56d6e2c.js"),[]).then(({data:n})=>n),"v-29f8cf00":()=>e(()=>import("./09.0.html-b2555bf1.js"),[]).then(({data:n})=>n),"v-2bada79f":()=>e(()=>import("./09.1.html-8f0cab2b.js"),[]).then(({data:n})=>n),"v-3a0bf280":()=>e(()=>import("./10.0.html-85510615.js"),[]).then(({data:n})=>n),"v-36a24142":()=>e(()=>import("./10.1.html-86f4a5c4.js"),[]).then(({data:n})=>n),"v-33389004":()=>e(()=>import("./10.2.html-7263e976.js"),[]).then(({data:n})=>n),"v-2fcedec6":()=>e(()=>import("./10.3.html-e509cbe8.js"),[]).then(({data:n})=>n),"v-2c652d88":()=>e(()=>import("./10.4.html-3a107386.js"),[]).then(({data:n})=>n),"v-28fb7c4a":()=>e(()=>import("./10.5.html-035d852c.js"),[]).then(({data:n})=>n),"v-2591cb0c":()=>e(()=>import("./10.6.html-9d463727.js"),[]).then(({data:n})=>n),"v-40803340":()=>e(()=>import("./11.0.html-4ca18e56.js"),[]).then(({data:n})=>n),"v-3d168202":()=>e(()=>import("./11.1.html-69071187.js"),[]).then(({data:n})=>n),"v-39acd0c4":()=>e(()=>import("./11.2.html-e0246eb3.js"),[]).then(({data:n})=>n),"v-36431f86":()=>e(()=>import("./11.3.html-e85c5f35.js"),[]).then(({data:n})=>n),"v-32d96e48":()=>e(()=>import("./11.4.html-7cc5abd4.js"),[]).then(({data:n})=>n),"v-2f6fbd0a":()=>e(()=>import("./11.5.html-9eb2d4a4.js"),[]).then(({data:n})=>n),"v-2c060bcc":()=>e(()=>import("./11.6.html-ce8986ed.js"),[]).then(({data:n})=>n),"v-21c8f812":()=>e(()=>import("./11.9.html-8dc2f8c1.js"),[]).then(({data:n})=>n),"v-49ff0382":()=>e(()=>import("./13.1.html-7d708b92.js"),[]).then(({data:n})=>n),"v-46955244":()=>e(()=>import("./13.2.html-752c3b98.js"),[]).then(({data:n})=>n),"v-432ba106":()=>e(()=>import("./13.3.html-72ccbd12.js"),[]).then(({data:n})=>n),"v-3fc1efc8":()=>e(()=>import("./13.4.html-b65e43e1.js"),[]).then(({data:n})=>n),"v-3c583e8a":()=>e(()=>import("./13.5.html-45fbdce3.js"),[]).then(({data:n})=>n),"v-38ee8d4c":()=>e(()=>import("./13.6.html-856bcf77.js"),[]).then(({data:n})=>n),"v-3584dc0e":()=>e(()=>import("./13.7.html-3296a9a4.js"),[]).then(({data:n})=>n),"v-50734442":()=>e(()=>import("./14.1.html-371f3170.js"),[]).then(({data:n})=>n),"v-24a213a1":()=>e(()=>import("./14.12.html-bf7d795b.js"),[]).then(({data:n})=>n),"v-2656ec40":()=>e(()=>import("./14.13.html-44844ae1.js"),[]).then(({data:n})=>n),"v-280bc4df":()=>e(()=>import("./14.14.html-a654a004.js"),[]).then(({data:n})=>n),"v-2b75761d":()=>e(()=>import("./14.16.html-62c1c53a.js"),[]).then(({data:n})=>n),"v-2d2a4ebc":()=>e(()=>import("./14.17.html-668e7c9f.js"),[]).then(({data:n})=>n),"v-4d099304":()=>e(()=>import("./14.2.html-0569794a.js"),[]).then(({data:n})=>n),"v-499fe1c6":()=>e(()=>import("./14.3.html-99553282.js"),[]).then(({data:n})=>n),"v-46363088":()=>e(()=>import("./14.4.html-905e4340.js"),[]).then(({data:n})=>n),"v-42cc7f4a":()=>e(()=>import("./14.5.html-8e444275.js"),[]).then(({data:n})=>n),"v-3f62ce0c":()=>e(()=>import("./14.6.html-7eb04f24.js"),[]).then(({data:n})=>n),"v-3bf91cce":()=>e(()=>import("./14.7.html-61c362d4.js"),[]).then(({data:n})=>n),"v-388f6b90":()=>e(()=>import("./14.8.html-6d0f0d1e.js"),[]).then(({data:n})=>n),"v-3525ba52":()=>e(()=>import("./14.9.html-da59416d.js"),[]).then(({data:n})=>n),"v-4ce10d7f":()=>e(()=>import("./00.start.html-2628a1bd.js"),[]).then(({data:n})=>n),"v-30f72877":()=>e(()=>import("./01.1.create_app.html-3112611d.js"),[]).then(({data:n})=>n),"v-519865c6":()=>e(()=>import("./01.10.lifecycle_hooks.html-46ca3b79.js"),[]).then(({data:n})=>n),"v-424c459b":()=>e(()=>import("./01.11.watchers.html-bcbe9387.js"),[]).then(({data:n})=>n),"v-21067a7a":()=>e(()=>import("./01.12.template_refs.html-8a681e18.js"),[]).then(({data:n})=>n),"v-224593cd":()=>e(()=>import("./01.13.component_basics.html-91179315.js"),[]).then(({data:n})=>n),"v-37c3b518":()=>e(()=>import("./01.2.template_syntax.html-afa30b63.js"),[]).then(({data:n})=>n),"v-cff5dd62":()=>e(()=>import("./01.3.reactivity_fundamental.html-b2162116.js"),[]).then(({data:n})=>n),"v-7a32e59a":()=>e(()=>import("./01.4.computed_props.html-6a9d181f.js"),[]).then(({data:n})=>n),"v-56c1d229":()=>e(()=>import("./01.5.class_style_binding.html-69abfecf.js"),[]).then(({data:n})=>n),"v-7db8c2c5":()=>e(()=>import("./01.6.conditional_rendering.html-a0231833.js"),[]).then(({data:n})=>n),"v-14236860":()=>e(()=>import("./01.7.list_rendering.html-4c77b8e8.js"),[]).then(({data:n})=>n),"v-11aa17f2":()=>e(()=>import("./01.8.event_handling.html-e91a2a9d.js"),[]).then(({data:n})=>n),"v-a2e20f30":()=>e(()=>import("./01.9.form_input_binding.html-c4b177dd.js"),[]).then(({data:n})=>n),"v-1018c823":()=>e(()=>import("./02.1.registration.html-34b3a55e.js"),[]).then(({data:n})=>n),"v-a7271076":()=>e(()=>import("./02.2.props.html-8f758dcc.js"),[]).then(({data:n})=>n),"v-47f6df05":()=>e(()=>import("./02.3.events.html-893f7095.js"),[]).then(({data:n})=>n),"v-1503255a":()=>e(()=>import("./02.4.v_model.html-0ea2d2a7.js"),[]).then(({data:n})=>n),"v-997ddd98":()=>e(()=>import("./02.5.fallthrough_attributes.html-f1d08a87.js"),[]).then(({data:n})=>n),"v-020db39c":()=>e(()=>import("./02.6.slots.html-17b18977.js"),[]).then(({data:n})=>n),"v-1d9145f3":()=>e(()=>import("./02.7.provide_inject.html-b69a5557.js"),[]).then(({data:n})=>n),"v-391dd596":()=>e(()=>import("./02.8.async_component.html-3f6209e0.js"),[]).then(({data:n})=>n),"v-290b5eff":()=>e(()=>import("./01.0.html-9cc1c34f.js"),[]).then(({data:n})=>n),"v-2ac0379e":()=>e(()=>import("./01.1.html-6e5830d7.js"),[]).then(({data:n})=>n),"v-2c75103d":()=>e(()=>import("./01.2.html-b390b3cc.js"),[]).then(({data:n})=>n),"v-16ccdc59":()=>e(()=>import("./02.1.html-92b6729a.js"),[]).then(({data:n})=>n),"v-1881b4f8":()=>e(()=>import("./02.2.html-b2d6f7df.js"),[]).then(({data:n})=>n),"v-1a368d97":()=>e(()=>import("./02.3.html-46ce8094.js"),[]).then(({data:n})=>n),"v-169eeeb9":()=>e(()=>import("./03.1.html-57ca2224.js"),[]).then(({data:n})=>n),"v-1853c758":()=>e(()=>import("./03.2.html-1a1e5346.js"),[]).then(({data:n})=>n),"v-1a089ff7":()=>e(()=>import("./03.3.html-f1d248df.js"),[]).then(({data:n})=>n),"v-4b67a2e4":()=>e(()=>import("./04.1.html-1d8db969.js"),[]).then(({data:n})=>n),"v-4d1c7b83":()=>e(()=>import("./04.2.html-bb67c019.js"),[]).then(({data:n})=>n),"v-4ed15422":()=>e(()=>import("./04.3.html-e6bf0412.js"),[]).then(({data:n})=>n),"v-50862cc1":()=>e(()=>import("./04.4.html-2306e722.js"),[]).then(({data:n})=>n),"v-523b0560":()=>e(()=>import("./04.5.html-52a64fca.js"),[]).then(({data:n})=>n),"v-7fdb5a60":()=>e(()=>import("./05.1.html-497411ae.js"),[]).then(({data:n})=>n),"v-fcdf9a02":()=>e(()=>import("./05.2.html-a9c8a85c.js"),[]).then(({data:n})=>n),"v-f975e8c4":()=>e(()=>import("./05.3.html-deaf56ca.js"),[]).then(({data:n})=>n),"v-22502948":()=>e(()=>import("./06.1.html-876b59bd.js"),[]).then(({data:n})=>n),"v-240501e7":()=>e(()=>import("./06.2.html-77bd641f.js"),[]).then(({data:n})=>n),"v-5fa0991e":()=>e(()=>import("./07.1.html-b14b17a5.js"),[]).then(({data:n})=>n),"v-5c36e7e0":()=>e(()=>import("./07.2.html-cf78d4f5.js"),[]).then(({data:n})=>n),"v-58cd36a2":()=>e(()=>import("./07.3.html-9ef2ae96.js"),[]).then(({data:n})=>n),"v-0d4df688":()=>e(()=>import("./08.1.html-ae19ce1a.js"),[]).then(({data:n})=>n),"v-09e4454a":()=>e(()=>import("./08.2.html-5d484de3.js"),[]).then(({data:n})=>n),"v-067a940c":()=>e(()=>import("./08.3.html-ffc367c5.js"),[]).then(({data:n})=>n),"v-0310e2ce":()=>e(()=>import("./08.4.html-d7a447c2.js"),[]).then(({data:n})=>n),"v-52673f70":()=>e(()=>import("./09.1.html-55a5a4fa.js"),[]).then(({data:n})=>n),"v-4efd8e32":()=>e(()=>import("./09.2.html-6c13c6f4.js"),[]).then(({data:n})=>n),"v-9d14dd6c":()=>e(()=>import("./10.1.html-2814ae9f.js"),[]).then(({data:n})=>n),"v-99ab2c2e":()=>e(()=>import("./10.2.html-0a1a2c96.js"),[]).then(({data:n})=>n),"v-4e112ea6":()=>e(()=>import("./11.1.html-fd11f056.js"),[]).then(({data:n})=>n),"v-4fc60745":()=>e(()=>import("./11.2.html-03cae202.js"),[]).then(({data:n})=>n),"v-517adfe4":()=>e(()=>import("./11.3.html-b5521944.js"),[]).then(({data:n})=>n),"v-d4cbd96c":()=>e(()=>import("./12.1.html-bb4fd8d5.js"),[]).then(({data:n})=>n),"v-d162282e":()=>e(()=>import("./12.2.html-4a16b6d8.js"),[]).then(({data:n})=>n),"v-cdf876f0":()=>e(()=>import("./12.3.html-955eff71.js"),[]).then(({data:n})=>n),"v-ca8ec5b2":()=>e(()=>import("./12.4.html-6fce8cdc.js"),[]).then(({data:n})=>n),"v-4c924008":()=>e(()=>import("./13.1.html-d9a6cdc5.js"),[]).then(({data:n})=>n),"v-4e4718a7":()=>e(()=>import("./13.2.html-6a810b27.js"),[]).then(({data:n})=>n),"v-4ffbf146":()=>e(()=>import("./13.3.html-89112c08.js"),[]).then(({data:n})=>n),"v-4ab840b9":()=>e(()=>import("./14.1.html-0fd85af3.js"),[]).then(({data:n})=>n),"v-4c6d1958":()=>e(()=>import("./14.2.html-bed39bbb.js"),[]).then(({data:n})=>n),"v-4e21f1f7":()=>e(()=>import("./14.3.html-f727c957.js"),[]).then(({data:n})=>n),"v-4fd6ca96":()=>e(()=>import("./14.4.html-c81c0698.js"),[]).then(({data:n})=>n),"v-518ba335":()=>e(()=>import("./14.5.html-ccb56631.js"),[]).then(({data:n})=>n),"v-5f70d940":()=>e(()=>import("./15.1.html-8e1bf28e.js"),[]).then(({data:n})=>n),"v-6125b1df":()=>e(()=>import("./15.2.html-a1a08b91.js"),[]).then(({data:n})=>n),"v-62da8a7e":()=>e(()=>import("./15.3.html-61b841a6.js"),[]).then(({data:n})=>n),"v-648f631d":()=>e(()=>import("./15.4.html-bb7d71da.js"),[]).then(({data:n})=>n),"v-f5b4bb7e":()=>e(()=>import("./03.0.chpater_summary.html-e1a68c87.js"),[]).then(({data:n})=>n),"v-00ad664e":()=>e(()=>import("./03.1.array.html-983048ef.js"),[]).then(({data:n})=>n),"v-5bab429f":()=>e(()=>import("./03.2.slice.html-eb60e6c5.js"),[]).then(({data:n})=>n),"v-ef99c07c":()=>e(()=>import("./03.3.hashmap.html-55d5a0ea.js"),[]).then(({data:n})=>n),"v-78e33f52":()=>e(()=>import("./03.4.string.html-8cb6dc0a.js"),[]).then(({data:n})=>n),"v-eb7c0d78":()=>e(()=>import("./04.0.chapter_summary.html-c97921f5.js"),[]).then(({data:n})=>n),"v-829e24fa":()=>e(()=>import("./04.1.function.html-7144b22d.js"),[]).then(({data:n})=>n),"v-3204c3dd":()=>e(()=>import("./04.2.interface.html-d1940a56.js"),[]).then(({data:n})=>n),"v-ee300c90":()=>e(()=>import("./04.3.reflect.html-a40ac2ec.js"),[]).then(({data:n})=>n),"v-30973042":()=>e(()=>import("./05.0.chapter_summary.html-47f18614.js"),[]).then(({data:n})=>n),"v-06735c8b":()=>e(()=>import("./05.1.for_range.html-75d04132.js"),[]).then(({data:n})=>n),"v-5ae068e5":()=>e(()=>import("./05.2.select.html-09f70021.js"),[]).then(({data:n})=>n),"v-3799e97e":()=>e(()=>import("./05.3.defer.html-4972b999.js"),[]).then(({data:n})=>n),"v-50e5a21a":()=>e(()=>import("./05.4.panic_recover.html-6a8b3f32.js"),[]).then(({data:n})=>n),"v-cbcea296":()=>e(()=>import("./05.5.make_new.html-559d3870.js"),[]).then(({data:n})=>n),"v-f22856bc":()=>e(()=>import("./06.1.context.html-47d73de3.js"),[]).then(({data:n})=>n),"v-3f67611c":()=>e(()=>import("./06.2.sync-primitives.html-3aab77c0.js"),[]).then(({data:n})=>n),"v-5cebfcec":()=>e(()=>import("./06.3.timer.html-bea42163.js"),[]).then(({data:n})=>n),"v-35c742aa":()=>e(()=>import("./06.4.channel.html-41b82337.js"),[]).then(({data:n})=>n),"v-6cc31111":()=>e(()=>import("./06.5.goroutine.html-49921814.js"),[]).then(({data:n})=>n),"v-62f503b0":()=>e(()=>import("./06.6.netpoll.html-c34b6e4f.js"),[]).then(({data:n})=>n),"v-4d657308":()=>e(()=>import("./06.7.sysmon.html-fb18b20d.js"),[]).then(({data:n})=>n),"v-1bc274ab":()=>e(()=>import("./07.1.malloc.html-f983e62d.js"),[]).then(({data:n})=>n),"v-b3a58990":()=>e(()=>import("./07.2.gc.html-6efe5c6a.js"),[]).then(({data:n})=>n),"v-35640268":()=>e(()=>import("./07.3.stackmem.html-ff79513e.js"),[]).then(({data:n})=>n),"v-3706649a":()=>e(()=>import("./404.html-b949a0ab.js"),[]).then(({data:n})=>n),"v-1559ca3e":()=>e(()=>import("./index.html-9eae45d1.js"),[]).then(({data:n})=>n),"v-cfbd3fb6":()=>e(()=>import("./index.html-0a2317f3.js"),[]).then(({data:n})=>n),"v-4bea5ddf":()=>e(()=>import("./index.html-ec14f9c8.js"),[]).then(({data:n})=>n),"v-47cde344":()=>e(()=>import("./index.html-e42af44f.js"),[]).then(({data:n})=>n),"v-71f9b647":()=>e(()=>import("./index.html-e6bffff8.js"),[]).then(({data:n})=>n),"v-ba749eac":()=>e(()=>import("./index.html-3bc2b81d.js"),[]).then(({data:n})=>n),"v-7c278c2f":()=>e(()=>import("./index.html-41e9590a.js"),[]).then(({data:n})=>n),"v-3a285236":()=>e(()=>import("./index.html-3e7c8336.js"),[]).then(({data:n})=>n),"v-445d5b2a":()=>e(()=>import("./index.html-a1700131.js"),[]).then(({data:n})=>n),"v-c8296fee":()=>e(()=>import("./index.html-f0510c27.js"),[]).then(({data:n})=>n),"v-a152a89c":()=>e(()=>import("./index.html-3ebc1b98.js"),[]).then(({data:n})=>n),"v-71b3ae87":()=>e(()=>import("./index.html-694e0046.js"),[]).then(({data:n})=>n),"v-4201c114":()=>e(()=>import("./index.html-8d71dd78.js"),[]).then(({data:n})=>n),"v-0862c58e":()=>e(()=>import("./index.html-2f7bedfe.js"),[]).then(({data:n})=>n),"v-4969375b":()=>e(()=>import("./index.html-d8564da4.js"),[]).then(({data:n})=>n),"v-35c040d5":()=>e(()=>import("./index.html-87d409c2.js"),[]).then(({data:n})=>n),"v-31987621":()=>e(()=>import("./index.html-b4a39e36.js"),[]).then(({data:n})=>n),"v-7a975d53":()=>e(()=>import("./index.html-64881627.js"),[]).then(({data:n})=>n),"v-50099075":()=>e(()=>import("./index.html-52bb3c42.js"),[]).then(({data:n})=>n),"v-88ff580e":()=>e(()=>import("./index.html-e02d8cf3.js"),[]).then(({data:n})=>n),"v-27d196a6":()=>e(()=>import("./index.html-293482d2.js"),[]).then(({data:n})=>n),"v-aac0ad50":()=>e(()=>import("./index.html-45688695.js"),[]).then(({data:n})=>n),"v-01af5e14":()=>e(()=>import("./index.html-9812ee2c.js"),[]).then(({data:n})=>n),"v-43e50cbd":()=>e(()=>import("./index.html-a74d7e75.js"),[]).then(({data:n})=>n),"v-1a7ec4e8":()=>e(()=>import("./index.html-2cb6a0f1.js"),[]).then(({data:n})=>n),"v-2aa888f8":()=>e(()=>import("./index.html-91064324.js"),[]).then(({data:n})=>n),"v-2a9b19e8":()=>e(()=>import("./index.html-fe5d417c.js"),[]).then(({data:n})=>n),"v-0852455e":()=>e(()=>import("./index.html-615f44b4.js"),[]).then(({data:n})=>n),"v-1d22e941":()=>e(()=>import("./index.html-3a9cbd9c.js"),[]).then(({data:n})=>n),"v-fa453234":()=>e(()=>import("./index.html-8a827555.js"),[]).then(({data:n})=>n),"v-634e7c20":()=>e(()=>import("./index.html-62e18d89.js"),[]).then(({data:n})=>n),"v-206d929f":()=>e(()=>import("./index.html-1075ce0e.js"),[]).then(({data:n})=>n),"v-6fe9401f":()=>e(()=>import("./index.html-527b86c1.js"),[]).then(({data:n})=>n),"v-9e47132a":()=>e(()=>import("./index.html-aca6069b.js"),[]).then(({data:n})=>n),"v-88b7e15c":()=>e(()=>import("./index.html-307ca9b2.js"),[]).then(({data:n})=>n),"v-45cda98f":()=>e(()=>import("./index.html-f2cd3dbc.js"),[]).then(({data:n})=>n),"v-309ea81e":()=>e(()=>import("./index.html-7f3c4da6.js"),[]).then(({data:n})=>n),"v-28d2d5dc":()=>e(()=>import("./index.html-2291003f.js"),[]).then(({data:n})=>n),"v-62622100":()=>e(()=>import("./index.html-428d6251.js"),[]).then(({data:n})=>n),"v-5611d7d2":()=>e(()=>import("./index.html-26f579cd.js"),[]).then(({data:n})=>n),"v-7697530d":()=>e(()=>import("./index.html-459dcbe4.js"),[]).then(({data:n})=>n),"v-2661e0da":()=>e(()=>import("./index.html-71f1e491.js"),[]).then(({data:n})=>n),"v-4a15e6be":()=>e(()=>import("./index.html-f0d915e4.js"),[]).then(({data:n})=>n),"v-54b265b4":()=>e(()=>import("./index.html-bb813279.js"),[]).then(({data:n})=>n),"v-8f959c42":()=>e(()=>import("./index.html-98728a9d.js"),[]).then(({data:n})=>n),"v-08e328a3":()=>e(()=>import("./index.html-460935ad.js"),[]).then(({data:n})=>n),"v-65f6a00e":()=>e(()=>import("./index.html-86185877.js"),[]).then(({data:n})=>n),"v-35f72fa3":()=>e(()=>import("./index.html-c7ef623d.js"),[]).then(({data:n})=>n),"v-2f5276aa":()=>e(()=>import("./index.html-9a534727.js"),[]).then(({data:n})=>n),"v-9561529e":()=>e(()=>import("./index.html-7aa7d39c.js"),[]).then(({data:n})=>n),"v-65f8848d":()=>e(()=>import("./index.html-12800da3.js"),[]).then(({data:n})=>n),"v-bc1b8554":()=>e(()=>import("./index.html-d3f6c8e1.js"),[]).then(({data:n})=>n),"v-28dacb7d":()=>e(()=>import("./index.html-e0a4861b.js"),[]).then(({data:n})=>n),"v-7a30c96c":()=>e(()=>import("./index.html-7ad7a310.js"),[]).then(({data:n})=>n),"v-260ce97e":()=>e(()=>import("./index.html-7e7d834f.js"),[]).then(({data:n})=>n),"v-1e2a6757":()=>e(()=>import("./index.html-059eb272.js"),[]).then(({data:n})=>n),"v-32a7a3e3":()=>e(()=>import("./index.html-7842a431.js"),[]).then(({data:n})=>n),"v-1e3de95e":()=>e(()=>import("./index.html-8f2143cf.js"),[]).then(({data:n})=>n),"v-0674fba9":()=>e(()=>import("./index.html-d5be282b.js"),[]).then(({data:n})=>n),"v-3efe7f8e":()=>e(()=>import("./index.html-64a73ed1.js"),[]).then(({data:n})=>n),"v-77926428":()=>e(()=>import("./index.html-44fe70c5.js"),[]).then(({data:n})=>n),"v-35b08162":()=>e(()=>import("./index.html-68ab0b0d.js"),[]).then(({data:n})=>n),"v-3af528ec":()=>e(()=>import("./index.html-e80aa5e1.js"),[]).then(({data:n})=>n),"v-89bbd888":()=>e(()=>import("./index.html-3a215447.js"),[]).then(({data:n})=>n),"v-774c21eb":()=>e(()=>import("./index.html-fccfbe2c.js"),[]).then(({data:n})=>n),"v-79f6cfb7":()=>e(()=>import("./index.html-809fa86a.js"),[]).then(({data:n})=>n),"v-7ea44194":()=>e(()=>import("./index.html-424bc557.js"),[]).then(({data:n})=>n),"v-884d4ab4":()=>e(()=>import("./index.html-b6472ddf.js"),[]).then(({data:n})=>n),"v-dab3fc08":()=>e(()=>import("./index.html-ee989e20.js"),[]).then(({data:n})=>n),"v-34128616":()=>e(()=>import("./index.html-decc3b75.js"),[]).then(({data:n})=>n),"v-1706a50a":()=>e(()=>import("./index.html-b2fc8f3e.js"),[]).then(({data:n})=>n),"v-24361689":()=>e(()=>import("./index.html-6b671bd9.js"),[]).then(({data:n})=>n),"v-008537c4":()=>e(()=>import("./index.html-1097f4a7.js"),[]).then(({data:n})=>n),"v-1d996994":()=>e(()=>import("./index.html-c1965a56.js"),[]).then(({data:n})=>n),"v-6b88e44e":()=>e(()=>import("./index.html-22c4584f.js"),[]).then(({data:n})=>n),"v-a9bb235a":()=>e(()=>import("./index.html-20f3f062.js"),[]).then(({data:n})=>n),"v-7f9b2d58":()=>e(()=>import("./index.html-7ba52e59.js"),[]).then(({data:n})=>n),"v-a9bb231c":()=>e(()=>import("./index.html-23c1f1a8.js"),[]).then(({data:n})=>n),"v-a9bb22de":()=>e(()=>import("./index.html-56be2340.js"),[]).then(({data:n})=>n),"v-a9bb22a0":()=>e(()=>import("./index.html-c15f749d.js"),[]).then(({data:n})=>n),"v-a9bb2262":()=>e(()=>import("./index.html-0eb89877.js"),[]).then(({data:n})=>n),"v-a9bb2224":()=>e(()=>import("./index.html-3fa747f7.js"),[]).then(({data:n})=>n),"v-a9bb1cd0":()=>e(()=>import("./index.html-71e0f6b3.js"),[]).then(({data:n})=>n),"v-a9bb1c92":()=>e(()=>import("./index.html-9e4e863a.js"),[]).then(({data:n})=>n),"v-a9bb1c16":()=>e(()=>import("./index.html-8654a99f.js"),[]).then(({data:n})=>n),"v-a9bb1bd8":()=>e(()=>import("./index.html-2396a4b3.js"),[]).then(({data:n})=>n),"v-64259ab4":()=>e(()=>import("./index.html-2de500a5.js"),[]).then(({data:n})=>n),"v-b379315e":()=>e(()=>import("./index.html-d5dc6b5b.js"),[]).then(({data:n})=>n),"v-95615260":()=>e(()=>import("./index.html-946b763b.js"),[]).then(({data:n})=>n),"v-46979068":()=>e(()=>import("./index.html-abc184ad.js"),[]).then(({data:n})=>n),"v-dc7d13d2":()=>e(()=>import("./index.html-0ab9cf89.js"),[]).then(({data:n})=>n),"v-540d63d0":()=>e(()=>import("./index.html-3ee837cd.js"),[]).then(({data:n})=>n),"v-79d0e8a8":()=>e(()=>import("./index.html-f1d3a322.js"),[]).then(({data:n})=>n),"v-7dc276bb":()=>e(()=>import("./index.html-8646ea29.js"),[]).then(({data:n})=>n),"v-eb23a7cc":()=>e(()=>import("./index.html-8f721fe7.js"),[]).then(({data:n})=>n),"v-6caeff4e":()=>e(()=>import("./index.html-acc138ae.js"),[]).then(({data:n})=>n),"v-1701a011":()=>e(()=>import("./index.html-ed7dba05.js"),[]).then(({data:n})=>n),"v-3c12dfe8":()=>e(()=>import("./index.html-b62a3433.js"),[]).then(({data:n})=>n),"v-becaf144":()=>e(()=>import("./index.html-0e8d5bc3.js"),[]).then(({data:n})=>n),"v-427f7972":()=>e(()=>import("./index.html-547863eb.js"),[]).then(({data:n})=>n),"v-76b6a425":()=>e(()=>import("./index.html-5c60eb88.js"),[]).then(({data:n})=>n),"v-032edb4d":()=>e(()=>import("./index.html-5b812629.js"),[]).then(({data:n})=>n),"v-74257a30":()=>e(()=>import("./index.html-415371c0.js"),[]).then(({data:n})=>n),"v-6cec00cb":()=>e(()=>import("./index.html-6fa89dad.js"),[]).then(({data:n})=>n),"v-0d9eda0c":()=>e(()=>import("./index.html-9734a1f0.js"),[]).then(({data:n})=>n),"v-d621dc0c":()=>e(()=>import("./index.html-514ea887.js"),[]).then(({data:n})=>n),"v-022f2d5c":()=>e(()=>import("./index.html-4eecca7a.js"),[]).then(({data:n})=>n),"v-61c4714f":()=>e(()=>import("./index.html-7bf1c53c.js"),[]).then(({data:n})=>n),"v-2149e688":()=>e(()=>import("./index.html-956666f7.js"),[]).then(({data:n})=>n),"v-84faf59c":()=>e(()=>import("./index.html-693535e6.js"),[]).then(({data:n})=>n),"v-261404a9":()=>e(()=>import("./index.html-03c187a7.js"),[]).then(({data:n})=>n),"v-6afb496d":()=>e(()=>import("./index.html-7435f8a5.js"),[]).then(({data:n})=>n),"v-1c3be1e6":()=>e(()=>import("./index.html-39cc8332.js"),[]).then(({data:n})=>n),"v-7eec0d96":()=>e(()=>import("./index.html-a3f2867c.js"),[]).then(({data:n})=>n),"v-72b940c4":()=>e(()=>import("./index.html-d290066d.js"),[]).then(({data:n})=>n),"v-5decfa84":()=>e(()=>import("./index.html-8404be09.js"),[]).then(({data:n})=>n),"v-075c6c62":()=>e(()=>import("./index.html-0e8612e8.js"),[]).then(({data:n})=>n),"v-506407f4":()=>e(()=>import("./index.html-51712f99.js"),[]).then(({data:n})=>n),"v-37a8c5a0":()=>e(()=>import("./index.html-954aedc8.js"),[]).then(({data:n})=>n),"v-0379cba1":()=>e(()=>import("./index.html-f628fb49.js"),[]).then(({data:n})=>n),"v-0fe52c37":()=>e(()=>import("./index.html-22ce4c19.js"),[]).then(({data:n})=>n),"v-c6edb6ae":()=>e(()=>import("./index.html-d7617a2c.js"),[]).then(({data:n})=>n),"v-e52c881c":()=>e(()=>import("./index.html-717233f3.js"),[]).then(({data:n})=>n),"v-154dc4c4":()=>e(()=>import("./index.html-b1dbb885.js"),[]).then(({data:n})=>n),"v-01560935":()=>e(()=>import("./index.html-bdea0e07.js"),[]).then(({data:n})=>n),"v-02c6a6b2":()=>e(()=>import("./index.html-2a96b9f7.js"),[]).then(({data:n})=>n),"v-0017792c":()=>e(()=>import("./index.html-4cfc72e2.js"),[]).then(({data:n})=>n),"v-2e75e8de":()=>e(()=>import("./index.html-1d38e8db.js"),[]).then(({data:n})=>n),"v-6f7bfa04":()=>e(()=>import("./index.html-a3662fec.js"),[]).then(({data:n})=>n),"v-0e0b961f":()=>e(()=>import("./index.html-01774ac9.js"),[]).then(({data:n})=>n),"v-7e751551":()=>e(()=>import("./index.html-b388fc6a.js"),[]).then(({data:n})=>n),"v-b6ff5888":()=>e(()=>import("./index.html-83b6f165.js"),[]).then(({data:n})=>n),"v-29e33f95":()=>e(()=>import("./index.html-58604dfe.js"),[]).then(({data:n})=>n),"v-dbaf7c9c":()=>e(()=>import("./index.html-f2d4dc16.js"),[]).then(({data:n})=>n),"v-1e3e75c0":()=>e(()=>import("./index.html-12e7762e.js"),[]).then(({data:n})=>n),"v-0564ef99":()=>e(()=>import("./index.html-49f0fcbd.js"),[]).then(({data:n})=>n),"v-3de926ea":()=>e(()=>import("./index.html-51f789ed.js"),[]).then(({data:n})=>n),"v-7b34f334":()=>e(()=>import("./index.html-daf9ed54.js"),[]).then(({data:n})=>n),"v-3c599b43":()=>e(()=>import("./index.html-34afb11e.js"),[]).then(({data:n})=>n),"v-5bc93818":()=>e(()=>import("./index.html-afbd908b.js"),[]).then(({data:n})=>n),"v-1e4ce2de":()=>e(()=>import("./index.html-9e90e914.js"),[]).then(({data:n})=>n),"v-58c4e07f":()=>e(()=>import("./index.html-d5209fbc.js"),[]).then(({data:n})=>n),"v-a0d528ce":()=>e(()=>import("./index.html-c789a22d.js"),[]).then(({data:n})=>n),"v-e9a125fe":()=>e(()=>import("./index.html-fabb3ea6.js"),[]).then(({data:n})=>n),"v-231414e4":()=>e(()=>import("./index.html-360c7428.js"),[]).then(({data:n})=>n),"v-9c48d85a":()=>e(()=>import("./index.html-e7040add.js"),[]).then(({data:n})=>n),"v-2ae80a11":()=>e(()=>import("./index.html-aee12544.js"),[]).then(({data:n})=>n),"v-7d1a55bb":()=>e(()=>import("./index.html-cf424826.js"),[]).then(({data:n})=>n),"v-744d024e":()=>e(()=>import("./index.html-b422a510.js"),[]).then(({data:n})=>n),"v-27fb5a12":()=>e(()=>import("./index.html-1bec925d.js"),[]).then(({data:n})=>n),"v-2926fcc3":()=>e(()=>import("./index.html-510dc37c.js"),[]).then(({data:n})=>n),"v-95b29426":()=>e(()=>import("./index.html-727474fb.js"),[]).then(({data:n})=>n),"v-3f8dd7a0":()=>e(()=>import("./index.html-9fff5c28.js"),[]).then(({data:n})=>n),"v-57d268b0":()=>e(()=>import("./index.html-f686f837.js"),[]).then(({data:n})=>n),"v-3a057524":()=>e(()=>import("./index.html-cec890d1.js"),[]).then(({data:n})=>n),"v-43d7543a":()=>e(()=>import("./index.html-5b3b7cd7.js"),[]).then(({data:n})=>n),"v-08ebf6aa":()=>e(()=>import("./index.html-84d8ef76.js"),[]).then(({data:n})=>n),"v-65efd6b5":()=>e(()=>import("./index.html-7bad4541.js"),[]).then(({data:n})=>n),"v-78b5f603":()=>e(()=>import("./index.html-f40895ea.js"),[]).then(({data:n})=>n),"v-bd055baa":()=>e(()=>import("./index.html-2461ce56.js"),[]).then(({data:n})=>n),"v-16e1a3ee":()=>e(()=>import("./index.html-39048efb.js"),[]).then(({data:n})=>n),"v-a074e84e":()=>e(()=>import("./index.html-72ef3845.js"),[]).then(({data:n})=>n),"v-b310d59e":()=>e(()=>import("./index.html-b9dc389c.js"),[]).then(({data:n})=>n),"v-dc8c5890":()=>e(()=>import("./index.html-ffdb5f73.js"),[]).then(({data:n})=>n),"v-067f6802":()=>e(()=>import("./index.html-100e8c11.js"),[]).then(({data:n})=>n),"v-58706565":()=>e(()=>import("./index.html-a7d14bb2.js"),[]).then(({data:n})=>n),"v-b30db0d4":()=>e(()=>import("./index.html-9f02f2b0.js"),[]).then(({data:n})=>n),"v-3d18303b":()=>e(()=>import("./index.html-6fb57159.js"),[]).then(({data:n})=>n),"v-03854a35":()=>e(()=>import("./index.html-c98c32f3.js"),[]).then(({data:n})=>n),"v-54c4d176":()=>e(()=>import("./index.html-3842ffbf.js"),[]).then(({data:n})=>n),"v-00817fb3":()=>e(()=>import("./index.html-1bd5e731.js"),[]).then(({data:n})=>n),"v-6c5e4d32":()=>e(()=>import("./index.html-df31b16b.js"),[]).then(({data:n})=>n),"v-287de1de":()=>e(()=>import("./index.html-760d3053.js"),[]).then(({data:n})=>n),"v-65f6d381":()=>e(()=>import("./index.html-9d146e82.js"),[]).then(({data:n})=>n),"v-b3024e96":()=>e(()=>import("./index.html-439f6be8.js"),[]).then(({data:n})=>n),"v-9717cc36":()=>e(()=>import("./index.html-7edf658e.js"),[]).then(({data:n})=>n),"v-45a92e78":()=>e(()=>import("./index.html-deb6f674.js"),[]).then(({data:n})=>n),"v-011c83e2":()=>e(()=>import("./index.html-1d91a9e0.js"),[]).then(({data:n})=>n),"v-d36ddc48":()=>e(()=>import("./index.html-210d8b9b.js"),[]).then(({data:n})=>n),"v-e2bac56c":()=>e(()=>import("./index.html-0b2e3b8f.js"),[]).then(({data:n})=>n),"v-b310b71a":()=>e(()=>import("./index.html-467f5bf0.js"),[]).then(({data:n})=>n),"v-65f4ef02":()=>e(()=>import("./index.html-951ad50f.js"),[]).then(({data:n})=>n),"v-1e110772":()=>e(()=>import("./index.html-228fa897.js"),[]).then(({data:n})=>n),"v-ab4b264e":()=>e(()=>import("./index.html-258054ab.js"),[]).then(({data:n})=>n),"v-b2ffcb18":()=>e(()=>import("./index.html-8a3372b3.js"),[]).then(({data:n})=>n),"v-8848dfa8":()=>e(()=>import("./index.html-e1d4266b.js"),[]).then(({data:n})=>n),"v-b30332ba":()=>e(()=>import("./index.html-33f31e14.js"),[]).then(({data:n})=>n),"v-bab790d4":()=>e(()=>import("./index.html-6cb1670f.js"),[]).then(({data:n})=>n),"v-287f3643":()=>e(()=>import("./index.html-5d08ac37.js"),[]).then(({data:n})=>n),"v-6af60407":()=>e(()=>import("./index.html-0759a3ec.js"),[]).then(({data:n})=>n),"v-4b0ad344":()=>e(()=>import("./index.html-6995c370.js"),[]).then(({data:n})=>n),"v-94c7f10c":()=>e(()=>import("./index.html-987d655f.js"),[]).then(({data:n})=>n),"v-3fb58c9e":()=>e(()=>import("./index.html-72d7a4a8.js"),[]).then(({data:n})=>n),"v-2953cd2f":()=>e(()=>import("./index.html-403c51f9.js"),[]).then(({data:n})=>n),"v-b306110a":()=>e(()=>import("./index.html-164ecf3c.js"),[]).then(({data:n})=>n),"v-546163eb":()=>e(()=>import("./index.html-80cc2824.js"),[]).then(({data:n})=>n),"v-2850a9ab":()=>e(()=>import("./index.html-2f01be2b.js"),[]).then(({data:n})=>n),"v-f841e7a0":()=>e(()=>import("./index.html-c8216563.js"),[]).then(({data:n})=>n),"v-0ffafb8a":()=>e(()=>import("./index.html-9f5b69f2.js"),[]).then(({data:n})=>n),"v-337bd5ac":()=>e(()=>import("./index.html-6c9c2277.js"),[]).then(({data:n})=>n)},zi=JSON.parse('{"base":"/","lang":"en-US","title":"","description":"","head":[["meta",{"name":"google-site-verification","content":"lHBWOiWCnBWvc1h4REqjllalv9ZpQbXbHDdM8chFuuw"}],["script",{"src":"https://fastly.jsdelivr.net/gh/dreamjz/live2d-widget@latest/autoload.js"}]],"locales":{"/en/":{"lang":"en-US","title":"Blog Demo","description":"A blog demo for vuepress-theme-hope"},"/":{"lang":"zh-CN","title":"今朝のブログ","description":"今朝のブログ"}}}'),ts={"v-8daa1a0e":r(()=>e(()=>import("./index.html-98af1f66.js"),["assets/index.html-98af1f66.js","assets/framework-09afcf0b.js"])),"v-fd0cf4b0":r(()=>e(()=>import("./about-me.html-1b201b76.js"),["assets/about-me.html-1b201b76.js","assets/framework-09afcf0b.js"])),"v-145ac574":r(()=>e(()=>import("./index.html-36e0c9e9.js"),["assets/index.html-36e0c9e9.js","assets/framework-09afcf0b.js"])),"v-2d0a870d":r(()=>e(()=>import("./index.html-1d23eef6.js"),["assets/index.html-1d23eef6.js","assets/framework-09afcf0b.js"])),"v-5aa3d8ba":r(()=>e(()=>import("./intro.html-9778898f.js"),["assets/intro.html-9778898f.js","assets/framework-09afcf0b.js"])),"v-367b840a":r(()=>e(()=>import("./slides.html-4f67fa18.js"),["assets/slides.html-4f67fa18.js","assets/framework-09afcf0b.js"])),"v-6beb5d16":r(()=>e(()=>import("./index.html-e926d89d.js"),["assets/index.html-e926d89d.js","assets/framework-09afcf0b.js"])),"v-14e2aca8":r(()=>e(()=>import("./index.html-22d35970.js"),["assets/index.html-22d35970.js","assets/framework-09afcf0b.js"])),"v-15054f24":r(()=>e(()=>import("./index.html-9b620880.js"),["assets/index.html-9b620880.js","assets/framework-09afcf0b.js"])),"v-ba0625c8":r(()=>e(()=>import("./index.html-e89b014f.js"),["assets/index.html-e89b014f.js","assets/framework-09afcf0b.js"])),"v-1559a150":r(()=>e(()=>import("./index.html-91706e5f.js"),["assets/index.html-91706e5f.js","assets/framework-09afcf0b.js"])),"v-29289036":r(()=>e(()=>import("./bookmark.html-bd3fc86d.js"),["assets/bookmark.html-bd3fc86d.js","assets/framework-09afcf0b.js"])),"v-6beeb8fc":r(()=>e(()=>import("./bytes_to_string_quickly.html-416f9c48.js"),["assets/bytes_to_string_quickly.html-416f9c48.js","assets/framework-09afcf0b.js"])),"v-53e31fe0":r(()=>e(()=>import("./natural_sort.html-fed1cfa9.js"),["assets/natural_sort.html-fed1cfa9.js","assets/framework-09afcf0b.js"])),"v-4b6696b8":r(()=>e(()=>import("./clash-linux.html-7e77c5e5.js"),["assets/clash-linux.html-7e77c5e5.js","assets/framework-09afcf0b.js"])),"v-86290fc2":r(()=>e(()=>import("./pi-docker-blog.html-184ef51b.js"),["assets/pi-docker-blog.html-184ef51b.js","assets/framework-09afcf0b.js"])),"v-99c27f88":r(()=>e(()=>import("./pi-go.html-625f88c1.js"),["assets/pi-go.html-625f88c1.js","assets/framework-09afcf0b.js"])),"v-b5ed2b58":r(()=>e(()=>import("./pi-nginx.html-fc6ccd32.js"),["assets/pi-nginx.html-fc6ccd32.js","assets/framework-09afcf0b.js"])),"v-50e28978":r(()=>e(()=>import("./ghaction.html-6c8425c8.js"),["assets/ghaction.html-6c8425c8.js","assets/framework-09afcf0b.js"])),"v-d113dcdc":r(()=>e(()=>import("./live2d_widget.html-0fa3bd5a.js"),["assets/live2d_widget.html-0fa3bd5a.js","assets/framework-09afcf0b.js"])),"v-020997ea":r(()=>e(()=>import("./migrate_to_v2.html-a6a1af3b.js"),["assets/migrate_to_v2.html-a6a1af3b.js","assets/framework-09afcf0b.js"])),"v-17581545":r(()=>e(()=>import("./moe-counter.html-e44731c9.js"),["assets/moe-counter.html-e44731c9.js","assets/framework-09afcf0b.js"])),"v-0ae43aab":r(()=>e(()=>import("./ssl.html-766542f1.js"),["assets/ssl.html-766542f1.js","assets/framework-09afcf0b.js"])),"v-1c39fd42":r(()=>e(()=>import("./rewrite_history.html-15f65b09.js"),["assets/rewrite_history.html-15f65b09.js","assets/framework-09afcf0b.js"])),"v-7a6ac2b6":r(()=>e(()=>import("./SliceTricks.html-8cd6a024.js"),["assets/SliceTricks.html-8cd6a024.js","assets/framework-09afcf0b.js"])),"v-c02a4b2e":r(()=>e(()=>import("./1.file_permission.html-8fea624f.js"),["assets/1.file_permission.html-8fea624f.js","assets/framework-09afcf0b.js"])),"v-2ebd7ecc":r(()=>e(()=>import("./1.popular_protocols.html-b616a790.js"),["assets/1.popular_protocols.html-b616a790.js","assets/framework-09afcf0b.js"])),"v-395cd082":r(()=>e(()=>import("./index.html-4785354a.js"),["assets/index.html-4785354a.js","assets/framework-09afcf0b.js"])),"v-70eda030":r(()=>e(()=>import("./disable.html-26c1f895.js"),["assets/disable.html-26c1f895.js","assets/framework-09afcf0b.js"])),"v-3777b6d3":r(()=>e(()=>import("./encrypt.html-92eb00c0.js"),["assets/encrypt.html-92eb00c0.js","assets/framework-09afcf0b.js"])),"v-4a2a37eb":r(()=>e(()=>import("./markdown.html-1ce9ae75.js"),["assets/markdown.html-1ce9ae75.js","assets/framework-09afcf0b.js"])),"v-0e4acecb":r(()=>e(()=>import("./page.html-898a6d3b.js"),["assets/page.html-898a6d3b.js","assets/framework-09afcf0b.js"])),"v-fb852992":r(()=>e(()=>import("./cherry.html-0126bebd.js"),["assets/cherry.html-0126bebd.js","assets/framework-09afcf0b.js"])),"v-4fd051a1":r(()=>e(()=>import("./dragonfruit.html-e79d27ca.js"),["assets/dragonfruit.html-e79d27ca.js","assets/framework-09afcf0b.js"])),"v-57615dc1":r(()=>e(()=>import("./strawberry.html-b5ab8555.js"),["assets/strawberry.html-b5ab8555.js","assets/framework-09afcf0b.js"])),"v-285adf66":r(()=>e(()=>import("./tomato.html-b093d303.js"),["assets/tomato.html-b093d303.js","assets/framework-09afcf0b.js"])),"v-a747c65e":r(()=>e(()=>import("./golang.html-498df4e8.js"),["assets/golang.html-498df4e8.js","assets/framework-09afcf0b.js"])),"v-57cc0d8b":r(()=>e(()=>import("./mysql.html-a6fb860b.js"),["assets/mysql.html-a6fb860b.js","assets/framework-09afcf0b.js"])),"v-2916a324":r(()=>e(()=>import("./network.html-5c1dbdf6.js"),["assets/network.html-5c1dbdf6.js","assets/framework-09afcf0b.js"])),"v-822adc4e":r(()=>e(()=>import("./redis.html-c2fa35c5.js"),["assets/redis.html-c2fa35c5.js","assets/framework-09afcf0b.js"])),"v-72954ae8":r(()=>e(()=>import("./1.twoSum.html-87ddefb9.js"),["assets/1.twoSum.html-87ddefb9.js","assets/framework-09afcf0b.js"])),"v-0894e1ba":r(()=>e(()=>import("./102.binary_tree_level_order_traversal.html-fee4947e.js"),["assets/102.binary_tree_level_order_traversal.html-fee4947e.js","assets/framework-09afcf0b.js"])),"v-535d9b4c":r(()=>e(()=>import("./103.binary_tree_zigzag_level_order_traversal.html-908dd836.js"),["assets/103.binary_tree_zigzag_level_order_traversal.html-908dd836.js","assets/framework-09afcf0b.js"])),"v-549fa92c":r(()=>e(()=>import("./121.122.123.188.309.714.stock_series.html-cd56ea43.js"),["assets/121.122.123.188.309.714.stock_series.html-cd56ea43.js","assets/framework-09afcf0b.js"])),"v-3eb533c2":r(()=>e(()=>import("./141.142.linked_list_cycle.html-89972eaf.js"),["assets/141.142.linked_list_cycle.html-89972eaf.js","assets/framework-09afcf0b.js"])),"v-097e0892":r(()=>e(()=>import("./146.LRU_cache.html-55513152.js"),["assets/146.LRU_cache.html-55513152.js","assets/framework-09afcf0b.js"])),"v-9655c078":r(()=>e(()=>import("./15.three_sum.html-6b129243.js"),["assets/15.three_sum.html-6b129243.js","assets/framework-09afcf0b.js"])),"v-5125b4c6":r(()=>e(()=>import("./20.valid_parentheses.html-6a6248f4.js"),["assets/20.valid_parentheses.html-6a6248f4.js","assets/framework-09afcf0b.js"])),"v-2037675e":r(()=>e(()=>import("./200.number_of_islands.html-05673b53.js"),["assets/200.number_of_islands.html-05673b53.js","assets/framework-09afcf0b.js"])),"v-29f01add":r(()=>e(()=>import("./206.reverse_linked_list.html-55a15fd0.js"),["assets/206.reverse_linked_list.html-55a15fd0.js","assets/framework-09afcf0b.js"])),"v-a32a07dc":r(()=>e(()=>import("./21.merge_two_sorted_lists.html-c796d724.js"),["assets/21.merge_two_sorted_lists.html-c796d724.js","assets/framework-09afcf0b.js"])),"v-6348cbb8":r(()=>e(()=>import("./215.kth_ele_in_arr.html-c9b97e45.js"),["assets/215.kth_ele_in_arr.html-c9b97e45.js","assets/framework-09afcf0b.js"])),"v-dab163b2":r(()=>e(()=>import("./25.reverse_nodes_in_k_group.html-a08c6b64.js"),["assets/25.reverse_nodes_in_k_group.html-a08c6b64.js","assets/framework-09afcf0b.js"])),"v-0aac4a8d":r(()=>e(()=>import("./3.longest_substring_without_repeating_characters.html-18034d3f.js"),["assets/3.longest_substring_without_repeating_characters.html-18034d3f.js","assets/framework-09afcf0b.js"])),"v-de9f1ca0":r(()=>e(()=>import("./33.search_in_rotated_sorted_array.html-a28244eb.js"),["assets/33.search_in_rotated_sorted_array.html-a28244eb.js","assets/framework-09afcf0b.js"])),"v-8355eb16":r(()=>e(()=>import("./46.permutations.html-a88ad0dc.js"),["assets/46.permutations.html-a88ad0dc.js","assets/framework-09afcf0b.js"])),"v-6b3e55f8":r(()=>e(()=>import("./5.longest_palindromic_substring.html-e12f1d93.js"),["assets/5.longest_palindromic_substring.html-e12f1d93.js","assets/framework-09afcf0b.js"])),"v-2fe69306":r(()=>e(()=>import("./53.maximum_subarray.html-897b8e49.js"),["assets/53.maximum_subarray.html-897b8e49.js","assets/framework-09afcf0b.js"])),"v-1af74c42":r(()=>e(()=>import("./88.merge_sorted_array.html-460b5296.js"),["assets/88.merge_sorted_array.html-460b5296.js","assets/framework-09afcf0b.js"])),"v-377f2ac8":r(()=>e(()=>import("./quick_start.html-654043d1.js"),["assets/quick_start.html-654043d1.js","assets/framework-09afcf0b.js"])),"v-7991054c":r(()=>e(()=>import("./endless.html-cd690ab8.js"),["assets/endless.html-cd690ab8.js","assets/framework-09afcf0b.js"])),"v-959407fc":r(()=>e(()=>import("./gin.html-20af279c.js"),["assets/gin.html-20af279c.js","assets/framework-09afcf0b.js"])),"v-385e0822":r(()=>e(()=>import("./go-jwt.html-d1aca81d.js"),["assets/go-jwt.html-d1aca81d.js","assets/framework-09afcf0b.js"])),"v-18c55e38":r(()=>e(()=>import("./nginx.html-8c154215.js"),["assets/nginx.html-8c154215.js","assets/framework-09afcf0b.js"])),"v-5208c422":r(()=>e(()=>import("./quick_start.html-b9a8d931.js"),["assets/quick_start.html-b9a8d931.js","assets/framework-09afcf0b.js"])),"v-72b977ca":r(()=>e(()=>import("./index.html-4896e534.js"),["assets/index.html-4896e534.js","assets/framework-09afcf0b.js"])),"v-27637179":r(()=>e(()=>import("./index.html-9bb7dc07.js"),["assets/index.html-9bb7dc07.js","assets/framework-09afcf0b.js"])),"v-810fe0d8":r(()=>e(()=>import("./01.dp_sc_optimization_summary.html-07137488.js"),["assets/01.dp_sc_optimization_summary.html-07137488.js","assets/framework-09afcf0b.js"])),"v-570e4ea8":r(()=>e(()=>import("./02.general_solution_of_stock_series_problem.html-806e530b.js"),["assets/02.general_solution_of_stock_series_problem.html-806e530b.js","assets/framework-09afcf0b.js"])),"v-e16459c4":r(()=>e(()=>import("./01.QuickSort.html-17af86d8.js"),["assets/01.QuickSort.html-17af86d8.js","assets/framework-09afcf0b.js"])),"v-3f5dd1dc":r(()=>e(()=>import("./02.MergeSort.html-69e3f19e.js"),["assets/02.MergeSort.html-69e3f19e.js","assets/framework-09afcf0b.js"])),"v-025d7b61":r(()=>e(()=>import("./03.HeapSort.html-91b21d11.js"),["assets/03.HeapSort.html-91b21d11.js","assets/framework-09afcf0b.js"])),"v-7ee1bb0f":r(()=>e(()=>import("./0.00.html-846a03ea.js"),["assets/0.00.html-846a03ea.js","assets/framework-09afcf0b.js"])),"v-4e6da3c9":r(()=>e(()=>import("./01.1.html-6eda1c5c.js"),["assets/01.1.html-6eda1c5c.js","assets/framework-09afcf0b.js"])),"v-50227c68":r(()=>e(()=>import("./01.2.html-d5f78836.js"),["assets/01.2.html-d5f78836.js","assets/framework-09afcf0b.js"])),"v-51d75507":r(()=>e(()=>import("./01.3.html-b2048707.js"),["assets/01.3.html-b2048707.js","assets/framework-09afcf0b.js"])),"v-1f30217a":r(()=>e(()=>import("./1.impl_of_heap.html-22b00af7.js"),["assets/1.impl_of_heap.html-22b00af7.js","assets/framework-09afcf0b.js"])),"v-2b556b2e":r(()=>e(()=>import("./01.1.why_is_this_slicegrow_formula.html-a7101438.js"),["assets/01.1.why_is_this_slicegrow_formula.html-a7101438.js","assets/framework-09afcf0b.js"])),"v-57baa4bc":r(()=>e(()=>import("./01.2.why_hmap_overflowthreshold_loadfactory.html-bc843562.js"),["assets/01.2.why_hmap_overflowthreshold_loadfactory.html-bc843562.js","assets/framework-09afcf0b.js"])),"v-e0a4562c":r(()=>e(()=>import("./3.why_cannot_value_using_pointerinterfacemethods.html-74403aa3.js"),["assets/3.why_cannot_value_using_pointerinterfacemethods.html-74403aa3.js","assets/framework-09afcf0b.js"])),"v-040284a4":r(()=>e(()=>import("./4.why_iterate_map_randomly.html-a9a0dff7.js"),["assets/4.why_iterate_map_randomly.html-a9a0dff7.js","assets/framework-09afcf0b.js"])),"v-58aa03b4":r(()=>e(()=>import("./1.html-b0f8d7a3.js"),["assets/1.html-b0f8d7a3.js","assets/framework-09afcf0b.js"])),"v-55405276":r(()=>e(()=>import("./2.html-7fbf1fba.js"),["assets/2.html-7fbf1fba.js","assets/framework-09afcf0b.js"])),"v-51d6a138":r(()=>e(()=>import("./3.html-62269f7a.js"),["assets/3.html-62269f7a.js","assets/framework-09afcf0b.js"])),"v-4e6ceffa":r(()=>e(()=>import("./4.html-5b5b24ba.js"),["assets/4.html-5b5b24ba.js","assets/framework-09afcf0b.js"])),"v-e748286e":r(()=>e(()=>import("./1.html-9ac46294.js"),["assets/1.html-9ac46294.js","assets/framework-09afcf0b.js"])),"v-e3de7730":r(()=>e(()=>import("./2.html-b5ab964f.js"),["assets/2.html-b5ab964f.js","assets/framework-09afcf0b.js"])),"v-e074c5f2":r(()=>e(()=>import("./3.html-5fcc09ba.js"),["assets/3.html-5fcc09ba.js","assets/framework-09afcf0b.js"])),"v-dd0b14b4":r(()=>e(()=>import("./4.html-7239c26e.js"),["assets/4.html-7239c26e.js","assets/framework-09afcf0b.js"])),"v-62f769e2":r(()=>e(()=>import("./118.pascals-triangle.html-4e5424cc.js"),["assets/118.pascals-triangle.html-4e5424cc.js","assets/framework-09afcf0b.js"])),"v-70286756":r(()=>e(()=>import("./119.Pascals-Triangle-II.html-238d33a2.js"),["assets/119.Pascals-Triangle-II.html-238d33a2.js","assets/framework-09afcf0b.js"])),"v-06561839":r(()=>e(()=>import("./151_reverse_words_in_string.html-ec954bc6.js"),["assets/151_reverse_words_in_string.html-ec954bc6.js","assets/framework-09afcf0b.js"])),"v-1e6f1d5c":r(()=>e(()=>import("./153.Find-Minimum-In-Rotated-Sorted-Array.html-cbfecff6.js"),["assets/153.Find-Minimum-In-Rotated-Sorted-Array.html-cbfecff6.js","assets/framework-09afcf0b.js"])),"v-492efb38":r(()=>e(()=>import("./167.Two-sum-ii-input-array-is-sorted.html-306fd600.js"),["assets/167.Two-sum-ii-input-array-is-sorted.html-306fd600.js","assets/framework-09afcf0b.js"])),"v-311bd816":r(()=>e(()=>import("./1_Two_Sum.html-c28acb29.js"),["assets/1_Two_Sum.html-c28acb29.js","assets/framework-09afcf0b.js"])),"v-5501cf2c":r(()=>e(()=>import("./35_Search_insert_position.html-d89b773c.js"),["assets/35_Search_insert_position.html-d89b773c.js","assets/framework-09afcf0b.js"])),"v-ad253b78":r(()=>e(()=>import("./557.Reverse-Words-In-a-String-III.html-dad55600.js"),["assets/557.Reverse-Words-In-a-String-III.html-dad55600.js","assets/framework-09afcf0b.js"])),"v-821df360":r(()=>e(()=>import("./724_Pivot_Index.html-84148a44.js"),["assets/724_Pivot_Index.html-84148a44.js","assets/framework-09afcf0b.js"])),"v-04b56930":r(()=>e(()=>import("./Concepts.html-bd76a474.js"),["assets/Concepts.html-bd76a474.js","assets/framework-09afcf0b.js"])),"v-765b1aa3":r(()=>e(()=>import("./705.Design-HashSet.html-64ec7bb5.js"),["assets/705.Design-HashSet.html-64ec7bb5.js","assets/framework-09afcf0b.js"])),"v-3940b36a":r(()=>e(()=>import("./706.Design-HashMap.html-aab69bcc.js"),["assets/706.Design-HashMap.html-aab69bcc.js","assets/framework-09afcf0b.js"])),"v-349a846f":r(()=>e(()=>import("./concepts.html-5ea83784.js"),["assets/concepts.html-5ea83784.js","assets/framework-09afcf0b.js"])),"v-43f192d4":r(()=>e(()=>import("./01.1.html-07cc5494.js"),["assets/01.1.html-07cc5494.js","assets/framework-09afcf0b.js"])),"v-4087e196":r(()=>e(()=>import("./01.2.html-6f985f0b.js"),["assets/01.2.html-6f985f0b.js","assets/framework-09afcf0b.js"])),"v-3d1e3058":r(()=>e(()=>import("./01.3.html-59477d4d.js"),["assets/01.3.html-59477d4d.js","assets/framework-09afcf0b.js"])),"v-27edcf18":r(()=>e(()=>import("./Preface.html-232fbe81.js"),["assets/Preface.html-232fbe81.js","assets/framework-09afcf0b.js"])),"v-193915ab":r(()=>e(()=>import("./preface.html-e37bf3d0.js"),["assets/preface.html-e37bf3d0.js","assets/framework-09afcf0b.js"])),"v-799d9d9d":r(()=>e(()=>import("./docker-nginx.html-c2d3dd95.js"),["assets/docker-nginx.html-c2d3dd95.js","assets/framework-09afcf0b.js"])),"v-4c02f4c4":r(()=>e(()=>import("./get-started.html-7e6ae704.js"),["assets/get-started.html-7e6ae704.js","assets/framework-09afcf0b.js"])),"v-64cfc26e":r(()=>e(()=>import("./GMPModel.html-ce1be73a.js"),["assets/GMPModel.html-ce1be73a.js","assets/framework-09afcf0b.js"])),"v-344dc579":r(()=>e(()=>import("./01.1.html-0bb78c58.js"),["assets/01.1.html-0bb78c58.js","assets/framework-09afcf0b.js"])),"v-36029e18":r(()=>e(()=>import("./01.2.html-f401ccd3.js"),["assets/01.2.html-f401ccd3.js","assets/framework-09afcf0b.js"])),"v-37b776b7":r(()=>e(()=>import("./01.3.html-ae201e47.js"),["assets/01.3.html-ae201e47.js","assets/framework-09afcf0b.js"])),"v-24dbb155":r(()=>e(()=>import("./Preface.html-1800a3e6.js"),["assets/Preface.html-1800a3e6.js","assets/framework-09afcf0b.js"])),"v-3b58180c":r(()=>e(()=>import("./cast.html-228a5ab2.js"),["assets/cast.html-228a5ab2.js","assets/framework-09afcf0b.js"])),"v-f00eb258":r(()=>e(()=>import("./cobra.html-a287aa9b.js"),["assets/cobra.html-a287aa9b.js","assets/framework-09afcf0b.js"])),"v-16ceb7bd":r(()=>e(()=>import("./email.html-1056580f.js"),["assets/email.html-1056580f.js","assets/framework-09afcf0b.js"])),"v-476f03ed":r(()=>e(()=>import("./flag.html-61f9fb65.js"),["assets/flag.html-61f9fb65.js","assets/framework-09afcf0b.js"])),"v-9371a17a":r(()=>e(()=>import("./fsnotify.html-6b3c6606.js"),["assets/fsnotify.html-6b3c6606.js","assets/framework-09afcf0b.js"])),"v-6ad98bb7":r(()=>e(()=>import("./go-flags.html-3406f2b8.js"),["assets/go-flags.html-3406f2b8.js","assets/framework-09afcf0b.js"])),"v-5bb14210":r(()=>e(()=>import("./go-homedir.html-328c2fe4.js"),["assets/go-homedir.html-328c2fe4.js","assets/framework-09afcf0b.js"])),"v-fa7c9c8c":r(()=>e(()=>import("./go-ini.html-851d8ba7.js"),["assets/go-ini.html-851d8ba7.js","assets/framework-09afcf0b.js"])),"v-90b97d26":r(()=>e(()=>import("./godotenv.html-e2bb3730.js"),["assets/godotenv.html-e2bb3730.js","assets/framework-09afcf0b.js"])),"v-28002915":r(()=>e(()=>import("./log.html-5f332966.js"),["assets/log.html-5f332966.js","assets/framework-09afcf0b.js"])),"v-2d00fe8d":r(()=>e(()=>import("./logrus.html-395d8818.js"),["assets/logrus.html-395d8818.js","assets/framework-09afcf0b.js"])),"v-63741259":r(()=>e(()=>import("./preface.html-b06fa930.js"),["assets/preface.html-b06fa930.js","assets/framework-09afcf0b.js"])),"v-4a26dc54":r(()=>e(()=>import("./uniplace-carbon.html-2225a4b7.js"),["assets/uniplace-carbon.html-2225a4b7.js","assets/framework-09afcf0b.js"])),"v-4b73468f":r(()=>e(()=>import("./viper.html-9ee5de6e.js"),["assets/viper.html-9ee5de6e.js","assets/framework-09afcf0b.js"])),"v-06fc599e":r(()=>e(()=>import("./01.1.html-72e28af5.js"),["assets/01.1.html-72e28af5.js","assets/framework-09afcf0b.js"])),"v-08b1323d":r(()=>e(()=>import("./01.2.html-8f49faa4.js"),["assets/01.2.html-8f49faa4.js","assets/framework-09afcf0b.js"])),"v-0a660adc":r(()=>e(()=>import("./01.3.html-75f235d3.js"),["assets/01.3.html-75f235d3.js","assets/framework-09afcf0b.js"])),"v-0c1ae37b":r(()=>e(()=>import("./01.4.html-7ae970de.js"),["assets/01.4.html-7ae970de.js","assets/framework-09afcf0b.js"])),"v-0dcfbc1a":r(()=>e(()=>import("./01.5.html-70e59e21.js"),["assets/01.5.html-70e59e21.js","assets/framework-09afcf0b.js"])),"v-7dc3935f":r(()=>e(()=>import("./gorm.html-26aa32fb.js"),["assets/gorm.html-26aa32fb.js","assets/framework-09afcf0b.js"])),"v-7d56e130":r(()=>e(()=>import("./01.1.html-d423d84a.js"),["assets/01.1.html-d423d84a.js","assets/framework-09afcf0b.js"])),"v-63a80d45":r(()=>e(()=>import("./00_preface.html-ad094356.js"),["assets/00_preface.html-ad094356.js","assets/framework-09afcf0b.js"])),"v-8a2d5246":r(()=>e(()=>import("./spf13-vim-plugin.html-4e8056e2.js"),["assets/spf13-vim-plugin.html-4e8056e2.js","assets/framework-09afcf0b.js"])),"v-ba0a5a48":r(()=>e(()=>import("./atls.html-8eaa80b7.js"),["assets/atls.html-8eaa80b7.js","assets/framework-09afcf0b.js"])),"v-809ed732":r(()=>e(()=>import("./basic_tutorial.html-d6abcf3b.js"),["assets/basic_tutorial.html-d6abcf3b.js","assets/framework-09afcf0b.js"])),"v-0852c2d9":r(()=>e(()=>import("./generated_code.html-f998f45a.js"),["assets/generated_code.html-f998f45a.js","assets/framework-09afcf0b.js"])),"v-25febabc":r(()=>e(()=>import("./introduction.html-00bf98b9.js"),["assets/introduction.html-00bf98b9.js","assets/framework-09afcf0b.js"])),"v-79e08508":r(()=>e(()=>import("./preface.html-43aaf14c.js"),["assets/preface.html-43aaf14c.js","assets/framework-09afcf0b.js"])),"v-64ab95ec":r(()=>e(()=>import("./quick_start.html-8a0466f9.js"),["assets/quick_start.html-8a0466f9.js","assets/framework-09afcf0b.js"])),"v-34935b8c":r(()=>e(()=>import("./basics-go.html-a920a5bc.js"),["assets/basics-go.html-a920a5bc.js","assets/framework-09afcf0b.js"])),"v-4d2d1dcb":r(()=>e(()=>import("./language-guide-proto3.html-8695b911.js"),["assets/language-guide-proto3.html-8695b911.js","assets/framework-09afcf0b.js"])),"v-f15d7708":r(()=>e(()=>import("./preface.html-2e623688.js"),["assets/preface.html-2e623688.js","assets/framework-09afcf0b.js"])),"v-50cc852d":r(()=>e(()=>import("./00_preface.html-970b07fa.js"),["assets/00_preface.html-970b07fa.js","assets/framework-09afcf0b.js"])),"v-601a5951":r(()=>e(()=>import("./vue-cli.html-2287896c.js"),["assets/vue-cli.html-2287896c.js","assets/framework-09afcf0b.js"])),"v-34943ad0":r(()=>e(()=>import("./vue-router.html-244ae288.js"),["assets/vue-router.html-244ae288.js","assets/framework-09afcf0b.js"])),"v-33bd0e54":r(()=>e(()=>import("./vuex.html-1ca63459.js"),["assets/vuex.html-1ca63459.js","assets/framework-09afcf0b.js"])),"v-4242d329":r(()=>e(()=>import("./01.overview.html-70d0d674.js"),["assets/01.overview.html-70d0d674.js","assets/framework-09afcf0b.js"])),"v-8b53256e":r(()=>e(()=>import("./03.sync.html-bc122958.js"),["assets/03.sync.html-bc122958.js","assets/framework-09afcf0b.js"])),"v-0bddc6dd":r(()=>e(()=>import("./04.pattern.html-cdc968af.js"),["assets/04.pattern.html-cdc968af.js","assets/framework-09afcf0b.js"])),"v-d2b5c958":r(()=>e(()=>import("./05.massive_concurrency.html-af04f181.js"),["assets/05.massive_concurrency.html-af04f181.js","assets/framework-09afcf0b.js"])),"v-3b40d3e9":r(()=>e(()=>import("./01.1.html-15ca2012.js"),["assets/01.1.html-15ca2012.js","assets/framework-09afcf0b.js"])),"v-3cf5ac88":r(()=>e(()=>import("./01.2.html-35533046.js"),["assets/01.2.html-35533046.js","assets/framework-09afcf0b.js"])),"v-3eaa8527":r(()=>e(()=>import("./01.3.html-7eeb07c7.js"),["assets/01.3.html-7eeb07c7.js","assets/framework-09afcf0b.js"])),"v-dee84ee8":r(()=>e(()=>import("./01.html-90927598.js"),["assets/01.html-90927598.js","assets/framework-09afcf0b.js"])),"v-5c650e76":r(()=>e(()=>import("./preface.html-e7a501b8.js"),["assets/preface.html-e7a501b8.js","assets/framework-09afcf0b.js"])),"v-0f79baa2":r(()=>e(()=>import("./gee-web.html-580703e4.js"),["assets/gee-web.html-580703e4.js","assets/framework-09afcf0b.js"])),"v-d4eae3a0":r(()=>e(()=>import("./preface.html-385e8ba0.js"),["assets/preface.html-385e8ba0.js","assets/framework-09afcf0b.js"])),"v-57168dca":r(()=>e(()=>import("./summary.html-8aa307f6.js"),["assets/summary.html-8aa307f6.js","assets/framework-09afcf0b.js"])),"v-b018f792":r(()=>e(()=>import("./01.1.html-8b4d452c.js"),["assets/01.1.html-8b4d452c.js","assets/framework-09afcf0b.js"])),"v-77b5ddf5":r(()=>e(()=>import("./03.1.html-1525271d.js"),["assets/03.1.html-1525271d.js","assets/framework-09afcf0b.js"])),"v-796ab694":r(()=>e(()=>import("./03.2.html-0d084bbe.js"),["assets/03.2.html-0d084bbe.js","assets/framework-09afcf0b.js"])),"v-7b1f8f33":r(()=>e(()=>import("./03.3.html-1b0aeef6.js"),["assets/03.3.html-1b0aeef6.js","assets/framework-09afcf0b.js"])),"v-7cd467d2":r(()=>e(()=>import("./03.4.html-c8958242.js"),["assets/03.4.html-c8958242.js","assets/framework-09afcf0b.js"])),"v-20003db7":r(()=>e(()=>import("./preface.html-e31ec55e.js"),["assets/preface.html-e31ec55e.js","assets/framework-09afcf0b.js"])),"v-3ce7855e":r(()=>e(()=>import("./summary.html-0a60c0e9.js"),["assets/summary.html-0a60c0e9.js","assets/framework-09afcf0b.js"])),"v-320e8b4e":r(()=>e(()=>import("./04.1.html-0a14d157.js"),["assets/04.1.html-0a14d157.js","assets/framework-09afcf0b.js"])),"v-2ea4da10":r(()=>e(()=>import("./04.2.html-d82d6ccd.js"),["assets/04.2.html-d82d6ccd.js","assets/framework-09afcf0b.js"])),"v-2b3b28d2":r(()=>e(()=>import("./04.3.html-6c40da5d.js"),["assets/04.3.html-6c40da5d.js","assets/framework-09afcf0b.js"])),"v-27d17794":r(()=>e(()=>import("./04.4.html-fdff7a82.js"),["assets/04.4.html-fdff7a82.js","assets/framework-09afcf0b.js"])),"v-2a93f832":r(()=>e(()=>import("./Preface.html-04d5c9a2.js"),["assets/Preface.html-04d5c9a2.js","assets/framework-09afcf0b.js"])),"v-805e4cfe":r(()=>e(()=>import("./preface.html-2b6dccb2.js"),["assets/preface.html-2b6dccb2.js","assets/framework-09afcf0b.js"])),"v-fd464dca":r(()=>e(()=>import("./summary.html-be5edf3b.js"),["assets/summary.html-be5edf3b.js","assets/framework-09afcf0b.js"])),"v-ac901672":r(()=>e(()=>import("./01.0.html-f3a425a0.js"),["assets/01.0.html-f3a425a0.js","assets/framework-09afcf0b.js"])),"v-a9266534":r(()=>e(()=>import("./01.1.html-2c6cffd5.js"),["assets/01.1.html-2c6cffd5.js","assets/framework-09afcf0b.js"])),"v-09e51b69":r(()=>e(()=>import("./03.0.html-6900986b.js"),["assets/03.0.html-6900986b.js","assets/framework-09afcf0b.js"])),"v-0b99f408":r(()=>e(()=>import("./03.1.html-83787d41.js"),["assets/03.1.html-83787d41.js","assets/framework-09afcf0b.js"])),"v-0d4ecca7":r(()=>e(()=>import("./03.2.html-c8ca52f0.js"),["assets/03.2.html-c8ca52f0.js","assets/framework-09afcf0b.js"])),"v-0f03a546":r(()=>e(()=>import("./03.3.html-23e955f0.js"),["assets/03.3.html-23e955f0.js","assets/framework-09afcf0b.js"])),"v-10b87de5":r(()=>e(()=>import("./03.4.html-dd66e623.js"),["assets/03.4.html-dd66e623.js","assets/framework-09afcf0b.js"])),"v-126d5684":r(()=>e(()=>import("./03.5.html-b609175b.js"),["assets/03.5.html-b609175b.js","assets/framework-09afcf0b.js"])),"v-14222f23":r(()=>e(()=>import("./03.6.html-97b7295f.js"),["assets/03.6.html-97b7295f.js","assets/framework-09afcf0b.js"])),"v-15d707c2":r(()=>e(()=>import("./03.7.html-870ddd64.js"),["assets/03.7.html-870ddd64.js","assets/framework-09afcf0b.js"])),"v-bac7172a":r(()=>e(()=>import("./03.html-e025bd75.js"),["assets/03.html-e025bd75.js","assets/framework-09afcf0b.js"])),"v-5e331da4":r(()=>e(()=>import("./00.0.preface.html-5d29333d.js"),["assets/00.0.preface.html-5d29333d.js","assets/framework-09afcf0b.js"])),"v-20d09562":r(()=>e(()=>import("./01.1.http_basic.html-9dc789de.js"),["assets/01.1.http_basic.html-9dc789de.js","assets/framework-09afcf0b.js"])),"v-15d3b17c":r(()=>e(()=>import("./01.2.context.html-3f676f3d.js"),["assets/01.2.context.html-3f676f3d.js","assets/framework-09afcf0b.js"])),"v-c8c456c8":r(()=>e(()=>import("./01.3.trie_router.html-9e05f180.js"),["assets/01.3.trie_router.html-9e05f180.js","assets/framework-09afcf0b.js"])),"v-5800d1ea":r(()=>e(()=>import("./01.4.group.html-cddf3796.js"),["assets/01.4.group.html-cddf3796.js","assets/framework-09afcf0b.js"])),"v-92f80350":r(()=>e(()=>import("./01.5.middleware.html-1b46e5e9.js"),["assets/01.5.middleware.html-1b46e5e9.js","assets/framework-09afcf0b.js"])),"v-1458e00e":r(()=>e(()=>import("./01.6.html_template.html-66835c65.js"),["assets/01.6.html_template.html-66835c65.js","assets/framework-09afcf0b.js"])),"v-9acf99fc":r(()=>e(()=>import("./01.7.recover.html-24ca2b25.js"),["assets/01.7.recover.html-24ca2b25.js","assets/framework-09afcf0b.js"])),"v-a9da6580":r(()=>e(()=>import("./01.1.benchmark.html-640cc831.js"),["assets/01.1.benchmark.html-640cc831.js","assets/framework-09afcf0b.js"])),"v-567da953":r(()=>e(()=>import("./01.2.pprof.html-b66c7a6e.js"),["assets/01.2.pprof.html-b66c7a6e.js","assets/framework-09afcf0b.js"])),"v-1244a7cb":r(()=>e(()=>import("./02.1.string_concat.html-b3364716.js"),["assets/02.1.string_concat.html-b3364716.js","assets/framework-09afcf0b.js"])),"v-681ca6cc":r(()=>e(()=>import("./02.2.slice.html-57cd637c.js"),["assets/02.2.slice.html-57cd637c.js","assets/framework-09afcf0b.js"])),"v-c4bbd09c":r(()=>e(()=>import("./02.3.for-range.html-34bdda54.js"),["assets/02.3.for-range.html-34bdda54.js","assets/framework-09afcf0b.js"])),"v-c4551e66":r(()=>e(()=>import("./02.4.reflect.html-44f2968a.js"),["assets/02.4.reflect.html-44f2968a.js","assets/framework-09afcf0b.js"])),"v-7b90e602":r(()=>e(()=>import("./02.5.empty_struct.html-1dcfde08.js"),["assets/02.5.empty_struct.html-1dcfde08.js","assets/framework-09afcf0b.js"])),"v-2057ad0f":r(()=>e(()=>import("./02.6.mem_alignment.html-b1831dc4.js"),["assets/02.6.mem_alignment.html-b1831dc4.js","assets/framework-09afcf0b.js"])),"v-f6665750":r(()=>e(()=>import("./03.1.mutex.html-055180cb.js"),["assets/03.1.mutex.html-055180cb.js","assets/framework-09afcf0b.js"])),"v-e6d3b74a":r(()=>e(()=>import("./03.2.once.html-64256eb0.js"),["assets/03.2.once.html-64256eb0.js","assets/framework-09afcf0b.js"])),"v-f23db260":r(()=>e(()=>import("./04.1.reduce_exe_size.html-ae81ed6c.js"),["assets/04.1.reduce_exe_size.html-ae81ed6c.js","assets/framework-09afcf0b.js"])),"v-6a293671":r(()=>e(()=>import("./04.2.mem_escape.html-c8741e27.js"),["assets/04.2.mem_escape.html-c8741e27.js","assets/framework-09afcf0b.js"])),"v-7fa49b0c":r(()=>e(()=>import("./04.3.deadcode.html-3a3caee9.js"),["assets/04.3.deadcode.html-3a3caee9.js","assets/framework-09afcf0b.js"])),"v-350af4a0":r(()=>e(()=>import("./minidb.html-e24c9564.js"),["assets/minidb.html-e24c9564.js","assets/framework-09afcf0b.js"])),"v-7811b9c6":r(()=>e(()=>import("./preface.html-27d3c28d.js"),["assets/preface.html-27d3c28d.js","assets/framework-09afcf0b.js"])),"v-40f6cc6c":r(()=>e(()=>import("./benchmark.html-59999729.js"),["assets/benchmark.html-59999729.js","assets/framework-09afcf0b.js"])),"v-4f5da57e":r(()=>e(()=>import("./pprof.html-a8d2b9be.js"),["assets/pprof.html-a8d2b9be.js","assets/framework-09afcf0b.js"])),"v-3bd0497f":r(()=>e(()=>import("./04.1.html-ceea4514.js"),["assets/04.1.html-ceea4514.js","assets/framework-09afcf0b.js"])),"v-3d85221e":r(()=>e(()=>import("./04.2.html-ef06cc60.js"),["assets/04.2.html-ef06cc60.js","assets/framework-09afcf0b.js"])),"v-3f39fabd":r(()=>e(()=>import("./04.3.html-0c4cbbd1.js"),["assets/04.3.html-0c4cbbd1.js","assets/framework-09afcf0b.js"])),"v-40eed35c":r(()=>e(()=>import("./04.4.html-44971f08.js"),["assets/04.4.html-44971f08.js","assets/framework-09afcf0b.js"])),"v-42a3abfb":r(()=>e(()=>import("./04.5.html-b67ac7df.js"),["assets/04.5.html-b67ac7df.js","assets/framework-09afcf0b.js"])),"v-4458849a":r(()=>e(()=>import("./04.6.html-d2e92662.js"),["assets/04.6.html-d2e92662.js","assets/framework-09afcf0b.js"])),"v-460d5d39":r(()=>e(()=>import("./04.7.html-4fc56a43.js"),["assets/04.7.html-4fc56a43.js","assets/framework-09afcf0b.js"])),"v-47c235d8":r(()=>e(()=>import("./04.8.html-bb002dc7.js"),["assets/04.8.html-bb002dc7.js","assets/framework-09afcf0b.js"])),"v-49770e77":r(()=>e(()=>import("./04.9.html-f84c331b.js"),["assets/04.9.html-f84c331b.js","assets/framework-09afcf0b.js"])),"v-36e15080":r(()=>e(()=>import("./05.0.html-4cbabcf4.js"),["assets/05.0.html-4cbabcf4.js","assets/framework-09afcf0b.js"])),"v-3896291f":r(()=>e(()=>import("./05.1.html-7c7b309b.js"),["assets/05.1.html-7c7b309b.js","assets/framework-09afcf0b.js"])),"v-3a4b01be":r(()=>e(()=>import("./05.2.html-00434f0f.js"),["assets/05.2.html-00434f0f.js","assets/framework-09afcf0b.js"])),"v-3bffda5d":r(()=>e(()=>import("./05.3.html-293406d0.js"),["assets/05.3.html-293406d0.js","assets/framework-09afcf0b.js"])),"v-3db4b2fc":r(()=>e(()=>import("./05.4.html-90795021.js"),["assets/05.4.html-90795021.js","assets/framework-09afcf0b.js"])),"v-3f698b9b":r(()=>e(()=>import("./05.5.html-cecc7bf6.js"),["assets/05.5.html-cecc7bf6.js","assets/framework-09afcf0b.js"])),"v-411e643a":r(()=>e(()=>import("./05.6.html-345af0ea.js"),["assets/05.6.html-345af0ea.js","assets/framework-09afcf0b.js"])),"v-355c08bf":r(()=>e(()=>import("./06.1.html-313e89db.js"),["assets/06.1.html-313e89db.js","assets/framework-09afcf0b.js"])),"v-76581383":r(()=>e(()=>import("./06.10.html-93246715.js"),["assets/06.10.html-93246715.js","assets/framework-09afcf0b.js"])),"v-79c1c4c1":r(()=>e(()=>import("./06.12.html-c8dc5190.js"),["assets/06.12.html-c8dc5190.js","assets/framework-09afcf0b.js"])),"v-3710e15e":r(()=>e(()=>import("./06.2.html-a711efd5.js"),["assets/06.2.html-a711efd5.js","assets/framework-09afcf0b.js"])),"v-38c5b9fd":r(()=>e(()=>import("./06.3.html-17e37a7a.js"),["assets/06.3.html-17e37a7a.js","assets/framework-09afcf0b.js"])),"v-3a7a929c":r(()=>e(()=>import("./06.4.html-d3852c52.js"),["assets/06.4.html-d3852c52.js","assets/framework-09afcf0b.js"])),"v-3c2f6b3b":r(()=>e(()=>import("./06.5.html-b4cb2646.js"),["assets/06.5.html-b4cb2646.js","assets/framework-09afcf0b.js"])),"v-3de443da":r(()=>e(()=>import("./06.6.html-96232888.js"),["assets/06.6.html-96232888.js","assets/framework-09afcf0b.js"])),"v-3f991c79":r(()=>e(()=>import("./06.7.html-ed0d752f.js"),["assets/06.7.html-ed0d752f.js","assets/framework-09afcf0b.js"])),"v-414df518":r(()=>e(()=>import("./06.8.html-1c72e376.js"),["assets/06.8.html-1c72e376.js","assets/framework-09afcf0b.js"])),"v-4302cdb7":r(()=>e(()=>import("./06.9.html-a9e298a0.js"),["assets/06.9.html-a9e298a0.js","assets/framework-09afcf0b.js"])),"v-0e9fed90":r(()=>e(()=>import("./6.11.html-975760b4.js"),["assets/6.11.html-975760b4.js","assets/framework-09afcf0b.js"])),"v-3221e85f":r(()=>e(()=>import("./07.1.html-a5bc5cc2.js"),["assets/07.1.html-a5bc5cc2.js","assets/framework-09afcf0b.js"])),"v-33d6c0fe":r(()=>e(()=>import("./07.2.html-72ba20f8.js"),["assets/07.2.html-72ba20f8.js","assets/framework-09afcf0b.js"])),"v-358b999d":r(()=>e(()=>import("./07.3.html-732ca520.js"),["assets/07.3.html-732ca520.js","assets/framework-09afcf0b.js"])),"v-3740723c":r(()=>e(()=>import("./07.4.html-9592c64c.js"),["assets/07.4.html-9592c64c.js","assets/framework-09afcf0b.js"])),"v-38f54adb":r(()=>e(()=>import("./07.5.html-61adf6df.js"),["assets/07.5.html-61adf6df.js","assets/framework-09afcf0b.js"])),"v-3aaa237a":r(()=>e(()=>import("./07.6.html-aab46e97.js"),["assets/07.6.html-aab46e97.js","assets/framework-09afcf0b.js"])),"v-2d32ef60":r(()=>e(()=>import("./08.0.html-3cb8c952.js"),["assets/08.0.html-3cb8c952.js","assets/framework-09afcf0b.js"])),"v-2ee7c7ff":r(()=>e(()=>import("./08.1.html-e08e0646.js"),["assets/08.1.html-e08e0646.js","assets/framework-09afcf0b.js"])),"v-309ca09e":r(()=>e(()=>import("./08.2.html-bab328d0.js"),["assets/08.2.html-bab328d0.js","assets/framework-09afcf0b.js"])),"v-3251793d":r(()=>e(()=>import("./08.3.html-fa687b48.js"),["assets/08.3.html-fa687b48.js","assets/framework-09afcf0b.js"])),"v-340651dc":r(()=>e(()=>import("./08.4.html-371b2836.js"),["assets/08.4.html-371b2836.js","assets/framework-09afcf0b.js"])),"v-35bb2a7b":r(()=>e(()=>import("./08.5.html-b0fda1e9.js"),["assets/08.5.html-b0fda1e9.js","assets/framework-09afcf0b.js"])),"v-3770031a":r(()=>e(()=>import("./08.6.html-9226ffb5.js"),["assets/08.6.html-9226ffb5.js","assets/framework-09afcf0b.js"])),"v-29f8cf00":r(()=>e(()=>import("./09.0.html-745ca57d.js"),["assets/09.0.html-745ca57d.js","assets/framework-09afcf0b.js"])),"v-2bada79f":r(()=>e(()=>import("./09.1.html-32b86b81.js"),["assets/09.1.html-32b86b81.js","assets/framework-09afcf0b.js"])),"v-3a0bf280":r(()=>e(()=>import("./10.0.html-468ed3e5.js"),["assets/10.0.html-468ed3e5.js","assets/framework-09afcf0b.js"])),"v-36a24142":r(()=>e(()=>import("./10.1.html-12fa6cca.js"),["assets/10.1.html-12fa6cca.js","assets/framework-09afcf0b.js"])),"v-33389004":r(()=>e(()=>import("./10.2.html-e10051ee.js"),["assets/10.2.html-e10051ee.js","assets/framework-09afcf0b.js"])),"v-2fcedec6":r(()=>e(()=>import("./10.3.html-91958c0a.js"),["assets/10.3.html-91958c0a.js","assets/framework-09afcf0b.js"])),"v-2c652d88":r(()=>e(()=>import("./10.4.html-42b0f1c0.js"),["assets/10.4.html-42b0f1c0.js","assets/framework-09afcf0b.js"])),"v-28fb7c4a":r(()=>e(()=>import("./10.5.html-e5b07def.js"),["assets/10.5.html-e5b07def.js","assets/framework-09afcf0b.js"])),"v-2591cb0c":r(()=>e(()=>import("./10.6.html-b70bcf16.js"),["assets/10.6.html-b70bcf16.js","assets/framework-09afcf0b.js"])),"v-40803340":r(()=>e(()=>import("./11.0.html-b5641651.js"),["assets/11.0.html-b5641651.js","assets/framework-09afcf0b.js"])),"v-3d168202":r(()=>e(()=>import("./11.1.html-15022806.js"),["assets/11.1.html-15022806.js","assets/framework-09afcf0b.js"])),"v-39acd0c4":r(()=>e(()=>import("./11.2.html-85804674.js"),["assets/11.2.html-85804674.js","assets/framework-09afcf0b.js"])),"v-36431f86":r(()=>e(()=>import("./11.3.html-1fdca607.js"),["assets/11.3.html-1fdca607.js","assets/framework-09afcf0b.js"])),"v-32d96e48":r(()=>e(()=>import("./11.4.html-3e3f4bd8.js"),["assets/11.4.html-3e3f4bd8.js","assets/framework-09afcf0b.js"])),"v-2f6fbd0a":r(()=>e(()=>import("./11.5.html-0960f907.js"),["assets/11.5.html-0960f907.js","assets/framework-09afcf0b.js"])),"v-2c060bcc":r(()=>e(()=>import("./11.6.html-78229428.js"),["assets/11.6.html-78229428.js","assets/framework-09afcf0b.js"])),"v-21c8f812":r(()=>e(()=>import("./11.9.html-20343193.js"),["assets/11.9.html-20343193.js","assets/framework-09afcf0b.js"])),"v-49ff0382":r(()=>e(()=>import("./13.1.html-21b4cca9.js"),["assets/13.1.html-21b4cca9.js","assets/framework-09afcf0b.js"])),"v-46955244":r(()=>e(()=>import("./13.2.html-7aac24d8.js"),["assets/13.2.html-7aac24d8.js","assets/framework-09afcf0b.js"])),"v-432ba106":r(()=>e(()=>import("./13.3.html-917370d6.js"),["assets/13.3.html-917370d6.js","assets/framework-09afcf0b.js"])),"v-3fc1efc8":r(()=>e(()=>import("./13.4.html-f80659c6.js"),["assets/13.4.html-f80659c6.js","assets/framework-09afcf0b.js"])),"v-3c583e8a":r(()=>e(()=>import("./13.5.html-a29fd0ab.js"),["assets/13.5.html-a29fd0ab.js","assets/framework-09afcf0b.js"])),"v-38ee8d4c":r(()=>e(()=>import("./13.6.html-110dce4b.js"),["assets/13.6.html-110dce4b.js","assets/framework-09afcf0b.js"])),"v-3584dc0e":r(()=>e(()=>import("./13.7.html-bee5b99c.js"),["assets/13.7.html-bee5b99c.js","assets/framework-09afcf0b.js"])),"v-50734442":r(()=>e(()=>import("./14.1.html-90287d9e.js"),["assets/14.1.html-90287d9e.js","assets/framework-09afcf0b.js"])),"v-24a213a1":r(()=>e(()=>import("./14.12.html-89d51474.js"),["assets/14.12.html-89d51474.js","assets/framework-09afcf0b.js"])),"v-2656ec40":r(()=>e(()=>import("./14.13.html-0ffc4df9.js"),["assets/14.13.html-0ffc4df9.js","assets/framework-09afcf0b.js"])),"v-280bc4df":r(()=>e(()=>import("./14.14.html-a91fc343.js"),["assets/14.14.html-a91fc343.js","assets/framework-09afcf0b.js"])),"v-2b75761d":r(()=>e(()=>import("./14.16.html-4b4f97e9.js"),["assets/14.16.html-4b4f97e9.js","assets/framework-09afcf0b.js"])),"v-2d2a4ebc":r(()=>e(()=>import("./14.17.html-78d23762.js"),["assets/14.17.html-78d23762.js","assets/framework-09afcf0b.js"])),"v-4d099304":r(()=>e(()=>import("./14.2.html-666a4589.js"),["assets/14.2.html-666a4589.js","assets/framework-09afcf0b.js"])),"v-499fe1c6":r(()=>e(()=>import("./14.3.html-33b7a0b3.js"),["assets/14.3.html-33b7a0b3.js","assets/framework-09afcf0b.js"])),"v-46363088":r(()=>e(()=>import("./14.4.html-d549c6f6.js"),["assets/14.4.html-d549c6f6.js","assets/framework-09afcf0b.js"])),"v-42cc7f4a":r(()=>e(()=>import("./14.5.html-28ff471a.js"),["assets/14.5.html-28ff471a.js","assets/framework-09afcf0b.js"])),"v-3f62ce0c":r(()=>e(()=>import("./14.6.html-72513a28.js"),["assets/14.6.html-72513a28.js","assets/framework-09afcf0b.js"])),"v-3bf91cce":r(()=>e(()=>import("./14.7.html-f3eef7ea.js"),["assets/14.7.html-f3eef7ea.js","assets/framework-09afcf0b.js"])),"v-388f6b90":r(()=>e(()=>import("./14.8.html-1dd165ae.js"),["assets/14.8.html-1dd165ae.js","assets/framework-09afcf0b.js"])),"v-3525ba52":r(()=>e(()=>import("./14.9.html-1d6cb1eb.js"),["assets/14.9.html-1d6cb1eb.js","assets/framework-09afcf0b.js"])),"v-4ce10d7f":r(()=>e(()=>import("./00.start.html-2c747e13.js"),["assets/00.start.html-2c747e13.js","assets/framework-09afcf0b.js"])),"v-30f72877":r(()=>e(()=>import("./01.1.create_app.html-dec09529.js"),["assets/01.1.create_app.html-dec09529.js","assets/framework-09afcf0b.js"])),"v-519865c6":r(()=>e(()=>import("./01.10.lifecycle_hooks.html-2a8fca2a.js"),["assets/01.10.lifecycle_hooks.html-2a8fca2a.js","assets/framework-09afcf0b.js"])),"v-424c459b":r(()=>e(()=>import("./01.11.watchers.html-f5d3bdbf.js"),["assets/01.11.watchers.html-f5d3bdbf.js","assets/framework-09afcf0b.js"])),"v-21067a7a":r(()=>e(()=>import("./01.12.template_refs.html-4fd3d041.js"),["assets/01.12.template_refs.html-4fd3d041.js","assets/framework-09afcf0b.js"])),"v-224593cd":r(()=>e(()=>import("./01.13.component_basics.html-e8264de1.js"),["assets/01.13.component_basics.html-e8264de1.js","assets/framework-09afcf0b.js"])),"v-37c3b518":r(()=>e(()=>import("./01.2.template_syntax.html-aa8f1258.js"),["assets/01.2.template_syntax.html-aa8f1258.js","assets/framework-09afcf0b.js"])),"v-cff5dd62":r(()=>e(()=>import("./01.3.reactivity_fundamental.html-16f7219c.js"),["assets/01.3.reactivity_fundamental.html-16f7219c.js","assets/framework-09afcf0b.js"])),"v-7a32e59a":r(()=>e(()=>import("./01.4.computed_props.html-c459592f.js"),["assets/01.4.computed_props.html-c459592f.js","assets/framework-09afcf0b.js"])),"v-56c1d229":r(()=>e(()=>import("./01.5.class_style_binding.html-cf31d175.js"),["assets/01.5.class_style_binding.html-cf31d175.js","assets/framework-09afcf0b.js"])),"v-7db8c2c5":r(()=>e(()=>import("./01.6.conditional_rendering.html-53e17943.js"),["assets/01.6.conditional_rendering.html-53e17943.js","assets/framework-09afcf0b.js"])),"v-14236860":r(()=>e(()=>import("./01.7.list_rendering.html-69bd7857.js"),["assets/01.7.list_rendering.html-69bd7857.js","assets/framework-09afcf0b.js"])),"v-11aa17f2":r(()=>e(()=>import("./01.8.event_handling.html-4d7c477d.js"),["assets/01.8.event_handling.html-4d7c477d.js","assets/framework-09afcf0b.js"])),"v-a2e20f30":r(()=>e(()=>import("./01.9.form_input_binding.html-c1986790.js"),["assets/01.9.form_input_binding.html-c1986790.js","assets/framework-09afcf0b.js"])),"v-1018c823":r(()=>e(()=>import("./02.1.registration.html-4cfd89df.js"),["assets/02.1.registration.html-4cfd89df.js","assets/framework-09afcf0b.js"])),"v-a7271076":r(()=>e(()=>import("./02.2.props.html-62b6cd54.js"),["assets/02.2.props.html-62b6cd54.js","assets/framework-09afcf0b.js"])),"v-47f6df05":r(()=>e(()=>import("./02.3.events.html-a7e4988c.js"),["assets/02.3.events.html-a7e4988c.js","assets/framework-09afcf0b.js"])),"v-1503255a":r(()=>e(()=>import("./02.4.v_model.html-faba5f8f.js"),["assets/02.4.v_model.html-faba5f8f.js","assets/framework-09afcf0b.js"])),"v-997ddd98":r(()=>e(()=>import("./02.5.fallthrough_attributes.html-17f87b06.js"),["assets/02.5.fallthrough_attributes.html-17f87b06.js","assets/framework-09afcf0b.js"])),"v-020db39c":r(()=>e(()=>import("./02.6.slots.html-07bcfaee.js"),["assets/02.6.slots.html-07bcfaee.js","assets/framework-09afcf0b.js"])),"v-1d9145f3":r(()=>e(()=>import("./02.7.provide_inject.html-f8cb045b.js"),["assets/02.7.provide_inject.html-f8cb045b.js","assets/framework-09afcf0b.js"])),"v-391dd596":r(()=>e(()=>import("./02.8.async_component.html-5eac9ea3.js"),["assets/02.8.async_component.html-5eac9ea3.js","assets/framework-09afcf0b.js"])),"v-290b5eff":r(()=>e(()=>import("./01.0.html-ef611a8d.js"),["assets/01.0.html-ef611a8d.js","assets/framework-09afcf0b.js"])),"v-2ac0379e":r(()=>e(()=>import("./01.1.html-a98c050c.js"),["assets/01.1.html-a98c050c.js","assets/framework-09afcf0b.js"])),"v-2c75103d":r(()=>e(()=>import("./01.2.html-805b063d.js"),["assets/01.2.html-805b063d.js","assets/framework-09afcf0b.js"])),"v-16ccdc59":r(()=>e(()=>import("./02.1.html-a5ba6765.js"),["assets/02.1.html-a5ba6765.js","assets/framework-09afcf0b.js"])),"v-1881b4f8":r(()=>e(()=>import("./02.2.html-24978f68.js"),["assets/02.2.html-24978f68.js","assets/framework-09afcf0b.js"])),"v-1a368d97":r(()=>e(()=>import("./02.3.html-c7df04b8.js"),["assets/02.3.html-c7df04b8.js","assets/framework-09afcf0b.js"])),"v-169eeeb9":r(()=>e(()=>import("./03.1.html-36d688c1.js"),["assets/03.1.html-36d688c1.js","assets/framework-09afcf0b.js"])),"v-1853c758":r(()=>e(()=>import("./03.2.html-3117d676.js"),["assets/03.2.html-3117d676.js","assets/framework-09afcf0b.js"])),"v-1a089ff7":r(()=>e(()=>import("./03.3.html-da56b837.js"),["assets/03.3.html-da56b837.js","assets/framework-09afcf0b.js"])),"v-4b67a2e4":r(()=>e(()=>import("./04.1.html-4e524c8d.js"),["assets/04.1.html-4e524c8d.js","assets/framework-09afcf0b.js"])),"v-4d1c7b83":r(()=>e(()=>import("./04.2.html-96e38c9e.js"),["assets/04.2.html-96e38c9e.js","assets/framework-09afcf0b.js"])),"v-4ed15422":r(()=>e(()=>import("./04.3.html-3a4e58e1.js"),["assets/04.3.html-3a4e58e1.js","assets/framework-09afcf0b.js"])),"v-50862cc1":r(()=>e(()=>import("./04.4.html-ea029d58.js"),["assets/04.4.html-ea029d58.js","assets/framework-09afcf0b.js"])),"v-523b0560":r(()=>e(()=>import("./04.5.html-41572175.js"),["assets/04.5.html-41572175.js","assets/framework-09afcf0b.js"])),"v-7fdb5a60":r(()=>e(()=>import("./05.1.html-572f2b3f.js"),["assets/05.1.html-572f2b3f.js","assets/framework-09afcf0b.js"])),"v-fcdf9a02":r(()=>e(()=>import("./05.2.html-34dbb673.js"),["assets/05.2.html-34dbb673.js","assets/framework-09afcf0b.js"])),"v-f975e8c4":r(()=>e(()=>import("./05.3.html-0fd3f64c.js"),["assets/05.3.html-0fd3f64c.js","assets/framework-09afcf0b.js"])),"v-22502948":r(()=>e(()=>import("./06.1.html-c09dc423.js"),["assets/06.1.html-c09dc423.js","assets/framework-09afcf0b.js"])),"v-240501e7":r(()=>e(()=>import("./06.2.html-40abf553.js"),["assets/06.2.html-40abf553.js","assets/framework-09afcf0b.js"])),"v-5fa0991e":r(()=>e(()=>import("./07.1.html-3ce3b41f.js"),["assets/07.1.html-3ce3b41f.js","assets/framework-09afcf0b.js"])),"v-5c36e7e0":r(()=>e(()=>import("./07.2.html-54094218.js"),["assets/07.2.html-54094218.js","assets/framework-09afcf0b.js"])),"v-58cd36a2":r(()=>e(()=>import("./07.3.html-a34704ae.js"),["assets/07.3.html-a34704ae.js","assets/framework-09afcf0b.js"])),"v-0d4df688":r(()=>e(()=>import("./08.1.html-ab8e9268.js"),["assets/08.1.html-ab8e9268.js","assets/framework-09afcf0b.js"])),"v-09e4454a":r(()=>e(()=>import("./08.2.html-e9cb9dd8.js"),["assets/08.2.html-e9cb9dd8.js","assets/framework-09afcf0b.js"])),"v-067a940c":r(()=>e(()=>import("./08.3.html-2ff40ca1.js"),["assets/08.3.html-2ff40ca1.js","assets/framework-09afcf0b.js"])),"v-0310e2ce":r(()=>e(()=>import("./08.4.html-eac6a3c3.js"),["assets/08.4.html-eac6a3c3.js","assets/framework-09afcf0b.js"])),"v-52673f70":r(()=>e(()=>import("./09.1.html-ce747774.js"),["assets/09.1.html-ce747774.js","assets/framework-09afcf0b.js"])),"v-4efd8e32":r(()=>e(()=>import("./09.2.html-a9647744.js"),["assets/09.2.html-a9647744.js","assets/framework-09afcf0b.js"])),"v-9d14dd6c":r(()=>e(()=>import("./10.1.html-9ccd7f25.js"),["assets/10.1.html-9ccd7f25.js","assets/framework-09afcf0b.js"])),"v-99ab2c2e":r(()=>e(()=>import("./10.2.html-02f943c1.js"),["assets/10.2.html-02f943c1.js","assets/framework-09afcf0b.js"])),"v-4e112ea6":r(()=>e(()=>import("./11.1.html-8e2c1ab8.js"),["assets/11.1.html-8e2c1ab8.js","assets/framework-09afcf0b.js"])),"v-4fc60745":r(()=>e(()=>import("./11.2.html-59c3dbb4.js"),["assets/11.2.html-59c3dbb4.js","assets/framework-09afcf0b.js"])),"v-517adfe4":r(()=>e(()=>import("./11.3.html-347e5645.js"),["assets/11.3.html-347e5645.js","assets/framework-09afcf0b.js"])),"v-d4cbd96c":r(()=>e(()=>import("./12.1.html-0fbb1eb5.js"),["assets/12.1.html-0fbb1eb5.js","assets/framework-09afcf0b.js"])),"v-d162282e":r(()=>e(()=>import("./12.2.html-83a2ea6f.js"),["assets/12.2.html-83a2ea6f.js","assets/framework-09afcf0b.js"])),"v-cdf876f0":r(()=>e(()=>import("./12.3.html-6e6bb106.js"),["assets/12.3.html-6e6bb106.js","assets/framework-09afcf0b.js"])),"v-ca8ec5b2":r(()=>e(()=>import("./12.4.html-f3085dbb.js"),["assets/12.4.html-f3085dbb.js","assets/framework-09afcf0b.js"])),"v-4c924008":r(()=>e(()=>import("./13.1.html-27f68316.js"),["assets/13.1.html-27f68316.js","assets/framework-09afcf0b.js"])),"v-4e4718a7":r(()=>e(()=>import("./13.2.html-f7793995.js"),["assets/13.2.html-f7793995.js","assets/framework-09afcf0b.js"])),"v-4ffbf146":r(()=>e(()=>import("./13.3.html-b6712053.js"),["assets/13.3.html-b6712053.js","assets/framework-09afcf0b.js"])),"v-4ab840b9":r(()=>e(()=>import("./14.1.html-7ecde1a4.js"),["assets/14.1.html-7ecde1a4.js","assets/framework-09afcf0b.js"])),"v-4c6d1958":r(()=>e(()=>import("./14.2.html-be356594.js"),["assets/14.2.html-be356594.js","assets/framework-09afcf0b.js"])),"v-4e21f1f7":r(()=>e(()=>import("./14.3.html-9cf346f9.js"),["assets/14.3.html-9cf346f9.js","assets/framework-09afcf0b.js"])),"v-4fd6ca96":r(()=>e(()=>import("./14.4.html-198e3285.js"),["assets/14.4.html-198e3285.js","assets/framework-09afcf0b.js"])),"v-518ba335":r(()=>e(()=>import("./14.5.html-fe1328f4.js"),["assets/14.5.html-fe1328f4.js","assets/framework-09afcf0b.js"])),"v-5f70d940":r(()=>e(()=>import("./15.1.html-86763173.js"),["assets/15.1.html-86763173.js","assets/framework-09afcf0b.js"])),"v-6125b1df":r(()=>e(()=>import("./15.2.html-cf5d4ae8.js"),["assets/15.2.html-cf5d4ae8.js","assets/framework-09afcf0b.js"])),"v-62da8a7e":r(()=>e(()=>import("./15.3.html-fd8981a3.js"),["assets/15.3.html-fd8981a3.js","assets/framework-09afcf0b.js"])),"v-648f631d":r(()=>e(()=>import("./15.4.html-8c7e8fc4.js"),["assets/15.4.html-8c7e8fc4.js","assets/framework-09afcf0b.js"])),"v-f5b4bb7e":r(()=>e(()=>import("./03.0.chpater_summary.html-6f6db808.js"),["assets/03.0.chpater_summary.html-6f6db808.js","assets/framework-09afcf0b.js"])),"v-00ad664e":r(()=>e(()=>import("./03.1.array.html-570381a4.js"),["assets/03.1.array.html-570381a4.js","assets/framework-09afcf0b.js"])),"v-5bab429f":r(()=>e(()=>import("./03.2.slice.html-fe530616.js"),["assets/03.2.slice.html-fe530616.js","assets/framework-09afcf0b.js"])),"v-ef99c07c":r(()=>e(()=>import("./03.3.hashmap.html-9c380925.js"),["assets/03.3.hashmap.html-9c380925.js","assets/framework-09afcf0b.js"])),"v-78e33f52":r(()=>e(()=>import("./03.4.string.html-d2c27518.js"),["assets/03.4.string.html-d2c27518.js","assets/framework-09afcf0b.js"])),"v-eb7c0d78":r(()=>e(()=>import("./04.0.chapter_summary.html-77acff8c.js"),["assets/04.0.chapter_summary.html-77acff8c.js","assets/framework-09afcf0b.js"])),"v-829e24fa":r(()=>e(()=>import("./04.1.function.html-0c8f8abe.js"),["assets/04.1.function.html-0c8f8abe.js","assets/framework-09afcf0b.js"])),"v-3204c3dd":r(()=>e(()=>import("./04.2.interface.html-b5066a8f.js"),["assets/04.2.interface.html-b5066a8f.js","assets/framework-09afcf0b.js"])),"v-ee300c90":r(()=>e(()=>import("./04.3.reflect.html-c9aa8e50.js"),["assets/04.3.reflect.html-c9aa8e50.js","assets/framework-09afcf0b.js"])),"v-30973042":r(()=>e(()=>import("./05.0.chapter_summary.html-065b52b1.js"),["assets/05.0.chapter_summary.html-065b52b1.js","assets/framework-09afcf0b.js"])),"v-06735c8b":r(()=>e(()=>import("./05.1.for_range.html-e1c5d65e.js"),["assets/05.1.for_range.html-e1c5d65e.js","assets/framework-09afcf0b.js"])),"v-5ae068e5":r(()=>e(()=>import("./05.2.select.html-694a9f7b.js"),["assets/05.2.select.html-694a9f7b.js","assets/framework-09afcf0b.js"])),"v-3799e97e":r(()=>e(()=>import("./05.3.defer.html-26920b05.js"),["assets/05.3.defer.html-26920b05.js","assets/framework-09afcf0b.js"])),"v-50e5a21a":r(()=>e(()=>import("./05.4.panic_recover.html-e56daa15.js"),["assets/05.4.panic_recover.html-e56daa15.js","assets/framework-09afcf0b.js"])),"v-cbcea296":r(()=>e(()=>import("./05.5.make_new.html-b5c6afbc.js"),["assets/05.5.make_new.html-b5c6afbc.js","assets/framework-09afcf0b.js"])),"v-f22856bc":r(()=>e(()=>import("./06.1.context.html-5a8153b2.js"),["assets/06.1.context.html-5a8153b2.js","assets/framework-09afcf0b.js"])),"v-3f67611c":r(()=>e(()=>import("./06.2.sync-primitives.html-6568c61e.js"),["assets/06.2.sync-primitives.html-6568c61e.js","assets/framework-09afcf0b.js"])),"v-5cebfcec":r(()=>e(()=>import("./06.3.timer.html-3f3d5249.js"),["assets/06.3.timer.html-3f3d5249.js","assets/framework-09afcf0b.js"])),"v-35c742aa":r(()=>e(()=>import("./06.4.channel.html-bad398da.js"),["assets/06.4.channel.html-bad398da.js","assets/framework-09afcf0b.js"])),"v-6cc31111":r(()=>e(()=>import("./06.5.goroutine.html-7dfb5614.js"),["assets/06.5.goroutine.html-7dfb5614.js","assets/framework-09afcf0b.js"])),"v-62f503b0":r(()=>e(()=>import("./06.6.netpoll.html-9ef0356e.js"),["assets/06.6.netpoll.html-9ef0356e.js","assets/framework-09afcf0b.js"])),"v-4d657308":r(()=>e(()=>import("./06.7.sysmon.html-7ebe175b.js"),["assets/06.7.sysmon.html-7ebe175b.js","assets/framework-09afcf0b.js"])),"v-1bc274ab":r(()=>e(()=>import("./07.1.malloc.html-e3f5bcb6.js"),["assets/07.1.malloc.html-e3f5bcb6.js","assets/framework-09afcf0b.js"])),"v-b3a58990":r(()=>e(()=>import("./07.2.gc.html-a618710a.js"),["assets/07.2.gc.html-a618710a.js","assets/framework-09afcf0b.js"])),"v-35640268":r(()=>e(()=>import("./07.3.stackmem.html-2c2e4cc7.js"),["assets/07.3.stackmem.html-2c2e4cc7.js","assets/framework-09afcf0b.js"])),"v-3706649a":r(()=>e(()=>import("./404.html-cea4d169.js"),["assets/404.html-cea4d169.js","assets/framework-09afcf0b.js"])),"v-1559ca3e":r(()=>e(()=>import("./index.html-81bc5219.js"),["assets/index.html-81bc5219.js","assets/framework-09afcf0b.js"])),"v-cfbd3fb6":r(()=>e(()=>import("./index.html-fc5be1df.js"),["assets/index.html-fc5be1df.js","assets/framework-09afcf0b.js"])),"v-4bea5ddf":r(()=>e(()=>import("./index.html-3a287735.js"),["assets/index.html-3a287735.js","assets/framework-09afcf0b.js"])),"v-47cde344":r(()=>e(()=>import("./index.html-3e3019a9.js"),["assets/index.html-3e3019a9.js","assets/framework-09afcf0b.js"])),"v-71f9b647":r(()=>e(()=>import("./index.html-191dffac.js"),["assets/index.html-191dffac.js","assets/framework-09afcf0b.js"])),"v-ba749eac":r(()=>e(()=>import("./index.html-f3f0981f.js"),["assets/index.html-f3f0981f.js","assets/framework-09afcf0b.js"])),"v-7c278c2f":r(()=>e(()=>import("./index.html-41d063c4.js"),["assets/index.html-41d063c4.js","assets/framework-09afcf0b.js"])),"v-3a285236":r(()=>e(()=>import("./index.html-bc001181.js"),["assets/index.html-bc001181.js","assets/framework-09afcf0b.js"])),"v-445d5b2a":r(()=>e(()=>import("./index.html-a8f76bbb.js"),["assets/index.html-a8f76bbb.js","assets/framework-09afcf0b.js"])),"v-c8296fee":r(()=>e(()=>import("./index.html-a1213c9a.js"),["assets/index.html-a1213c9a.js","assets/framework-09afcf0b.js"])),"v-a152a89c":r(()=>e(()=>import("./index.html-c29521d5.js"),["assets/index.html-c29521d5.js","assets/framework-09afcf0b.js"])),"v-71b3ae87":r(()=>e(()=>import("./index.html-92aa7193.js"),["assets/index.html-92aa7193.js","assets/framework-09afcf0b.js"])),"v-4201c114":r(()=>e(()=>import("./index.html-c81bcbd0.js"),["assets/index.html-c81bcbd0.js","assets/framework-09afcf0b.js"])),"v-0862c58e":r(()=>e(()=>import("./index.html-8680b30d.js"),["assets/index.html-8680b30d.js","assets/framework-09afcf0b.js"])),"v-4969375b":r(()=>e(()=>import("./index.html-f1318e1a.js"),["assets/index.html-f1318e1a.js","assets/framework-09afcf0b.js"])),"v-35c040d5":r(()=>e(()=>import("./index.html-f4745ce1.js"),["assets/index.html-f4745ce1.js","assets/framework-09afcf0b.js"])),"v-31987621":r(()=>e(()=>import("./index.html-35063b6f.js"),["assets/index.html-35063b6f.js","assets/framework-09afcf0b.js"])),"v-7a975d53":r(()=>e(()=>import("./index.html-b3681654.js"),["assets/index.html-b3681654.js","assets/framework-09afcf0b.js"])),"v-50099075":r(()=>e(()=>import("./index.html-99ab6f67.js"),["assets/index.html-99ab6f67.js","assets/framework-09afcf0b.js"])),"v-88ff580e":r(()=>e(()=>import("./index.html-6aa7cb1a.js"),["assets/index.html-6aa7cb1a.js","assets/framework-09afcf0b.js"])),"v-27d196a6":r(()=>e(()=>import("./index.html-a2589241.js"),["assets/index.html-a2589241.js","assets/framework-09afcf0b.js"])),"v-aac0ad50":r(()=>e(()=>import("./index.html-fe5fa646.js"),["assets/index.html-fe5fa646.js","assets/framework-09afcf0b.js"])),"v-01af5e14":r(()=>e(()=>import("./index.html-f485e7aa.js"),["assets/index.html-f485e7aa.js","assets/framework-09afcf0b.js"])),"v-43e50cbd":r(()=>e(()=>import("./index.html-9684836c.js"),["assets/index.html-9684836c.js","assets/framework-09afcf0b.js"])),"v-1a7ec4e8":r(()=>e(()=>import("./index.html-88443c0c.js"),["assets/index.html-88443c0c.js","assets/framework-09afcf0b.js"])),"v-2aa888f8":r(()=>e(()=>import("./index.html-9a4919bf.js"),["assets/index.html-9a4919bf.js","assets/framework-09afcf0b.js"])),"v-2a9b19e8":r(()=>e(()=>import("./index.html-86601ca1.js"),["assets/index.html-86601ca1.js","assets/framework-09afcf0b.js"])),"v-0852455e":r(()=>e(()=>import("./index.html-908798ad.js"),["assets/index.html-908798ad.js","assets/framework-09afcf0b.js"])),"v-1d22e941":r(()=>e(()=>import("./index.html-3977bee6.js"),["assets/index.html-3977bee6.js","assets/framework-09afcf0b.js"])),"v-fa453234":r(()=>e(()=>import("./index.html-b2307ec4.js"),["assets/index.html-b2307ec4.js","assets/framework-09afcf0b.js"])),"v-634e7c20":r(()=>e(()=>import("./index.html-00a6d7f9.js"),["assets/index.html-00a6d7f9.js","assets/framework-09afcf0b.js"])),"v-206d929f":r(()=>e(()=>import("./index.html-81135078.js"),["assets/index.html-81135078.js","assets/framework-09afcf0b.js"])),"v-6fe9401f":r(()=>e(()=>import("./index.html-2a4ad4df.js"),["assets/index.html-2a4ad4df.js","assets/framework-09afcf0b.js"])),"v-9e47132a":r(()=>e(()=>import("./index.html-b460ceac.js"),["assets/index.html-b460ceac.js","assets/framework-09afcf0b.js"])),"v-88b7e15c":r(()=>e(()=>import("./index.html-1a663738.js"),["assets/index.html-1a663738.js","assets/framework-09afcf0b.js"])),"v-45cda98f":r(()=>e(()=>import("./index.html-7d3eb93a.js"),["assets/index.html-7d3eb93a.js","assets/framework-09afcf0b.js"])),"v-309ea81e":r(()=>e(()=>import("./index.html-3bbcc43b.js"),["assets/index.html-3bbcc43b.js","assets/framework-09afcf0b.js"])),"v-28d2d5dc":r(()=>e(()=>import("./index.html-bb9e75f2.js"),["assets/index.html-bb9e75f2.js","assets/framework-09afcf0b.js"])),"v-62622100":r(()=>e(()=>import("./index.html-c3fd18ff.js"),["assets/index.html-c3fd18ff.js","assets/framework-09afcf0b.js"])),"v-5611d7d2":r(()=>e(()=>import("./index.html-f3cb99b3.js"),["assets/index.html-f3cb99b3.js","assets/framework-09afcf0b.js"])),"v-7697530d":r(()=>e(()=>import("./index.html-a1ef0ab2.js"),["assets/index.html-a1ef0ab2.js","assets/framework-09afcf0b.js"])),"v-2661e0da":r(()=>e(()=>import("./index.html-da3d1cd8.js"),["assets/index.html-da3d1cd8.js","assets/framework-09afcf0b.js"])),"v-4a15e6be":r(()=>e(()=>import("./index.html-e480c4ae.js"),["assets/index.html-e480c4ae.js","assets/framework-09afcf0b.js"])),"v-54b265b4":r(()=>e(()=>import("./index.html-f9e78743.js"),["assets/index.html-f9e78743.js","assets/framework-09afcf0b.js"])),"v-8f959c42":r(()=>e(()=>import("./index.html-0f72c9b4.js"),["assets/index.html-0f72c9b4.js","assets/framework-09afcf0b.js"])),"v-08e328a3":r(()=>e(()=>import("./index.html-19e03c34.js"),["assets/index.html-19e03c34.js","assets/framework-09afcf0b.js"])),"v-65f6a00e":r(()=>e(()=>import("./index.html-ae70572a.js"),["assets/index.html-ae70572a.js","assets/framework-09afcf0b.js"])),"v-35f72fa3":r(()=>e(()=>import("./index.html-183ea37d.js"),["assets/index.html-183ea37d.js","assets/framework-09afcf0b.js"])),"v-2f5276aa":r(()=>e(()=>import("./index.html-c78e82c1.js"),["assets/index.html-c78e82c1.js","assets/framework-09afcf0b.js"])),"v-9561529e":r(()=>e(()=>import("./index.html-00ebd63d.js"),["assets/index.html-00ebd63d.js","assets/framework-09afcf0b.js"])),"v-65f8848d":r(()=>e(()=>import("./index.html-5f3f2c44.js"),["assets/index.html-5f3f2c44.js","assets/framework-09afcf0b.js"])),"v-bc1b8554":r(()=>e(()=>import("./index.html-0e507b4c.js"),["assets/index.html-0e507b4c.js","assets/framework-09afcf0b.js"])),"v-28dacb7d":r(()=>e(()=>import("./index.html-13e0446d.js"),["assets/index.html-13e0446d.js","assets/framework-09afcf0b.js"])),"v-7a30c96c":r(()=>e(()=>import("./index.html-0e3d9934.js"),["assets/index.html-0e3d9934.js","assets/framework-09afcf0b.js"])),"v-260ce97e":r(()=>e(()=>import("./index.html-55de168e.js"),["assets/index.html-55de168e.js","assets/framework-09afcf0b.js"])),"v-1e2a6757":r(()=>e(()=>import("./index.html-9be9ab0e.js"),["assets/index.html-9be9ab0e.js","assets/framework-09afcf0b.js"])),"v-32a7a3e3":r(()=>e(()=>import("./index.html-d9b64da8.js"),["assets/index.html-d9b64da8.js","assets/framework-09afcf0b.js"])),"v-1e3de95e":r(()=>e(()=>import("./index.html-cd29bc13.js"),["assets/index.html-cd29bc13.js","assets/framework-09afcf0b.js"])),"v-0674fba9":r(()=>e(()=>import("./index.html-91d02d14.js"),["assets/index.html-91d02d14.js","assets/framework-09afcf0b.js"])),"v-3efe7f8e":r(()=>e(()=>import("./index.html-91f96e85.js"),["assets/index.html-91f96e85.js","assets/framework-09afcf0b.js"])),"v-77926428":r(()=>e(()=>import("./index.html-f7c6a6b3.js"),["assets/index.html-f7c6a6b3.js","assets/framework-09afcf0b.js"])),"v-35b08162":r(()=>e(()=>import("./index.html-4fd8abef.js"),["assets/index.html-4fd8abef.js","assets/framework-09afcf0b.js"])),"v-3af528ec":r(()=>e(()=>import("./index.html-6bbc1ea6.js"),["assets/index.html-6bbc1ea6.js","assets/framework-09afcf0b.js"])),"v-89bbd888":r(()=>e(()=>import("./index.html-73316e38.js"),["assets/index.html-73316e38.js","assets/framework-09afcf0b.js"])),"v-774c21eb":r(()=>e(()=>import("./index.html-378ef4af.js"),["assets/index.html-378ef4af.js","assets/framework-09afcf0b.js"])),"v-79f6cfb7":r(()=>e(()=>import("./index.html-c4a490fd.js"),["assets/index.html-c4a490fd.js","assets/framework-09afcf0b.js"])),"v-7ea44194":r(()=>e(()=>import("./index.html-61072b63.js"),["assets/index.html-61072b63.js","assets/framework-09afcf0b.js"])),"v-884d4ab4":r(()=>e(()=>import("./index.html-1f98cfb9.js"),["assets/index.html-1f98cfb9.js","assets/framework-09afcf0b.js"])),"v-dab3fc08":r(()=>e(()=>import("./index.html-060a05af.js"),["assets/index.html-060a05af.js","assets/framework-09afcf0b.js"])),"v-34128616":r(()=>e(()=>import("./index.html-daee39da.js"),["assets/index.html-daee39da.js","assets/framework-09afcf0b.js"])),"v-1706a50a":r(()=>e(()=>import("./index.html-cb50b0e9.js"),["assets/index.html-cb50b0e9.js","assets/framework-09afcf0b.js"])),"v-24361689":r(()=>e(()=>import("./index.html-b72f01a6.js"),["assets/index.html-b72f01a6.js","assets/framework-09afcf0b.js"])),"v-008537c4":r(()=>e(()=>import("./index.html-d283dedb.js"),["assets/index.html-d283dedb.js","assets/framework-09afcf0b.js"])),"v-1d996994":r(()=>e(()=>import("./index.html-4086017d.js"),["assets/index.html-4086017d.js","assets/framework-09afcf0b.js"])),"v-6b88e44e":r(()=>e(()=>import("./index.html-aa4c1023.js"),["assets/index.html-aa4c1023.js","assets/framework-09afcf0b.js"])),"v-a9bb235a":r(()=>e(()=>import("./index.html-f103c923.js"),["assets/index.html-f103c923.js","assets/framework-09afcf0b.js"])),"v-7f9b2d58":r(()=>e(()=>import("./index.html-2d1c15dd.js"),["assets/index.html-2d1c15dd.js","assets/framework-09afcf0b.js"])),"v-a9bb231c":r(()=>e(()=>import("./index.html-28e5ce4f.js"),["assets/index.html-28e5ce4f.js","assets/framework-09afcf0b.js"])),"v-a9bb22de":r(()=>e(()=>import("./index.html-f87df6e9.js"),["assets/index.html-f87df6e9.js","assets/framework-09afcf0b.js"])),"v-a9bb22a0":r(()=>e(()=>import("./index.html-06354c10.js"),["assets/index.html-06354c10.js","assets/framework-09afcf0b.js"])),"v-a9bb2262":r(()=>e(()=>import("./index.html-80868be1.js"),["assets/index.html-80868be1.js","assets/framework-09afcf0b.js"])),"v-a9bb2224":r(()=>e(()=>import("./index.html-d2f76f2a.js"),["assets/index.html-d2f76f2a.js","assets/framework-09afcf0b.js"])),"v-a9bb1cd0":r(()=>e(()=>import("./index.html-e9085098.js"),["assets/index.html-e9085098.js","assets/framework-09afcf0b.js"])),"v-a9bb1c92":r(()=>e(()=>import("./index.html-3ebf63fc.js"),["assets/index.html-3ebf63fc.js","assets/framework-09afcf0b.js"])),"v-a9bb1c16":r(()=>e(()=>import("./index.html-6aa9bcf1.js"),["assets/index.html-6aa9bcf1.js","assets/framework-09afcf0b.js"])),"v-a9bb1bd8":r(()=>e(()=>import("./index.html-98e7f744.js"),["assets/index.html-98e7f744.js","assets/framework-09afcf0b.js"])),"v-64259ab4":r(()=>e(()=>import("./index.html-d204cdb3.js"),["assets/index.html-d204cdb3.js","assets/framework-09afcf0b.js"])),"v-b379315e":r(()=>e(()=>import("./index.html-b9c7a91a.js"),["assets/index.html-b9c7a91a.js","assets/framework-09afcf0b.js"])),"v-95615260":r(()=>e(()=>import("./index.html-8fb0b1f1.js"),["assets/index.html-8fb0b1f1.js","assets/framework-09afcf0b.js"])),"v-46979068":r(()=>e(()=>import("./index.html-28342709.js"),["assets/index.html-28342709.js","assets/framework-09afcf0b.js"])),"v-dc7d13d2":r(()=>e(()=>import("./index.html-433bb749.js"),["assets/index.html-433bb749.js","assets/framework-09afcf0b.js"])),"v-540d63d0":r(()=>e(()=>import("./index.html-72ea8440.js"),["assets/index.html-72ea8440.js","assets/framework-09afcf0b.js"])),"v-79d0e8a8":r(()=>e(()=>import("./index.html-22ca7975.js"),["assets/index.html-22ca7975.js","assets/framework-09afcf0b.js"])),"v-7dc276bb":r(()=>e(()=>import("./index.html-876ea380.js"),["assets/index.html-876ea380.js","assets/framework-09afcf0b.js"])),"v-eb23a7cc":r(()=>e(()=>import("./index.html-e7914496.js"),["assets/index.html-e7914496.js","assets/framework-09afcf0b.js"])),"v-6caeff4e":r(()=>e(()=>import("./index.html-5fd97781.js"),["assets/index.html-5fd97781.js","assets/framework-09afcf0b.js"])),"v-1701a011":r(()=>e(()=>import("./index.html-357d3a80.js"),["assets/index.html-357d3a80.js","assets/framework-09afcf0b.js"])),"v-3c12dfe8":r(()=>e(()=>import("./index.html-8f9a9319.js"),["assets/index.html-8f9a9319.js","assets/framework-09afcf0b.js"])),"v-becaf144":r(()=>e(()=>import("./index.html-a7dcebe7.js"),["assets/index.html-a7dcebe7.js","assets/framework-09afcf0b.js"])),"v-427f7972":r(()=>e(()=>import("./index.html-94c056e6.js"),["assets/index.html-94c056e6.js","assets/framework-09afcf0b.js"])),"v-76b6a425":r(()=>e(()=>import("./index.html-ebe1f947.js"),["assets/index.html-ebe1f947.js","assets/framework-09afcf0b.js"])),"v-032edb4d":r(()=>e(()=>import("./index.html-271bc444.js"),["assets/index.html-271bc444.js","assets/framework-09afcf0b.js"])),"v-74257a30":r(()=>e(()=>import("./index.html-2af73b42.js"),["assets/index.html-2af73b42.js","assets/framework-09afcf0b.js"])),"v-6cec00cb":r(()=>e(()=>import("./index.html-ca40b653.js"),["assets/index.html-ca40b653.js","assets/framework-09afcf0b.js"])),"v-0d9eda0c":r(()=>e(()=>import("./index.html-b11822f2.js"),["assets/index.html-b11822f2.js","assets/framework-09afcf0b.js"])),"v-d621dc0c":r(()=>e(()=>import("./index.html-707d4bcb.js"),["assets/index.html-707d4bcb.js","assets/framework-09afcf0b.js"])),"v-022f2d5c":r(()=>e(()=>import("./index.html-97147e65.js"),["assets/index.html-97147e65.js","assets/framework-09afcf0b.js"])),"v-61c4714f":r(()=>e(()=>import("./index.html-f78da6d2.js"),["assets/index.html-f78da6d2.js","assets/framework-09afcf0b.js"])),"v-2149e688":r(()=>e(()=>import("./index.html-832102bf.js"),["assets/index.html-832102bf.js","assets/framework-09afcf0b.js"])),"v-84faf59c":r(()=>e(()=>import("./index.html-6e4317c4.js"),["assets/index.html-6e4317c4.js","assets/framework-09afcf0b.js"])),"v-261404a9":r(()=>e(()=>import("./index.html-66ad71be.js"),["assets/index.html-66ad71be.js","assets/framework-09afcf0b.js"])),"v-6afb496d":r(()=>e(()=>import("./index.html-867dd17e.js"),["assets/index.html-867dd17e.js","assets/framework-09afcf0b.js"])),"v-1c3be1e6":r(()=>e(()=>import("./index.html-71862eb4.js"),["assets/index.html-71862eb4.js","assets/framework-09afcf0b.js"])),"v-7eec0d96":r(()=>e(()=>import("./index.html-1da477a4.js"),["assets/index.html-1da477a4.js","assets/framework-09afcf0b.js"])),"v-72b940c4":r(()=>e(()=>import("./index.html-82d2547b.js"),["assets/index.html-82d2547b.js","assets/framework-09afcf0b.js"])),"v-5decfa84":r(()=>e(()=>import("./index.html-1be432a7.js"),["assets/index.html-1be432a7.js","assets/framework-09afcf0b.js"])),"v-075c6c62":r(()=>e(()=>import("./index.html-46a788e1.js"),["assets/index.html-46a788e1.js","assets/framework-09afcf0b.js"])),"v-506407f4":r(()=>e(()=>import("./index.html-58ece7f0.js"),["assets/index.html-58ece7f0.js","assets/framework-09afcf0b.js"])),"v-37a8c5a0":r(()=>e(()=>import("./index.html-e5025074.js"),["assets/index.html-e5025074.js","assets/framework-09afcf0b.js"])),"v-0379cba1":r(()=>e(()=>import("./index.html-a59efaf6.js"),["assets/index.html-a59efaf6.js","assets/framework-09afcf0b.js"])),"v-0fe52c37":r(()=>e(()=>import("./index.html-6f9158b7.js"),["assets/index.html-6f9158b7.js","assets/framework-09afcf0b.js"])),"v-c6edb6ae":r(()=>e(()=>import("./index.html-47ead945.js"),["assets/index.html-47ead945.js","assets/framework-09afcf0b.js"])),"v-e52c881c":r(()=>e(()=>import("./index.html-6c5b3fe1.js"),["assets/index.html-6c5b3fe1.js","assets/framework-09afcf0b.js"])),"v-154dc4c4":r(()=>e(()=>import("./index.html-c6a4204e.js"),["assets/index.html-c6a4204e.js","assets/framework-09afcf0b.js"])),"v-01560935":r(()=>e(()=>import("./index.html-3ecb4b94.js"),["assets/index.html-3ecb4b94.js","assets/framework-09afcf0b.js"])),"v-02c6a6b2":r(()=>e(()=>import("./index.html-595c0248.js"),["assets/index.html-595c0248.js","assets/framework-09afcf0b.js"])),"v-0017792c":r(()=>e(()=>import("./index.html-ca45fdd1.js"),["assets/index.html-ca45fdd1.js","assets/framework-09afcf0b.js"])),"v-2e75e8de":r(()=>e(()=>import("./index.html-de0e54b1.js"),["assets/index.html-de0e54b1.js","assets/framework-09afcf0b.js"])),"v-6f7bfa04":r(()=>e(()=>import("./index.html-34976e68.js"),["assets/index.html-34976e68.js","assets/framework-09afcf0b.js"])),"v-0e0b961f":r(()=>e(()=>import("./index.html-9e6fac6a.js"),["assets/index.html-9e6fac6a.js","assets/framework-09afcf0b.js"])),"v-7e751551":r(()=>e(()=>import("./index.html-501d098e.js"),["assets/index.html-501d098e.js","assets/framework-09afcf0b.js"])),"v-b6ff5888":r(()=>e(()=>import("./index.html-61be3ee4.js"),["assets/index.html-61be3ee4.js","assets/framework-09afcf0b.js"])),"v-29e33f95":r(()=>e(()=>import("./index.html-dbe993ba.js"),["assets/index.html-dbe993ba.js","assets/framework-09afcf0b.js"])),"v-dbaf7c9c":r(()=>e(()=>import("./index.html-9b2786e4.js"),["assets/index.html-9b2786e4.js","assets/framework-09afcf0b.js"])),"v-1e3e75c0":r(()=>e(()=>import("./index.html-617d1d6e.js"),["assets/index.html-617d1d6e.js","assets/framework-09afcf0b.js"])),"v-0564ef99":r(()=>e(()=>import("./index.html-44fc71ba.js"),["assets/index.html-44fc71ba.js","assets/framework-09afcf0b.js"])),"v-3de926ea":r(()=>e(()=>import("./index.html-bc76cabb.js"),["assets/index.html-bc76cabb.js","assets/framework-09afcf0b.js"])),"v-7b34f334":r(()=>e(()=>import("./index.html-8053d726.js"),["assets/index.html-8053d726.js","assets/framework-09afcf0b.js"])),"v-3c599b43":r(()=>e(()=>import("./index.html-b8f836b6.js"),["assets/index.html-b8f836b6.js","assets/framework-09afcf0b.js"])),"v-5bc93818":r(()=>e(()=>import("./index.html-abaaf629.js"),["assets/index.html-abaaf629.js","assets/framework-09afcf0b.js"])),"v-1e4ce2de":r(()=>e(()=>import("./index.html-dfebe358.js"),["assets/index.html-dfebe358.js","assets/framework-09afcf0b.js"])),"v-58c4e07f":r(()=>e(()=>import("./index.html-63b0c2c7.js"),["assets/index.html-63b0c2c7.js","assets/framework-09afcf0b.js"])),"v-a0d528ce":r(()=>e(()=>import("./index.html-2beb2e4e.js"),["assets/index.html-2beb2e4e.js","assets/framework-09afcf0b.js"])),"v-e9a125fe":r(()=>e(()=>import("./index.html-1f08998f.js"),["assets/index.html-1f08998f.js","assets/framework-09afcf0b.js"])),"v-231414e4":r(()=>e(()=>import("./index.html-344f4ba8.js"),["assets/index.html-344f4ba8.js","assets/framework-09afcf0b.js"])),"v-9c48d85a":r(()=>e(()=>import("./index.html-b0788b27.js"),["assets/index.html-b0788b27.js","assets/framework-09afcf0b.js"])),"v-2ae80a11":r(()=>e(()=>import("./index.html-fd2a901e.js"),["assets/index.html-fd2a901e.js","assets/framework-09afcf0b.js"])),"v-7d1a55bb":r(()=>e(()=>import("./index.html-a9a0ecc3.js"),["assets/index.html-a9a0ecc3.js","assets/framework-09afcf0b.js"])),"v-744d024e":r(()=>e(()=>import("./index.html-96fce90a.js"),["assets/index.html-96fce90a.js","assets/framework-09afcf0b.js"])),"v-27fb5a12":r(()=>e(()=>import("./index.html-dda225a7.js"),["assets/index.html-dda225a7.js","assets/framework-09afcf0b.js"])),"v-2926fcc3":r(()=>e(()=>import("./index.html-7e0c365c.js"),["assets/index.html-7e0c365c.js","assets/framework-09afcf0b.js"])),"v-95b29426":r(()=>e(()=>import("./index.html-86a464c5.js"),["assets/index.html-86a464c5.js","assets/framework-09afcf0b.js"])),"v-3f8dd7a0":r(()=>e(()=>import("./index.html-4635747f.js"),["assets/index.html-4635747f.js","assets/framework-09afcf0b.js"])),"v-57d268b0":r(()=>e(()=>import("./index.html-ab71d6b9.js"),["assets/index.html-ab71d6b9.js","assets/framework-09afcf0b.js"])),"v-3a057524":r(()=>e(()=>import("./index.html-98e94ca1.js"),["assets/index.html-98e94ca1.js","assets/framework-09afcf0b.js"])),"v-43d7543a":r(()=>e(()=>import("./index.html-f6461cea.js"),["assets/index.html-f6461cea.js","assets/framework-09afcf0b.js"])),"v-08ebf6aa":r(()=>e(()=>import("./index.html-e6c2096f.js"),["assets/index.html-e6c2096f.js","assets/framework-09afcf0b.js"])),"v-65efd6b5":r(()=>e(()=>import("./index.html-3a518584.js"),["assets/index.html-3a518584.js","assets/framework-09afcf0b.js"])),"v-78b5f603":r(()=>e(()=>import("./index.html-4cc18b7a.js"),["assets/index.html-4cc18b7a.js","assets/framework-09afcf0b.js"])),"v-bd055baa":r(()=>e(()=>import("./index.html-5ddd4a79.js"),["assets/index.html-5ddd4a79.js","assets/framework-09afcf0b.js"])),"v-16e1a3ee":r(()=>e(()=>import("./index.html-2fb615f4.js"),["assets/index.html-2fb615f4.js","assets/framework-09afcf0b.js"])),"v-a074e84e":r(()=>e(()=>import("./index.html-f2c39616.js"),["assets/index.html-f2c39616.js","assets/framework-09afcf0b.js"])),"v-b310d59e":r(()=>e(()=>import("./index.html-165c5bcf.js"),["assets/index.html-165c5bcf.js","assets/framework-09afcf0b.js"])),"v-dc8c5890":r(()=>e(()=>import("./index.html-85f6322d.js"),["assets/index.html-85f6322d.js","assets/framework-09afcf0b.js"])),"v-067f6802":r(()=>e(()=>import("./index.html-51deb753.js"),["assets/index.html-51deb753.js","assets/framework-09afcf0b.js"])),"v-58706565":r(()=>e(()=>import("./index.html-ab11ed61.js"),["assets/index.html-ab11ed61.js","assets/framework-09afcf0b.js"])),"v-b30db0d4":r(()=>e(()=>import("./index.html-9da1b7b3.js"),["assets/index.html-9da1b7b3.js","assets/framework-09afcf0b.js"])),"v-3d18303b":r(()=>e(()=>import("./index.html-3ad6e81d.js"),["assets/index.html-3ad6e81d.js","assets/framework-09afcf0b.js"])),"v-03854a35":r(()=>e(()=>import("./index.html-fe4f55f1.js"),["assets/index.html-fe4f55f1.js","assets/framework-09afcf0b.js"])),"v-54c4d176":r(()=>e(()=>import("./index.html-9f376d48.js"),["assets/index.html-9f376d48.js","assets/framework-09afcf0b.js"])),"v-00817fb3":r(()=>e(()=>import("./index.html-d1505820.js"),["assets/index.html-d1505820.js","assets/framework-09afcf0b.js"])),"v-6c5e4d32":r(()=>e(()=>import("./index.html-f8d44eff.js"),["assets/index.html-f8d44eff.js","assets/framework-09afcf0b.js"])),"v-287de1de":r(()=>e(()=>import("./index.html-5ab46d1c.js"),["assets/index.html-5ab46d1c.js","assets/framework-09afcf0b.js"])),"v-65f6d381":r(()=>e(()=>import("./index.html-1767dea4.js"),["assets/index.html-1767dea4.js","assets/framework-09afcf0b.js"])),"v-b3024e96":r(()=>e(()=>import("./index.html-796f3bfa.js"),["assets/index.html-796f3bfa.js","assets/framework-09afcf0b.js"])),"v-9717cc36":r(()=>e(()=>import("./index.html-f982d2b5.js"),["assets/index.html-f982d2b5.js","assets/framework-09afcf0b.js"])),"v-45a92e78":r(()=>e(()=>import("./index.html-851bc6a1.js"),["assets/index.html-851bc6a1.js","assets/framework-09afcf0b.js"])),"v-011c83e2":r(()=>e(()=>import("./index.html-ba7f3de1.js"),["assets/index.html-ba7f3de1.js","assets/framework-09afcf0b.js"])),"v-d36ddc48":r(()=>e(()=>import("./index.html-6a96f571.js"),["assets/index.html-6a96f571.js","assets/framework-09afcf0b.js"])),"v-e2bac56c":r(()=>e(()=>import("./index.html-949cfec4.js"),["assets/index.html-949cfec4.js","assets/framework-09afcf0b.js"])),"v-b310b71a":r(()=>e(()=>import("./index.html-afb37171.js"),["assets/index.html-afb37171.js","assets/framework-09afcf0b.js"])),"v-65f4ef02":r(()=>e(()=>import("./index.html-74b4679c.js"),["assets/index.html-74b4679c.js","assets/framework-09afcf0b.js"])),"v-1e110772":r(()=>e(()=>import("./index.html-b22726e4.js"),["assets/index.html-b22726e4.js","assets/framework-09afcf0b.js"])),"v-ab4b264e":r(()=>e(()=>import("./index.html-7db1d157.js"),["assets/index.html-7db1d157.js","assets/framework-09afcf0b.js"])),"v-b2ffcb18":r(()=>e(()=>import("./index.html-036dc6af.js"),["assets/index.html-036dc6af.js","assets/framework-09afcf0b.js"])),"v-8848dfa8":r(()=>e(()=>import("./index.html-7e7cc801.js"),["assets/index.html-7e7cc801.js","assets/framework-09afcf0b.js"])),"v-b30332ba":r(()=>e(()=>import("./index.html-35eac3ba.js"),["assets/index.html-35eac3ba.js","assets/framework-09afcf0b.js"])),"v-bab790d4":r(()=>e(()=>import("./index.html-af3f3504.js"),["assets/index.html-af3f3504.js","assets/framework-09afcf0b.js"])),"v-287f3643":r(()=>e(()=>import("./index.html-d3c21057.js"),["assets/index.html-d3c21057.js","assets/framework-09afcf0b.js"])),"v-6af60407":r(()=>e(()=>import("./index.html-0ffe5952.js"),["assets/index.html-0ffe5952.js","assets/framework-09afcf0b.js"])),"v-4b0ad344":r(()=>e(()=>import("./index.html-60b02db1.js"),["assets/index.html-60b02db1.js","assets/framework-09afcf0b.js"])),"v-94c7f10c":r(()=>e(()=>import("./index.html-893b2ff7.js"),["assets/index.html-893b2ff7.js","assets/framework-09afcf0b.js"])),"v-3fb58c9e":r(()=>e(()=>import("./index.html-51517985.js"),["assets/index.html-51517985.js","assets/framework-09afcf0b.js"])),"v-2953cd2f":r(()=>e(()=>import("./index.html-376243d7.js"),["assets/index.html-376243d7.js","assets/framework-09afcf0b.js"])),"v-b306110a":r(()=>e(()=>import("./index.html-86b40d5d.js"),["assets/index.html-86b40d5d.js","assets/framework-09afcf0b.js"])),"v-546163eb":r(()=>e(()=>import("./index.html-c28f53f6.js"),["assets/index.html-c28f53f6.js","assets/framework-09afcf0b.js"])),"v-2850a9ab":r(()=>e(()=>import("./index.html-de7e0e84.js"),["assets/index.html-de7e0e84.js","assets/framework-09afcf0b.js"])),"v-f841e7a0":r(()=>e(()=>import("./index.html-84dba230.js"),["assets/index.html-84dba230.js","assets/framework-09afcf0b.js"])),"v-0ffafb8a":r(()=>e(()=>import("./index.html-36c4d0a3.js"),["assets/index.html-36c4d0a3.js","assets/framework-09afcf0b.js"])),"v-337bd5ac":r(()=>e(()=>import("./index.html-3cdaf628.js"),["assets/index.html-3cdaf628.js","assets/framework-09afcf0b.js"]))};var ji=Symbol(""),Gi=w(Mi),ss=Hn({key:"",path:"",title:"",lang:"",frontmatter:{},headers:[]}),hn=w(ss),C=()=>hn,os=Symbol(""),z=()=>{const n=W(os);if(!n)throw new Error("usePageFrontmatter() is called without provider.");return n},is=Symbol(""),Bi=()=>{const n=W(is);if(!n)throw new Error("usePageHead() is called without provider.");return n},rs=Symbol(""),qi=()=>{const n=W(rs);if(!n)throw new Error("usePageHeadTitle() is called without provider.");return n},ls=Symbol(""),se=()=>{const n=W(ls);if(!n)throw new Error("usePageLang() is called without provider.");return n},cs=Symbol(""),Ni=()=>{const n=W(cs);if(!n)throw new Error("usePageLayout() is called without provider.");return n},va=Symbol(""),cn=()=>{const n=W(va);if(!n)throw new Error("useRouteLocale() is called without provider.");return n},zn=w(zi),ps=()=>zn,ds=Symbol(""),oe=()=>{const n=W(ds);if(!n)throw new Error("useSiteLocaleData() is called without provider.");return n},Hi=Symbol(""),Fi="Layout",Ui="NotFound",un=ki({resolveLayouts:n=>n.reduce((a,t)=>({...a,...t.layouts}),{}),resolvePageData:async n=>{const a=Gi.value[n];return await(a==null?void 0:a())??ss},resolvePageFrontmatter:n=>n.frontmatter,resolvePageHead:(n,a,t)=>{const s=U(a.description)?a.description:t.description,o=[...Pe(a.head)?a.head:[],...t.head,["title",{},n],["meta",{name:"description",content:s}]];return fi(o)},resolvePageHeadTitle:(n,a)=>[n.title,a.title].filter(t=>!!t).join(" | "),resolvePageLang:n=>n.lang||"en",resolvePageLayout:(n,a)=>{let t;if(n.path){const s=n.frontmatter.layout;U(s)?t=s:t=Fi}else t=Ui;return a[t]},resolveRouteLocale:(n,a)=>yi(n,a),resolveSiteLocaleData:(n,a)=>({...n,...n.locales[a]})}),De=y({name:"ClientOnly",setup(n,a){const t=w(!1);return R(()=>{t.value=!0}),()=>{var s,o;return t.value?(o=(s=a.slots).default)==null?void 0:o.call(s):null}}}),ma=y({name:"Content",props:{pageKey:{type:String,required:!1,default:""}},setup(n){const a=C(),t=h(()=>ts[n.pageKey||a.value.key]);return()=>t.value?i(t.value):i("div","404 Not Found")}}),an=(n={})=>n,F=n=>Tn(n)?n:`/${Yt(n)}`;const Wi={};var J=Uint8Array,yn=Uint16Array,us=Uint32Array,vs=new J([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ms=new J([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ki=new J([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),gs=function(n,a){for(var t=new yn(31),s=0;s<31;++s)t[s]=a+=1<<n[s-1];for(var o=new us(t[30]),s=1;s<30;++s)for(var l=t[s];l<t[s+1];++l)o[l]=l-t[s]<<5|s;return[t,o]},_s=gs(vs,2),hs=_s[0],Ji=_s[1];hs[28]=258,Ji[258]=28;var Qi=gs(ms,0),Yi=Qi[0],Qe=new yn(32768);for(var G=0;G<32768;++G){var gn=(G&43690)>>>1|(G&21845)<<1;gn=(gn&52428)>>>2|(gn&13107)<<2,gn=(gn&61680)>>>4|(gn&3855)<<4,Qe[G]=((gn&65280)>>>8|(gn&255)<<8)>>>1}var Yn=function(n,a,t){for(var s=n.length,o=0,l=new yn(a);o<s;++o)n[o]&&++l[n[o]-1];var c=new yn(a);for(o=0;o<a;++o)c[o]=c[o-1]+l[o-1]<<1;var p;if(t){p=new yn(1<<a);var u=15-a;for(o=0;o<s;++o)if(n[o])for(var d=o<<4|n[o],v=a-n[o],m=c[n[o]-1]++<<v,g=m|(1<<v)-1;m<=g;++m)p[Qe[m]>>>u]=d}else for(p=new yn(s),o=0;o<s;++o)n[o]&&(p[o]=Qe[c[n[o]-1]++]>>>15-n[o]);return p},ie=new J(288);for(var G=0;G<144;++G)ie[G]=8;for(var G=144;G<256;++G)ie[G]=9;for(var G=256;G<280;++G)ie[G]=7;for(var G=280;G<288;++G)ie[G]=8;var bs=new J(32);for(var G=0;G<32;++G)bs[G]=5;var Zi=Yn(ie,9,1),Xi=Yn(bs,5,1),je=function(n){for(var a=n[0],t=1;t<n.length;++t)n[t]>a&&(a=n[t]);return a},on=function(n,a,t){var s=a/8|0;return(n[s]|n[s+1]<<8)>>(a&7)&t},Ge=function(n,a){var t=a/8|0;return(n[t]|n[t+1]<<8|n[t+2]<<16)>>(a&7)},nr=function(n){return(n+7)/8|0},ga=function(n,a,t){(a==null||a<0)&&(a=0),(t==null||t>n.length)&&(t=n.length);var s=new(n.BYTES_PER_ELEMENT==2?yn:n.BYTES_PER_ELEMENT==4?us:J)(t-a);return s.set(n.subarray(a,t)),s},er=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],rn=function(n,a,t){var s=new Error(a||er[n]);if(s.code=n,Error.captureStackTrace&&Error.captureStackTrace(s,rn),!t)throw s;return s},ar=function(n,a,t){var s=n.length;if(!s||t&&t.f&&!t.l)return a||new J(0);var o=!a||t,l=!t||t.i;t||(t={}),a||(a=new J(s*3));var c=function(Ka){var Ja=a.length;if(Ka>Ja){var Qa=new J(Math.max(Ja*2,Ka));Qa.set(a),a=Qa}},p=t.f||0,u=t.p||0,d=t.b||0,v=t.l,m=t.d,g=t.m,_=t.n,b=s*8;do{if(!v){p=on(n,u,1);var L=on(n,u+1,3);if(u+=3,L)if(L==1)v=Zi,m=Xi,g=9,_=5;else if(L==2){var T=on(n,u,31)+257,P=on(n,u+10,15)+4,x=T+on(n,u+5,31)+1;u+=14;for(var D=new J(x),A=new J(19),I=0;I<P;++I)A[Ki[I]]=on(n,u+I*3,7);u+=P*3;for(var B=je(A),dn=(1<<B)-1,_i=Yn(A,B,1),I=0;I<x;){var Ha=_i[on(n,u,dn)];u+=Ha&15;var f=Ha>>>4;if(f<16)D[I++]=f;else{var xn=0,he=0;for(f==16?(he=3+on(n,u,3),u+=2,xn=D[I-1]):f==17?(he=3+on(n,u,7),u+=3):f==18&&(he=11+on(n,u,127),u+=7);he--;)D[I++]=xn}}var Fa=D.subarray(0,T),mn=D.subarray(T);g=je(Fa),_=je(mn),v=Yn(Fa,g,1),m=Yn(mn,_,1)}else rn(1);else{var f=nr(u)+4,k=n[f-4]|n[f-3]<<8,E=f+k;if(E>s){l&&rn(0);break}o&&c(d+k),a.set(n.subarray(f,E),d),t.b=d+=k,t.p=u=E*8,t.f=p;continue}if(u>b){l&&rn(0);break}}o&&c(d+131072);for(var hi=(1<<g)-1,bi=(1<<_)-1,$e=u;;$e=u){var xn=v[Ge(n,u)&hi],Rn=xn>>>4;if(u+=xn&15,u>b){l&&rn(0);break}if(xn||rn(2),Rn<256)a[d++]=Rn;else if(Rn==256){$e=u,v=null;break}else{var Ua=Rn-254;if(Rn>264){var I=Rn-257,Jn=vs[I];Ua=on(n,u,(1<<Jn)-1)+hs[I],u+=Jn}var Me=m[Ge(n,u)&bi],ze=Me>>>4;Me||rn(3),u+=Me&15;var mn=Yi[ze];if(ze>3){var Jn=ms[ze];mn+=Ge(n,u)&(1<<Jn)-1,u+=Jn}if(u>b){l&&rn(0);break}o&&c(d+131072);for(var Wa=d+Ua;d<Wa;d+=4)a[d]=a[d-mn],a[d+1]=a[d+1-mn],a[d+2]=a[d+2-mn],a[d+3]=a[d+3-mn];d=Wa}}t.l=v,t.p=$e,t.b=d,t.f=p,v&&(p=1,t.m=g,t.d=m,t.n=_)}while(!p);return d==a.length?a:ga(a,0,d)},tr=new J(0),sr=function(n){((n[0]&15)!=8||n[0]>>>4>7||(n[0]<<8|n[1])%31)&&rn(6,"invalid zlib data"),n[1]&32&&rn(6,"invalid zlib data: preset dictionaries not supported")};function or(n,a){return ar((sr(n),n.subarray(2,-4)),a)}var nt=typeof TextEncoder<"u"&&new TextEncoder,Ye=typeof TextDecoder<"u"&&new TextDecoder,ir=0;try{Ye.decode(tr,{stream:!0}),ir=1}catch{}var rr=function(n){for(var a="",t=0;;){var s=n[t++],o=(s>127)+(s>223)+(s>239);if(t+o>n.length)return[a,ga(n,t-1)];o?o==3?(s=((s&15)<<18|(n[t++]&63)<<12|(n[t++]&63)<<6|n[t++]&63)-65536,a+=String.fromCharCode(55296|s>>10,56320|s&1023)):o&1?a+=String.fromCharCode((s&31)<<6|n[t++]&63):a+=String.fromCharCode((s&15)<<12|(n[t++]&63)<<6|n[t++]&63):a+=String.fromCharCode(s)}};function lr(n,a){if(a){for(var t=new J(n.length),s=0;s<n.length;++s)t[s]=n.charCodeAt(s);return t}if(nt)return nt.encode(n);for(var o=n.length,l=new J(n.length+(n.length>>1)),c=0,p=function(v){l[c++]=v},s=0;s<o;++s){if(c+5>l.length){var u=new J(c+8+(o-s<<1));u.set(l),l=u}var d=n.charCodeAt(s);d<128||a?p(d):d<2048?(p(192|d>>6),p(128|d&63)):d>55295&&d<57344?(d=65536+(d&1023<<10)|n.charCodeAt(++s)&1023,p(240|d>>18),p(128|d>>12&63),p(128|d>>6&63),p(128|d&63)):(p(224|d>>12),p(128|d>>6&63),p(128|d&63))}return ga(l,0,c)}function cr(n,a){if(a){for(var t="",s=0;s<n.length;s+=16384)t+=String.fromCharCode.apply(null,n.subarray(s,s+16384));return t}else{if(Ye)return Ye.decode(n);var o=rr(n),l=o[0],c=o[1];return c.length&&rn(8),l}}const O=({name:n="",color:a="currentColor"},{slots:t})=>{var s;return i("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${n}-icon`],viewBox:"0 0 1024 1024",fill:a,"aria-label":`${n} icon`},(s=t.default)==null?void 0:s.call(t))};O.displayName="IconBase";const fn=({size:n=48,stroke:a=4,wrapper:t=!0,height:s=2*n})=>{const o=i("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[i("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),i("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":a,"stroke-linecap":"round"},[i("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),i("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return t?i("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${s}px`},o):o};fn.displayName="LoadingIcon";const ks=(n,{slots:a})=>{var t;return((t=a.default)==null?void 0:t.call(a))||null},fs=()=>i(O,{name:"github"},()=>i("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));fs.displayName="GitHubIcon";const ys=()=>i(O,{name:"gitlab"},()=>i("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));ys.displayName="GitLabIcon";const Es=()=>i(O,{name:"gitee"},()=>i("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Es.displayName="GiteeIcon";const ws=()=>i(O,{name:"bitbucket"},()=>i("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));ws.displayName="BitbucketIcon";const Ls=()=>i(O,{name:"source"},()=>i("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Ls.displayName="SourceIcon";const _a=Array.isArray,pr=n=>typeof n=="function",dr=n=>typeof n=="string";var As=n=>/^(https?:)?\/\//.test(n),Zn=n=>Object.prototype.toString.call(n)==="[object Object]";const N=(n,a)=>{const t=a?a._instance:ee();return Zn(t==null?void 0:t.appContext.components)&&(n in t.appContext.components||Ya(n)in t.appContext.components||Ei(Ya(n))in t.appContext.components)};function ur(){const n=w(!1);return ee()&&R(()=>{n.value=!0}),n}function vr(n){return ur(),h(()=>!!n())}const mr=()=>vr(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),gr=()=>{const n=mr();return h(()=>n.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},Pn=n=>{const a=cn();return h(()=>n[a.value])},_r=n=>/\b(?:Android|iPhone)/i.test(n),hr=n=>/version\/([\w.]+) .*(mobile ?safari|safari)/i.test(n),br=n=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(a=>a.test(n)),ha=(n="")=>{if(n){if(typeof n=="number")return new Date(n);const a=Date.parse(n.toString());if(!Number.isNaN(a))return new Date(a)}return null},xe=(n,a)=>{let t=1;for(let s=0;s<n.length;s++)t+=n.charCodeAt(s),t+=t<<10,t^=t>>6;return t+=t<<3,t^=t>>11,t%a},En=n=>typeof n=="string",wn=(n,a)=>En(n)&&n.startsWith(a),On=(n,a)=>En(n)&&n.endsWith(a),Dn=Object.entries,X=Object.keys,et=(n,...a)=>{if(a.length===0)return n;const t=a.shift()||null;return t&&Dn(t).forEach(([s,o])=>{s==="__proto__"||s==="constructor"||(Zn(n[s])&&Zn(o)?et(n[s],o):_a(o)?n[s]=[...o]:Zn(o)?n[s]={...o}:n[s]=t[s])}),et(n,...a)},at=n=>Zn(n)&&En(n.name),ne=(n,a=!1)=>n?_a(n)?n.map(t=>En(t)?{name:t}:at(t)?t:null).filter(t=>t!==null):En(n)?[{name:n}]:at(n)?[n]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${a?"":"| false"} | undefined\`, but got`,n),[]):[],Ts=(n,a)=>{if(n){if(_a(n)&&n.every(En))return n;if(En(n))return[n];console.error(`Expect ${a||"value"} to be \`string[] | string | undefined\`, but got`,n)}return[]},Is=n=>Ts(n,"category"),Ps=n=>Ts(n,"tag"),Re=n=>wn(n,"/");let kr=class{constructor(){this.messageElements={};const a="message-container",t=document.getElementById(a);t?this.containerElement=t:(this.containerElement=document.createElement("div"),this.containerElement.id=a,document.body.appendChild(this.containerElement))}pop(a,t=2e3){const s=document.createElement("div"),o=Date.now();return s.className="message move-in",s.innerHTML=a,this.containerElement.appendChild(s),this.messageElements[o]=s,t>0&&setTimeout(()=>{this.close(o)},t),o}close(a){if(a){const t=this.messageElements[a];t.classList.remove("move-in"),t.classList.add("move-out"),t.addEventListener("animationend",()=>{t.remove(),delete this.messageElements[a]})}else X(this.messageElements).forEach(t=>this.close(Number(t)))}destroy(){document.body.removeChild(this.containerElement)}};const Ds=/#.*$/u,fr=n=>{const a=Ds.exec(n);return a?a[0]:""},tt=n=>decodeURI(n).replace(Ds,"").replace(/(index)?\.(md|html)$/,""),ba=(n,a)=>{if(a===void 0)return!1;const t=tt(n.path),s=tt(a),o=fr(a);return o?o===n.hash&&(!s||t===s):t===s},Ln=n=>{const a=atob(n);return cr(or(lr(a,!0)))},yr=n=>As(n)?n:`https://github.com/${n}`,xs=n=>!As(n)||/github\.com/.test(n)?"GitHub":/bitbucket\.org/.test(n)?"Bitbucket":/gitlab\.com/.test(n)?"GitLab":/gitee\.com/.test(n)?"Gitee":null,re=(n,...a)=>{const t=n.resolve(...a),s=t.matched[t.matched.length-1];if(!(s!=null&&s.redirect))return t;const{redirect:o}=s,l=pr(o)?o(t):o,c=dr(l)?{path:l}:l;return re(n,{hash:t.hash,query:t.query,params:t.params,...c})};function ln(n){return Zt()?(Xt(n),!0):!1}function K(n){return typeof n=="function"?n():Mn(n)}const An=typeof window<"u",kn=()=>{},Ze=Er();function Er(){var n;return An&&((n=window==null?void 0:window.navigator)==null?void 0:n.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent)}function ka(n,a){function t(...s){return new Promise((o,l)=>{Promise.resolve(n(()=>a.apply(this,s),{fn:a,thisArg:this,args:s})).then(o).catch(l)})}return t}const Rs=n=>n();function wr(n,a={}){let t,s,o=kn;const l=p=>{clearTimeout(p),o(),o=kn};return p=>{const u=K(n),d=K(a.maxWait);return t&&l(t),u<=0||d!==void 0&&d<=0?(s&&(l(s),s=null),Promise.resolve(p())):new Promise((v,m)=>{o=a.rejectOnCancel?m:v,d&&!s&&(s=setTimeout(()=>{t&&l(t),s=null,v(p())},d)),t=setTimeout(()=>{s&&l(s),s=null,v(p())},u)})}}function Lr(n,a=!0,t=!0,s=!1){let o=0,l,c=!0,p=kn,u;const d=()=>{l&&(clearTimeout(l),l=void 0,p(),p=kn)};return m=>{const g=K(n),_=Date.now()-o,b=()=>u=m();return d(),g<=0?(o=Date.now(),b()):(_>g&&(t||!c)?(o=Date.now(),b()):a&&(u=new Promise((L,f)=>{p=s?f:L,l=setTimeout(()=>{o=Date.now(),c=!0,L(b()),d()},Math.max(0,g-_))})),!t&&!l&&(l=setTimeout(()=>c=!0,g)),c=!1,u)}}function Ar(n=Rs){const a=w(!0);function t(){a.value=!1}function s(){a.value=!0}const o=(...l)=>{a.value&&n(...l)};return{isActive:Hn(a),pause:t,resume:s,eventFilter:o}}function Os(...n){if(n.length!==1)return Fn(...n);const a=n[0];return typeof a=="function"?Hn(wi(()=>({get:a,set:kn}))):w(a)}function Vs(n,a=200,t={}){return ka(wr(a,t),n)}function Tr(n,a=200,t=!1,s=!0,o=!1){return ka(Lr(a,t,s,o),n)}function fa(n,a=!0){ee()?R(n):a?n():Un(n)}function Ir(n){ee()&&ae(n)}function Pr(n,a=1e3,t={}){const{immediate:s=!0,immediateCallback:o=!1}=t;let l=null;const c=w(!1);function p(){l&&(clearInterval(l),l=null)}function u(){c.value=!1,p()}function d(){const v=K(a);v<=0||(c.value=!0,o&&n(),p(),l=setInterval(n,v))}if(s&&An&&d(),da(a)||typeof a=="function"){const v=S(a,()=>{c.value&&An&&d()});ln(v)}return ln(u),{isActive:c,pause:u,resume:d}}function Dr(n,a,t={}){const{immediate:s=!0}=t,o=w(!1);let l=null;function c(){l&&(clearTimeout(l),l=null)}function p(){o.value=!1,c()}function u(...d){c(),o.value=!0,l=setTimeout(()=>{o.value=!1,l=null,n(...d)},K(a))}return s&&(o.value=!0,An&&u()),ln(p),{isPending:Hn(o),start:u,stop:p}}function Xe(n=!1,a={}){const{truthyValue:t=!0,falsyValue:s=!1}=a,o=da(n),l=w(n);function c(p){if(arguments.length)return l.value=p,l.value;{const u=K(t);return l.value=l.value===u?K(s):u,l.value}}return o?c:[l,c]}var st=Object.getOwnPropertySymbols,xr=Object.prototype.hasOwnProperty,Rr=Object.prototype.propertyIsEnumerable,Or=(n,a)=>{var t={};for(var s in n)xr.call(n,s)&&a.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&st)for(var s of st(n))a.indexOf(s)<0&&Rr.call(n,s)&&(t[s]=n[s]);return t};function Vr(n,a,t={}){const s=t,{eventFilter:o=Rs}=s,l=Or(s,["eventFilter"]);return S(n,ka(o,a),l)}var Sr=Object.defineProperty,Cr=Object.defineProperties,$r=Object.getOwnPropertyDescriptors,Te=Object.getOwnPropertySymbols,Ss=Object.prototype.hasOwnProperty,Cs=Object.prototype.propertyIsEnumerable,ot=(n,a,t)=>a in n?Sr(n,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[a]=t,Mr=(n,a)=>{for(var t in a||(a={}))Ss.call(a,t)&&ot(n,t,a[t]);if(Te)for(var t of Te(a))Cs.call(a,t)&&ot(n,t,a[t]);return n},zr=(n,a)=>Cr(n,$r(a)),jr=(n,a)=>{var t={};for(var s in n)Ss.call(n,s)&&a.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&Te)for(var s of Te(n))a.indexOf(s)<0&&Cs.call(n,s)&&(t[s]=n[s]);return t};function Gr(n,a,t={}){const s=t,{eventFilter:o}=s,l=jr(s,["eventFilter"]),{eventFilter:c,pause:p,resume:u,isActive:d}=Ar(o);return{stop:Vr(n,a,zr(Mr({},l),{eventFilter:c})),pause:p,resume:u,isActive:d}}function nn(n){var a;const t=K(n);return(a=t==null?void 0:t.$el)!=null?a:t}const tn=An?window:void 0,ya=An?window.document:void 0,Br=An?window.navigator:void 0;function q(...n){let a,t,s,o;if(typeof n[0]=="string"||Array.isArray(n[0])?([t,s,o]=n,a=tn):[a,t,s,o]=n,!a)return kn;Array.isArray(t)||(t=[t]),Array.isArray(s)||(s=[s]);const l=[],c=()=>{l.forEach(v=>v()),l.length=0},p=(v,m,g,_)=>(v.addEventListener(m,g,_),()=>v.removeEventListener(m,g,_)),u=S(()=>[nn(a),K(o)],([v,m])=>{c(),v&&l.push(...t.flatMap(g=>s.map(_=>p(v,g,_,m))))},{immediate:!0,flush:"post"}),d=()=>{u(),c()};return ln(d),d}let it=!1;function qr(n,a,t={}){const{window:s=tn,ignore:o=[],capture:l=!0,detectIframe:c=!1}=t;if(!s)return;Ze&&!it&&(it=!0,Array.from(s.document.body.children).forEach(g=>g.addEventListener("click",kn)));let p=!0;const u=g=>o.some(_=>{if(typeof _=="string")return Array.from(s.document.querySelectorAll(_)).some(b=>b===g.target||g.composedPath().includes(b));{const b=nn(_);return b&&(g.target===b||g.composedPath().includes(b))}}),v=[q(s,"click",g=>{const _=nn(n);if(!(!_||_===g.target||g.composedPath().includes(_))){if(g.detail===0&&(p=!u(g)),!p){p=!0;return}a(g)}},{passive:!0,capture:l}),q(s,"pointerdown",g=>{const _=nn(n);_&&(p=!g.composedPath().includes(_)&&!u(g))},{passive:!0}),c&&q(s,"blur",g=>{var _;const b=nn(n);((_=s.document.activeElement)==null?void 0:_.tagName)==="IFRAME"&&!(b!=null&&b.contains(s.document.activeElement))&&a(g)})].filter(Boolean);return()=>v.forEach(g=>g())}function Nr(){const n=w(!1);return ee()&&R(()=>{n.value=!0}),n}function le(n){const a=Nr();return h(()=>(a.value,Boolean(n())))}function Hr(n,a={}){const{immediate:t=!0,window:s=tn}=a,o=w(!1);let l=0,c=null;function p(v){if(!o.value||!s)return;const m=v-l;n({delta:m,timestamp:v}),l=v,c=s.requestAnimationFrame(p)}function u(){!o.value&&s&&(o.value=!0,c=s.requestAnimationFrame(p))}function d(){o.value=!1,c!=null&&s&&(s.cancelAnimationFrame(c),c=null)}return t&&u(),ln(d),{isActive:Hn(o),pause:d,resume:u}}function $s(n,a={}){const{window:t=tn}=a,s=le(()=>t&&"matchMedia"in t&&typeof t.matchMedia=="function");let o;const l=w(!1),c=()=>{o&&("removeEventListener"in o?o.removeEventListener("change",p):o.removeListener(p))},p=()=>{s.value&&(c(),o=t.matchMedia(Os(n).value),l.value=!!(o!=null&&o.matches),o&&("addEventListener"in o?o.addEventListener("change",p):o.addListener(p)))};return Ai(p),ln(()=>c()),l}function Fr(n={}){const{navigator:a=Br,read:t=!1,source:s,copiedDuring:o=1500,legacy:l=!1}=n,c=["copy","cut"],p=le(()=>a&&"clipboard"in a),u=h(()=>p.value||l),d=w(""),v=w(!1),m=Dr(()=>v.value=!1,o);function g(){p.value?a.clipboard.readText().then(f=>{d.value=f}):d.value=L()}if(u.value&&t)for(const f of c)q(f,g);async function _(f=K(s)){u.value&&f!=null&&(p.value?await a.clipboard.writeText(f):b(f),d.value=f,v.value=!0,m.start())}function b(f){const k=document.createElement("textarea");k.value=f??"",k.style.position="absolute",k.style.opacity="0",document.body.appendChild(k),k.select(),document.execCommand("copy"),k.remove()}function L(){var f,k,E;return(E=(k=(f=document==null?void 0:document.getSelection)==null?void 0:f.call(document))==null?void 0:k.toString())!=null?E:""}return{isSupported:u,text:d,copied:v,copy:_}}const be=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},ke="__vueuse_ssr_handlers__",Ur=Wr();function Wr(){return ke in be||(be[ke]=be[ke]||{}),be[ke]}function Kr(n,a){return Ur[n]||a}function Jr(n){return n==null?"any":n instanceof Set?"set":n instanceof Map?"map":n instanceof Date?"date":typeof n=="boolean"?"boolean":typeof n=="string"?"string":typeof n=="object"?"object":Number.isNaN(n)?"any":"number"}var Qr=Object.defineProperty,rt=Object.getOwnPropertySymbols,Yr=Object.prototype.hasOwnProperty,Zr=Object.prototype.propertyIsEnumerable,lt=(n,a,t)=>a in n?Qr(n,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[a]=t,ct=(n,a)=>{for(var t in a||(a={}))Yr.call(a,t)&&lt(n,t,a[t]);if(rt)for(var t of rt(a))Zr.call(a,t)&&lt(n,t,a[t]);return n};const Xr={boolean:{read:n=>n==="true",write:n=>String(n)},object:{read:n=>JSON.parse(n),write:n=>JSON.stringify(n)},number:{read:n=>Number.parseFloat(n),write:n=>String(n)},any:{read:n=>n,write:n=>String(n)},string:{read:n=>n,write:n=>String(n)},map:{read:n=>new Map(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n.entries()))},set:{read:n=>new Set(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n))},date:{read:n=>new Date(n),write:n=>n.toISOString()}},pt="vueuse-storage";function Wn(n,a,t,s={}){var o;const{flush:l="pre",deep:c=!0,listenToStorageChanges:p=!0,writeDefaults:u=!0,mergeDefaults:d=!1,shallow:v,window:m=tn,eventFilter:g,onError:_=I=>{console.error(I)}}=s,b=(v?Li:w)(a);if(!t)try{t=Kr("getDefaultStorage",()=>{var I;return(I=tn)==null?void 0:I.localStorage})()}catch(I){_(I)}if(!t)return b;const L=K(a),f=Jr(L),k=(o=s.serializer)!=null?o:Xr[f],{pause:E,resume:T}=Gr(b,()=>P(b.value),{flush:l,deep:c,eventFilter:g});return m&&p&&(q(m,"storage",A),q(m,pt,D)),A(),b;function P(I){try{if(I==null)t.removeItem(n);else{const B=k.write(I),dn=t.getItem(n);dn!==B&&(t.setItem(n,B),m&&m.dispatchEvent(new CustomEvent(pt,{detail:{key:n,oldValue:dn,newValue:B,storageArea:t}})))}}catch(B){_(B)}}function x(I){const B=I?I.newValue:t.getItem(n);if(B==null)return u&&L!==null&&t.setItem(n,k.write(L)),L;if(!I&&d){const dn=k.read(B);return typeof d=="function"?d(dn,L):f==="object"&&!Array.isArray(dn)?ct(ct({},L),dn):dn}else return typeof B!="string"?B:k.read(B)}function D(I){A(I.detail)}function A(I){if(!(I&&I.storageArea!==t)){if(I&&I.key==null){b.value=L;return}if(!(I&&I.key!==n)){E();try{b.value=x(I)}catch(B){_(B)}finally{I?Un(T):T()}}}}}function nl(n){return $s("(prefers-color-scheme: dark)",n)}var dt=Object.getOwnPropertySymbols,el=Object.prototype.hasOwnProperty,al=Object.prototype.propertyIsEnumerable,tl=(n,a)=>{var t={};for(var s in n)el.call(n,s)&&a.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&dt)for(var s of dt(n))a.indexOf(s)<0&&al.call(n,s)&&(t[s]=n[s]);return t};function Ms(n,a,t={}){const s=t,{window:o=tn}=s,l=tl(s,["window"]);let c;const p=le(()=>o&&"MutationObserver"in o),u=()=>{c&&(c.disconnect(),c=void 0)},d=S(()=>nn(n),m=>{u(),p.value&&o&&m&&(c=new MutationObserver(a),c.observe(m,l))},{immediate:!0}),v=()=>{u(),d()};return ln(v),{isSupported:p,stop:v}}var ut=Object.getOwnPropertySymbols,sl=Object.prototype.hasOwnProperty,ol=Object.prototype.propertyIsEnumerable,il=(n,a)=>{var t={};for(var s in n)sl.call(n,s)&&a.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&ut)for(var s of ut(n))a.indexOf(s)<0&&ol.call(n,s)&&(t[s]=n[s]);return t};function rl(n,a,t={}){const s=t,{window:o=tn}=s,l=il(s,["window"]);let c;const p=le(()=>o&&"ResizeObserver"in o),u=()=>{c&&(c.disconnect(),c=void 0)},d=h(()=>Array.isArray(n)?n.map(g=>nn(g)):[nn(n)]),v=S(d,g=>{if(u(),p.value&&o){c=new ResizeObserver(a);for(const _ of g)_&&c.observe(_,l)}},{immediate:!0,flush:"post",deep:!0}),m=()=>{u(),v()};return ln(m),{isSupported:p,stop:m}}function ll(n,a={width:0,height:0},t={}){const{window:s=tn,box:o="content-box"}=t,l=h(()=>{var u,d;return(d=(u=nn(n))==null?void 0:u.namespaceURI)==null?void 0:d.includes("svg")}),c=w(a.width),p=w(a.height);return rl(n,([u])=>{const d=o==="border-box"?u.borderBoxSize:o==="content-box"?u.contentBoxSize:u.devicePixelContentBoxSize;if(s&&l.value){const v=nn(n);if(v){const m=s.getComputedStyle(v);c.value=parseFloat(m.width),p.value=parseFloat(m.height)}}else if(d){const v=Array.isArray(d)?d:[d];c.value=v.reduce((m,{inlineSize:g})=>m+g,0),p.value=v.reduce((m,{blockSize:g})=>m+g,0)}else c.value=u.contentRect.width,p.value=u.contentRect.height},t),S(()=>nn(n),u=>{c.value=u?a.width:0,p.value=u?a.height:0}),{width:c,height:p}}const vt=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function Ea(n,a={}){const{document:t=ya,autoExit:s=!1}=a,o=h(()=>{var k;return(k=nn(n))!=null?k:t==null?void 0:t.querySelector("html")}),l=w(!1),c=h(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(k=>t&&k in t||o.value&&k in o.value)),p=h(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(k=>t&&k in t||o.value&&k in o.value)),u=h(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(k=>t&&k in t||o.value&&k in o.value)),d=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(k=>t&&k in t),v=le(()=>o.value&&t&&c.value!==void 0&&p.value!==void 0&&u.value!==void 0),m=()=>d?(t==null?void 0:t[d])===o.value:!1,g=()=>{if(u.value){if(t&&t[u.value]!=null)return t[u.value];{const k=o.value;if((k==null?void 0:k[u.value])!=null)return Boolean(k[u.value])}}return!1};async function _(){if(v.value){if(p.value)if((t==null?void 0:t[p.value])!=null)await t[p.value]();else{const k=o.value;(k==null?void 0:k[p.value])!=null&&await k[p.value]()}l.value=!1}}async function b(){if(!v.value)return;g()&&await _();const k=o.value;c.value&&(k==null?void 0:k[c.value])!=null&&(await k[c.value](),l.value=!0)}async function L(){await(l.value?_():b())}const f=()=>{const k=g();(!k||k&&m())&&(l.value=k)};return q(t,vt,f,!1),q(()=>nn(o),vt,f,!1),s&&ln(_),{isSupported:v,isFullscreen:l,enter:b,exit:_,toggle:L}}var cl=Object.defineProperty,mt=Object.getOwnPropertySymbols,pl=Object.prototype.hasOwnProperty,dl=Object.prototype.propertyIsEnumerable,gt=(n,a,t)=>a in n?cl(n,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[a]=t,ul=(n,a)=>{for(var t in a||(a={}))pl.call(a,t)&&gt(n,t,a[t]);if(mt)for(var t of mt(a))dl.call(a,t)&&gt(n,t,a[t]);return n};function m0(n={}){const{controls:a=!1,interval:t="requestAnimationFrame"}=n,s=w(new Date),o=()=>s.value=new Date,l=t==="requestAnimationFrame"?Hr(o,{immediate:!0}):Pr(o,t,{immediate:!0});return a?ul({now:s},l):s}function vl(n,a=kn,t={}){const{immediate:s=!0,manual:o=!1,type:l="text/javascript",async:c=!0,crossOrigin:p,referrerPolicy:u,noModule:d,defer:v,document:m=ya,attrs:g={}}=t,_=w(null);let b=null;const L=E=>new Promise((T,P)=>{const x=I=>(_.value=I,T(I),I);if(!m){T(!1);return}let D=!1,A=m.querySelector(`script[src="${K(n)}"]`);A?A.hasAttribute("data-loaded")&&x(A):(A=m.createElement("script"),A.type=l,A.async=c,A.src=K(n),v&&(A.defer=v),p&&(A.crossOrigin=p),d&&(A.noModule=d),u&&(A.referrerPolicy=u),Object.entries(g).forEach(([I,B])=>A==null?void 0:A.setAttribute(I,B)),D=!0),A.addEventListener("error",I=>P(I)),A.addEventListener("abort",I=>P(I)),A.addEventListener("load",()=>{A.setAttribute("data-loaded","true"),a(A),x(A)}),D&&(A=m.head.appendChild(A)),E||x(A)}),f=(E=!0)=>(b||(b=L(E)),b),k=()=>{if(!m)return;b=null,_.value&&(_.value=null);const E=m.querySelector(`script[src="${K(n)}"]`);E&&m.head.removeChild(E)};return s&&!o&&fa(f),o||Ir(k),{scriptTag:_,load:f,unload:k}}function zs(n){const a=window.getComputedStyle(n);if(a.overflowX==="scroll"||a.overflowY==="scroll"||a.overflowX==="auto"&&n.clientHeight<n.scrollHeight||a.overflowY==="auto"&&n.clientWidth<n.scrollWidth)return!0;{const t=n.parentNode;return!t||t.tagName==="BODY"?!1:zs(t)}}function ml(n){const a=n||window.event,t=a.target;return zs(t)?!1:a.touches.length>1?!0:(a.preventDefault&&a.preventDefault(),!1)}function js(n,a=!1){const t=w(a);let s=null,o;S(Os(n),p=>{if(p){const u=p;o=u.style.overflow,t.value&&(u.style.overflow="hidden")}},{immediate:!0});const l=()=>{const p=K(n);!p||t.value||(Ze&&(s=q(p,"touchmove",u=>{ml(u)},{passive:!1})),p.style.overflow="hidden",t.value=!0)},c=()=>{const p=K(n);!p||!t.value||(Ze&&(s==null||s()),p.style.overflow=o,t.value=!1)};return ln(c),h({get(){return t.value},set(p){p?l():c()}})}function Gs(n,a,t={}){const{window:s=tn}=t;return Wn(n,a,s==null?void 0:s.sessionStorage,t)}let gl=0;function _l(n,a={}){const t=w(!1),{document:s=ya,immediate:o=!0,manual:l=!1,id:c=`vueuse_styletag_${++gl}`}=a,p=w(n);let u=()=>{};const d=()=>{if(!s)return;const m=s.getElementById(c)||s.createElement("style");m.isConnected||(m.type="text/css",m.id=c,a.media&&(m.media=a.media),s.head.appendChild(m)),!t.value&&(u=S(p,g=>{m.textContent=g},{immediate:!0}),t.value=!0)},v=()=>{!s||!t.value||(u(),s.head.removeChild(s.getElementById(c)),t.value=!1)};return o&&!l&&fa(d),l||ln(v),{id:c,css:p,unload:v,load:d,isLoaded:Hn(t)}}function hl({window:n=tn}={}){if(!n)return{x:w(0),y:w(0)};const a=w(n.scrollX),t=w(n.scrollY);return q(n,"scroll",()=>{a.value=n.scrollX,t.value=n.scrollY},{capture:!1,passive:!0}),{x:a,y:t}}function bl(n={}){const{window:a=tn,initialWidth:t=1/0,initialHeight:s=1/0,listenOrientation:o=!0,includeScrollbar:l=!0}=n,c=w(t),p=w(s),u=()=>{a&&(l?(c.value=a.innerWidth,p.value=a.innerHeight):(c.value=a.document.documentElement.clientWidth,p.value=a.document.documentElement.clientHeight))};if(u(),fa(u),q("resize",u,{passive:!0}),o){const d=$s("(orientation: portrait)");S(d,()=>u())}return{width:c,height:p}}var kl=y({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(n){const a=h(()=>{const s=["font-icon icon"],o=`iconfont icon-${n.icon}`;return s.push(o),s}),t=h(()=>{const s={};return n.color&&(s.color=n.color),n.size&&(s["font-size"]=Number.isNaN(Number(n.size))?n.size:`${n.size}px`),X(s).length?s:null});return()=>n.icon?i("span",{key:n.icon,class:a.value,style:t.value}):null}});const bn=n=>Tn(n)?n:F(n);var fl=y({name:"AudioPlayer",props:{options:{type:Object,default:()=>({})},src:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:""},poster:{type:String,default:""},width:{type:[String,Number],default:"100%"},loop:Boolean},setup(n){let a=null;const t=w(),s=h(()=>({hideYouTubeDOMError:!0,...n.options}));return R(async()=>{const{default:o}=await e(()=>import("./plyr.min-65d8b78a.js"),[]);a=new o(t.value,s.value)}),ns(()=>{try{a==null||a.destroy()}catch{}}),()=>i("div",{class:"audio-player-wrapper",style:{width:n.width}},[i("a",{class:"audio-print",href:bn(n.src),innerHTML:n.title||"An audio"}),n.poster?i("img",{class:"audio-poster",src:bn(n.poster),"no-view":""}):null,i("div",{class:"audio-info"},[n.title?i("div",{class:"audio-title",innerHTML:n.title}):null,i("audio",{ref:t,crossorigin:"anonymous",preload:"metadata",controls:"",...n.loop?{loop:""}:{}},i("source",{src:bn(n.src),type:n.type}))])])}});const Bs=({type:n="info",text:a="",vertical:t="top",color:s},{slots:o})=>{var l;return i("span",{class:["badge",n,{diy:s}],style:{verticalAlign:t,...s?{backgroundColor:s}:{}}},a||((l=o.default)==null?void 0:l.call(o)))};Bs.displayName="Badge";const qs="accelerometer; autoplay; clipboard-write; encrypted-media; fullscreen; gyroscope; picture-in-picture",_t=n=>U(n)?n:`${n}px`,ce=(n,a=0)=>{const t=w(),s=h(()=>_t(Mn(n.width)||"100%")),o=w("auto"),l=u=>{if(U(u)){const[d,v]=u.split(":"),m=Number(d)/Number(v);if(!Number.isNaN(m))return m}return typeof u=="number"?u:16/9},c=u=>{const d=Mn(n.height),v=l(Mn(n.ratio));return d?_t(d):`${Number(u)/v+Mn(a)}px`},p=()=>{t.value&&(o.value=c(t.value.clientWidth))};return R(()=>{p(),da(a)&&S(a,()=>p()),q("orientationchange",()=>p()),q("resize",()=>p())}),{el:t,width:s,height:o}},ht="https://player.bilibili.com/player.html";var yl=y({name:"BiliBili",props:{bvid:{type:String,default:""},aid:{type:String,default:""},cid:{type:String,default:""},title:{type:String,default:"A BiliBili video"},page:{type:[String,Number],default:1},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},time:{type:[String,Number],default:0},autoplay:Boolean},setup(n){const{el:a,width:t,height:s}=ce(n),o=h(()=>{const{aid:l,bvid:c,cid:p,autoplay:u,time:d,page:v}=n;return l&&p?`${ht}?aid=${l}&cid=${p}&t=${d}&autoplay=${u?1:0}&page=${v}`:c?`${ht}?bvid=${c}&t=${d}&autoplay=${u?1:0}`:null});return()=>o.value?[i("div",{class:"bili-desc"},i("a",{class:"sr-only",href:o.value},n.title)),i("iframe",{ref:a,src:o.value,title:n.title,class:"bili-iframe",allow:qs,style:{width:t.value,height:s.value}})]:null}});var El=y({name:"CodePen",props:{link:{type:String,default:""},user:{type:String,default:""},slugHash:{type:String,default:""},title:{type:String,default:""},height:{type:[String,Number],default:380},theme:{type:String,default:"default"},defaultTab:{type:Array,default:()=>["result"]},status:{type:String,default:"preview"}},setup(n){const a=()=>{const o=/(?:^(?:https?:)?\/\/codepen.io\/|^\/|^)(.*?)\/(?:pen|embed)\/(.*?)\/?$/.exec(n.link);return{user:o==null?void 0:o[1],slugHash:o==null?void 0:o[2]}},t=h(()=>a().user||n.user),s=h(()=>a().slugHash||n.slugHash);return vl("https://static.codepen.io/assets/embed/ei.js"),R(()=>{if(n.status!=="clicktorun"){const o=setInterval(()=>{window.__CPEmbed&&(window.__CPEmbed(`.codepen-${s.value}`),clearInterval(o))},500)}}),()=>i("div",{class:["codepen-wrapper",`codepen-${s.value}`],"data-height":n.height,"data-theme-id":n.theme,"data-user":t.value,"data-slug-hash":s.value,"data-default-tab":n.defaultTab.join(","),"data-pen-title":n.title,"data-preview":n.status==="preview",user:n.user},[n.status==="clicktorun"?i("button",{type:"button",class:"codepen-button",onClick:()=>{window.__CPEmbed(`.codepen-${s.value}`)}},"Run Code"):null,i("span",["See the Pen ",i("a",{href:n.link},[n.title])," by ",i("a",{href:`https://codepen.io/${t.value}`},[t.value])," on ",i("a",{href:"https://codepen.io"},["CodePen"]),"."])])}});const Be=n=>{console.error("[PDF]: "+n)},wl=n=>{for(;n.firstChild;)n.removeChild(n.firstChild)},Ll=n=>n==="string"?document.querySelector(n):n instanceof HTMLElement?n:document.body,Al=n=>{let a="";return n&&(a+=Dn(n).map(([t,s])=>t==="noToolbar"?`toolbar=${s?0:1}`:`${encodeURIComponent(t)}=${encodeURIComponent(s)}`).join("&"),a&&(a=`#${a.slice(0,a.length-1)}`)),a},Tl=(n,a,t,s,o)=>{wl(a);let l=t;n==="pdfjs"&&(l=`${`${es(F(null))}web/viewer.html`}?file=${encodeURIComponent(t)}${Al(s)}`);const c=n==="pdfjs"||n==="iframe"?"iframe":"embed",p=document.createElement(c);return p.className="pdf-viewer",p.type="application/pdf",p.title=o,p.src=l,p instanceof HTMLIFrameElement&&(p.allow="fullscreen"),a.classList.add("pdf-viewer-container"),a.appendChild(p),a.getElementsByTagName(c)[0]},Il=(n,a=null,{title:t,hint:s,options:o={}})=>{var l,c;if(typeof window>"u"||!((l=window==null?void 0:window.navigator)!=null&&l.userAgent))return null;const{navigator:p}=window,{userAgent:u}=p,d=window.Promise!==void 0,v=br(u)||_r(u),m=!v&&hr(u),g=!v&&/firefox/i.test(u)&&u.split("rv:").length>1?parseInt(u.split("rv:")[1].split(".")[0],10)>18:!1,_=!v&&(d||g);if(!U(n))return Be("URL is not valid"),null;const b=Ll(a);if(!b)return Be("Target element cannot be determined"),null;const L=t||((c=/\/([^/]+).pdf/.exec(n))==null?void 0:c[1])||"PDF Viewer";return _||!v?Tl(m?"iframe":"embed",b,n,o,L):(b.innerHTML=s.replace(/\[url\]/g,n),Be("This browser does not support embedded PDFs"),null)};var Pl=y({name:"PDF",props:{url:{type:String,required:!0},title:{type:String,default:""},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},page:{type:[String,Number],default:1},noToolbar:Boolean,zoom:{type:[String,Number],default:100}},setup(n){const{el:a,width:t,height:s}=ce(n),o=Pn({"/en/":{hint:"<p>This browser does not support embedding PDFs. Please download the PDF to view it: <a href='[url]' target='_blank'>Download PDF</a></p>"},"/":{hint:"<p>此浏览器不支持嵌入式 PDF。请下载 PDF 查看：<a href='[url]' target='_blank'>下载 PDF</a></p>"}});return R(()=>{Il(bn(n.url),a.value,{title:n.title,hint:o.value.hint,options:{page:n.page,noToolbar:n.noToolbar,zoom:n.zoom}})}),()=>i("div",{class:"pdf-preview",ref:a,style:{width:t.value,height:s.value}})}});var Dl=y({name:"Replit",props:{link:{type:String,default:""},user:{type:String,default:""},repl:{type:String,default:""},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},theme:{type:String,default:"light"},file:{type:String,default:()=>null},plain:Boolean,text:{type:String,default:"Open on Replit"}},setup(n){const{el:a,width:t,height:s}=ce(n),o=h(()=>{var l;if(n.link){const c=new URL(n.link);return n.plain?c.searchParams.delete("embed"):c.searchParams.set("embed","true"),c.toString()}return n.user&&n.repl?`https://replit.com/@${n.user}/${n.repl}${n.plain?"":"?embed=true"}${(l=n.file)!=null&&l.length?`#${n.file}`:""}`:null});return()=>o.value?i("div",{class:"replit-wrapper"},n.plain?i("button",{type:"button",class:"replit-button",onClick:()=>{window.open(o.value,"_blank")}},n.text):i("iframe",{ref:a,class:"replit-iframe",src:o.value,style:{width:t.value,height:s.value}})):null}});const xl=500,Rl=20,Ol=300,Vl="https://stackblitz.com",bt=["angular-cli","create-react-app","html","javascript","node","polymer","typescript","vue"],Sl=["project","search","ports","settings"],Cl=["light","dark"],$l=["editor","preview"],kt={clickToLoad:n=>Vn("ctl",n),devToolsHeight:n=>ft("devtoolsheight",n),forceEmbedLayout:n=>Vn("embed",n),hideDevTools:n=>Vn("hidedevtools",n),hideExplorer:n=>Vn("hideExplorer",n),hideNavigation:n=>Vn("hideNavigation",n),openFile:n=>yt("file",n),showSidebar:n=>Ml("showSidebar",n),sidebarView:n=>qe("sidebarView",n,Sl),startScript:n=>yt("startScript",n),terminalHeight:n=>ft("terminalHeight",n),theme:n=>qe("theme",n,Cl),view:n=>qe("view",n,$l),zenMode:n=>Vn("zenMode",n)};function Ns(n={}){const a=Object.entries(n).map(([t,s])=>s!=null&&kt.hasOwnProperty(t)?kt[t](s):"").filter(Boolean);return a.length?`?${a.join("&")}`:""}function Vn(n,a){return a===!0?`${n}=1`:""}function Ml(n,a){return typeof a=="boolean"?`${n}=${a?"1":"0"}`:""}function ft(n,a){if(typeof a=="number"&&!Number.isNaN(a)){const t=Math.min(100,Math.max(0,a));return`${n}=${encodeURIComponent(Math.round(t))}`}return""}function qe(n,a="",t=[]){return t.includes(a)?`${n}=${encodeURIComponent(a)}`:""}function yt(n,a){return(Array.isArray(a)?a:[a]).filter(s=>typeof s=="string"&&s.trim()!=="").map(s=>`${n}=${encodeURIComponent(s)}`).join("&")}function Hs(){return Math.random().toString(36).slice(2,6)+Math.random().toString(36).slice(2,6)}function wa(n,a){return`${Fs(a)}${n}${Ns(a)}`}function La(n,a){const t={forceEmbedLayout:!0};return a&&typeof a=="object"&&Object.assign(t,a),`${Fs(t)}${n}${Ns(t)}`}function Fs(n={}){return(typeof n.origin=="string"?n.origin:Vl).replace(/\/$/,"")}function Aa(n,a,t){if(!a||!n||!n.parentNode)throw new Error("Invalid Element");n.id&&(a.id=n.id),n.className&&(a.className=n.className),zl(a,t),n.replaceWith(a)}function Ta(n){if(typeof n=="string"){const a=document.getElementById(n);if(!a)throw new Error(`Could not find element with id '${n}'`);return a}else if(n instanceof HTMLElement)return n;throw new Error(`Invalid element: ${n}`)}function Ia(n){return n&&n.newWindow===!1?"_self":"_blank"}function zl(n,a={}){const t=Object.hasOwnProperty.call(a,"height")?`${a.height}`:`${Ol}`,s=Object.hasOwnProperty.call(a,"width")?`${a.width}`:void 0;n.setAttribute("height",t),s?n.setAttribute("width",s):n.setAttribute("style","width:100%;")}class jl{constructor(a){this.pending={},this.port=a,this.port.onmessage=this.messageListener.bind(this)}request({type:a,payload:t}){return new Promise((s,o)=>{const l=Hs();this.pending[l]={resolve:s,reject:o},this.port.postMessage({type:a,payload:{...t,__reqid:l}})})}messageListener(a){var p;if(typeof((p=a.data.payload)==null?void 0:p.__reqid)!="string")return;const{type:t,payload:s}=a.data,{__reqid:o,__success:l,__error:c}=s;this.pending[o]&&(l?this.pending[o].resolve(this.cleanResult(s)):this.pending[o].reject(c?`${t}: ${c}`:t),delete this.pending[o])}cleanResult(a){const t={...a};return delete t.__reqid,delete t.__success,delete t.__error,Object.keys(t).length?t:null}}class Gl{constructor(a,t){this.editor={openFile:s=>this._rdc.request({type:"SDK_OPEN_FILE",payload:{path:s}}),setCurrentFile:s=>this._rdc.request({type:"SDK_SET_CURRENT_FILE",payload:{path:s}}),setTheme:s=>this._rdc.request({type:"SDK_SET_UI_THEME",payload:{theme:s}}),setView:s=>this._rdc.request({type:"SDK_SET_UI_VIEW",payload:{view:s}}),showSidebar:(s=!0)=>this._rdc.request({type:"SDK_TOGGLE_SIDEBAR",payload:{visible:s}})},this.preview={origin:"",getUrl:()=>this._rdc.request({type:"SDK_GET_PREVIEW_URL",payload:{}}).then(s=>(s==null?void 0:s.url)??null),setUrl:(s="/")=>{if(typeof s!="string"||!s.startsWith("/"))throw new Error(`Invalid argument: expected a path starting with '/', got '${s}'`);return this._rdc.request({type:"SDK_SET_PREVIEW_URL",payload:{path:s}})}},this._rdc=new jl(a),Object.defineProperty(this.preview,"origin",{value:typeof t.previewOrigin=="string"?t.previewOrigin:null,writable:!1})}applyFsDiff(a){const t=s=>s!==null&&typeof s=="object";if(!t(a)||!t(a.create))throw new Error("Invalid diff object: expected diff.create to be an object.");if(!Array.isArray(a.destroy))throw new Error("Invalid diff object: expected diff.destroy to be an array.");return this._rdc.request({type:"SDK_APPLY_FS_DIFF",payload:a})}getDependencies(){return this._rdc.request({type:"SDK_GET_DEPS_SNAPSHOT",payload:{}})}getFsSnapshot(){return this._rdc.request({type:"SDK_GET_FS_SNAPSHOT",payload:{}})}}const Le=[];class Bl{constructor(a){this.id=Hs(),this.element=a,this.pending=new Promise((t,s)=>{const o=({data:d,ports:v})=>{(d==null?void 0:d.action)==="SDK_INIT_SUCCESS"&&d.id===this.id&&(this.vm=new Gl(v[0],d.payload),t(this.vm),c())},l=()=>{var d;(d=this.element.contentWindow)==null||d.postMessage({action:"SDK_INIT",id:this.id},"*")};function c(){window.clearInterval(u),window.removeEventListener("message",o)}window.addEventListener("message",o),l();let p=0;const u=window.setInterval(()=>{if(this.vm){c();return}if(p>=Rl){c(),s("Timeout: Unable to establish a connection with the StackBlitz VM"),Le.forEach((d,v)=>{d.id===this.id&&Le.splice(v,1)});return}p++,l()},xl)}),Le.push(this)}}const ql=n=>{const a=n instanceof Element?"element":"id";return Le.find(t=>t[a]===n)??null};function Nl(n,a){const t=document.createElement("input");return t.type="hidden",t.name=n,t.value=a,t}function Hl(n){return n.replace(/\[/g,"%5B").replace(/\]/g,"%5D")}function Us({template:n,title:a,description:t,dependencies:s,files:o,settings:l}){if(!bt.includes(n)){const d=bt.map(v=>`'${v}'`).join(", ");console.warn(`Unsupported project.template: must be one of ${d}`)}const c=[],p=(d,v,m="")=>{c.push(Nl(d,typeof v=="string"?v:m))};p("project[title]",a),typeof t=="string"&&t.length>0&&p("project[description]",t),p("project[template]",n,"javascript"),s&&(n==="node"?console.warn("Invalid project.dependencies: dependencies must be provided as a 'package.json' file when using the 'node' template."):p("project[dependencies]",JSON.stringify(s))),l&&p("project[settings]",JSON.stringify(l)),Object.entries(o).forEach(([d,v])=>{p(`project[files][${Hl(d)}]`,v)});const u=document.createElement("form");return u.method="POST",u.setAttribute("style","display:none!important;"),u.append(...c),u}function Fl(n,a){const t=Us(n);return t.action=La("/run",a),t.id="sb_run",`<!doctype html>
<html>
<head><title></title></head>
<body>
  ${t.outerHTML}
  <script>document.getElementById('${t.id}').submit();<\/script>
</body>
</html>`}function Ul(n,a){const t=Us(n);t.action=wa("/run",a),t.target=Ia(a),document.body.appendChild(t),t.submit(),document.body.removeChild(t)}function Oe(n){return n!=null&&n.contentWindow?(ql(n)??new Bl(n)).pending:Promise.reject("Provided element is not an iframe.")}function Wl(n,a){Ul(n,a)}function Kl(n,a){const t=wa(`/edit/${n}`,a),s=Ia(a);window.open(t,s)}function Jl(n,a){const t=wa(`/github/${n}`,a),s=Ia(a);window.open(t,s)}function Ql(n,a,t){var c;const s=Ta(n),o=Fl(a,t),l=document.createElement("iframe");return Aa(s,l,t),(c=l.contentDocument)==null||c.write(o),Oe(l)}function Yl(n,a,t){const s=Ta(n),o=document.createElement("iframe");return o.src=La(`/edit/${a}`,t),Aa(s,o,t),Oe(o)}function Zl(n,a,t){const s=Ta(n),o=document.createElement("iframe");return o.src=La(`/github/${a}`,t),Aa(s,o,t),Oe(o)}const Xl={connect:Oe,embedGithubProject:Zl,embedProject:Ql,embedProjectId:Yl,openGithubProject:Jl,openProject:Wl,openProjectId:Kl};const Et=Xl;var nc=y({name:"StackBlitz",props:{id:{type:String,required:!0},type:{type:String,default:"project"},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},file:{type:[String,Array],default:""},initialPath:{type:String,default:""},embed:Boolean,load:Boolean,view:{type:String,default:"preview"},hideExplorer:Boolean,hideNavigation:Boolean,hideDevtools:Boolean,terminalHeight:{type:[String,Number],default:30},devToolsHeight:{type:[String,Number],default:30},text:{type:String,default:"Open in StackBlitz"},theme:{type:String,default:"dark"}},setup(n){const{el:a,width:t,height:s}=ce(n),o=h(()=>({openFile:n.file,view:n.view,theme:n.theme,clickToLoad:n.load,hideExplorer:n.hideExplorer,hideNavigation:n.hideNavigation,hideDevTools:n.hideDevtools,initialPath:n.initialPath}));return R(()=>{n.embed&&Et[n.type==="github"?"embedGithubProject":"embedProjectId"](a.value,n.id,o.value)}),()=>n.embed?i("div",{ref:a,class:"stackblitz-container",style:{width:t.value,height:s.value}}):i("div",{class:"stackblitz-container"},i("button",{type:"button",class:"stackblitz-button",onClick:()=>{Et[n.type==="github"?"openGithubProject":"openProjectId"](n.id,o.value)}},n.text))}});var ec=y({name:"VideoPlayer",props:{options:{type:Object,default:()=>({})},src:{type:String,required:!0},title:{type:String,default:"A video"},type:{type:String,default:""},tracks:{type:Array,default:()=>[]},poster:{type:String,default:""},width:{type:[String,Number],default:"100%"},loop:Boolean},setup(n){let a=null;const t=w(),s=h(()=>({hideYouTubeDOMError:!0,...n.options}));return R(async()=>{const{default:o}=await e(()=>import("./plyr.min-65d8b78a.js"),[]);a=new o(t.value,s.value)}),ns(()=>{try{a==null||a.destroy()}catch{}}),()=>i("div",{class:"video-player-wrapper",style:{width:n.width}},[i("a",{class:"sr-only",href:bn(n.src)},n.title),i("video",{ref:t,title:n.title,crossorigin:"anonymous",poster:bn(n.poster),preload:"metadata",controls:"",...n.loop?{loop:""}:{}},[n.tracks.map(o=>i("track",{...o,src:bn(o.src)})),i("source",{src:bn(n.src),type:n.type})])])}});var ac=y({name:"YouTube",props:{id:{type:String,default:""},title:{type:String,default:"A YouTube video"},width:{type:[String,Number],default:"100%"},height:{type:[String,Number],default:void 0},ratio:{type:[String,Number],default:16/9},autoplay:Boolean,loop:Boolean,showCc:Boolean,showAnnotations:Boolean,start:{type:[String,Number],default:void 0},end:{type:[String,Number],default:void 0},defaultCcLang:{type:String,default:""},uiLang:{type:String,default:""},listType:{type:String,default:""},list:{type:String,default:""},playlist:{type:String,default:""},disableControls:Boolean,disableFullscreen:Boolean,disableKeyboard:Boolean},setup(n){const a=se(),{el:t,width:s,height:o}=ce(n),l=h(()=>n.id?`${n.id}?`:n.listType==="playlist"&&n.list?`?listType=playlist&list=${wn(n.list,"PL")?n.list:`PL${n.list}`}&`:null),c=h(()=>{const u=new URLSearchParams;return n.autoplay&&u.set("autoplay","1"),n.loop&&u.set("loop","1"),n.showCc&&u.set("cc_load_policy","1"),n.showAnnotations&&u.set("iv_load_policy","3"),n.start&&u.set("start",n.start.toString()),n.end&&u.set("end",n.end.toString()),u.set("hl",n.uiLang||a.value),u.set("cc_lang_pref",n.defaultCcLang||a.value),u.set("color","white"),n.disableControls&&u.set("controls","0"),n.disableFullscreen&&u.set("fs","0"),n.disableKeyboard&&u.set("disablekb","1"),n.playlist&&u.set("playlist",n.playlist),u.toString()}),p=h(()=>l.value?`https://www.youtube.com/embed/${l.value}${c.value}`:null);return()=>p.value?[i("div",{class:"youtube-desc"},i("a",{class:"sr-only",href:p.value},n.title)),i("iframe",{ref:t,src:p.value,title:n.title,class:"youtube-iframe",allow:qs,style:{width:s.value,height:o.value}})]:null}});const Ws=()=>i(O,{name:"back-to-top"},()=>[i("path",{d:"M512 843.2c-36.2 0-66.4-13.6-85.8-21.8-10.8-4.6-22.6 3.6-21.8 15.2l7 102c.4 6.2 7.6 9.4 12.6 5.6l29-22c3.6-2.8 9-1.8 11.4 2l41 64.2c3 4.8 10.2 4.8 13.2 0l41-64.2c2.4-3.8 7.8-4.8 11.4-2l29 22c5 3.8 12.2.6 12.6-5.6l7-102c.8-11.6-11-20-21.8-15.2-19.6 8.2-49.6 21.8-85.8 21.8z"}),i("path",{d:"m795.4 586.2-96-98.2C699.4 172 513 32 513 32S324.8 172 324.8 488l-96 98.2c-3.6 3.6-5.2 9-4.4 14.2L261.2 824c1.8 11.4 14.2 17 23.6 10.8L419 744s41.4 40 94.2 40c52.8 0 92.2-40 92.2-40l134.2 90.8c9.2 6.2 21.6.6 23.6-10.8l37-223.8c.4-5.2-1.2-10.4-4.8-14zM513 384c-34 0-61.4-28.6-61.4-64s27.6-64 61.4-64c34 0 61.4 28.6 61.4 64S547 384 513 384z"})]);Ws.displayName="BackToTopIcon";var tc=y({name:"BackToTop",props:{threshold:{type:Number,default:100},noProgress:Boolean},setup(n){const a=z(),t=Pn({"/en/":{backToTop:"Back to top"},"/":{backToTop:"返回顶部"}}),s=w(),{height:o}=ll(s),{height:l}=bl(),{y:c}=hl(),p=h(()=>a.value.backToTop!==!1&&c.value>n.threshold),u=h(()=>c.value/(o.value-l.value));return R(()=>{s.value=document.body}),()=>i(qn,{name:"fade"},()=>p.value?i("button",{type:"button",class:"back-to-top","aria-label":t.value.backToTop,"data-balloon-pos":"left",onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[n.noProgress?null:i("svg",{class:"scroll-progress"},i("circle",{cx:"50%",cy:"50%",r:"calc(50% - 2px)",style:{"stroke-dasharray":`${Math.PI*u.value*100}% ${Math.PI*100}%`}})),i(Ws)]):null)}});const sc=an({enhance:({app:n})=>{N("FontIcon")||n.component("FontIcon",kl),N("AudioPlayer")||n.component("AudioPlayer",fl),N("Badge")||n.component("Badge",Bs),N("BiliBili")||n.component("BiliBili",yl),N("CodePen")||n.component("CodePen",El),N("PDF")||n.component("PDF",Pl),N("Replit")||n.component("Replit",Dl),N("StackBlitz")||n.component("StackBlitz",nc),N("VideoPlayer")||n.component("VideoPlayer",ec),N("YouTube")||n.component("YouTube",ac)},setup:()=>{_l(`  @import url("https://at.alicdn.com/t/c/font_2410206_5vb9zlyghj.css");
  `)},rootComponents:[()=>i(tc,{})]});function Ks(n,a,t){var s,o,l;a===void 0&&(a=50),t===void 0&&(t={});var c=(s=t.isImmediate)!=null&&s,p=(o=t.callback)!=null&&o,u=t.maxWait,d=Date.now(),v=[];function m(){if(u!==void 0){var _=Date.now()-d;if(_+a>=u)return u-_}return a}var g=function(){var _=[].slice.call(arguments),b=this;return new Promise(function(L,f){var k=c&&l===void 0;if(l!==void 0&&clearTimeout(l),l=setTimeout(function(){if(l=void 0,d=Date.now(),!c){var T=n.apply(b,_);p&&p(T),v.forEach(function(P){return(0,P.resolve)(T)}),v=[]}},m()),k){var E=n.apply(b,_);return p&&p(E),L(E)}v.push({resolve:L,reject:f})})};return g.cancel=function(_){l!==void 0&&clearTimeout(l),v.forEach(function(b){return(0,b.reject)(_)}),v=[]},g}const oc=({headerLinkSelector:n,headerAnchorSelector:a,delay:t,offset:s=5})=>{const o=Q(),c=Ks(()=>{var L,f;const p=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(p-0)<s){wt(o,"");return}const d=window.innerHeight+p,v=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),m=Math.abs(v-d)<s,g=Array.from(document.querySelectorAll(n)),b=Array.from(document.querySelectorAll(a)).filter(k=>g.some(E=>E.hash===k.hash));for(let k=0;k<b.length;k++){const E=b[k],T=b[k+1],P=p>=(((L=E.parentElement)==null?void 0:L.offsetTop)??0)-s,x=!T||p<(((f=T.parentElement)==null?void 0:f.offsetTop)??0)-s;if(!(P&&x))continue;const A=decodeURIComponent(o.currentRoute.value.hash),I=decodeURIComponent(E.hash);if(A===I)return;if(m){for(let B=k+1;B<b.length;B++)if(A===decodeURIComponent(b[B].hash))return}wt(o,I);return}},t);R(()=>{window.addEventListener("scroll",c)}),Ti(()=>{window.removeEventListener("scroll",c)})},wt=async(n,a)=>{const{scrollBehavior:t}=n.options;n.options.scrollBehavior=void 0,await n.replace({query:n.currentRoute.value.query,hash:a,force:!0}).finally(()=>n.options.scrollBehavior=t)},ic=".sidebar-link, .toc-link",rc=".header-anchor",lc=200,cc=5,pc=an({setup(){oc({headerLinkSelector:ic,headerAnchorSelector:rc,delay:lc,offset:cc})}});var dc=y({name:"AutoCatalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean},setup(n,{slots:a}){const t=Pn({"/en/":{title:"Catalog"},"/":{title:"目录"}}),s=C(),o=Q(),l=ps(),c=d=>{const v=d.I;return typeof v>"u"||v},p=()=>{const d=n.base||s.value.path.replace(/\/[^/]+$/,"/"),v=o.getRoutes(),m=[];return v.filter(({meta:g,path:_})=>{if(!wn(_,d)||_===d)return!1;if(d==="/"){const b=X(l.value.locales).filter(L=>L!=="/");if(_==="/404.html"||b.some(L=>wn(_,L)))return!1}return(On(_,".html")&&!On(_,"/index.html")||On(_,"/"))&&c(g)}).map(({path:g,meta:_})=>{const b=g.substring(d.length).split("/").length;return{title:_.t||"",icon:_.i,base:g.replace(/\/[^/]+\/?$/,"/"),order:_.O||null,level:On(g,"/")?b-1:b,path:g}}).filter(({title:g,level:_})=>typeof g=="string"&&g&&_<=n.level).sort(({title:g,level:_,path:b,order:L},{title:f,level:k,path:E,order:T})=>_-k||(On(b,"/index.html")?-1:On(E,"/index.html")?1:L===null?T===null?g.localeCompare(f):T:T===null?L:L>0?T>0?L-T:-1:T<0?L-T:1)).forEach(g=>{var _;const{base:b,level:L}=g;switch(L){case 1:m.push(g);break;case 2:{const f=m.find(k=>k.path===b);f&&(f.children??(f.children=[])).push(g);break}default:{const f=m.find(k=>k.path===b.replace(/\/[^/]+\/$/,"/"));if(f){const k=(_=f.children)==null?void 0:_.find(E=>E.path===b);k&&(k.children??(k.children=[])).push(g)}}}}),m},u=h(()=>p());return()=>i("div",{class:"auto-catalog-wrapper"},[i("h2",{class:"main-title"},t.value.title),u.value.map(({children:d=[],icon:v,path:m,title:g},_)=>[i("h3",{id:g,class:["child-title",{"has-children":d.length}]},[i("a",{href:`#${g}`,class:"header-anchor"},"#"),i(H,{class:"catalog-title",to:m},()=>[n.index?`${_+1}.`:null,v&&a.icon?a.icon({icon:v}):null,g||"Unknown"])]),d.length?i("ul",{class:"child-catalog-wrapper"},d.map(({children:b=[],icon:L,path:f,title:k},E)=>i("li",{class:"child-catalog-item"},[i("div",{class:["sub-title",{"has-children":b.length}]},[i("a",{href:`#${k}`,class:"header-anchor"},"#"),i(H,{class:"catalog-title",to:f},()=>[n.index?`${_+1}.${E+1}`:null,L&&a.icon?a.icon({icon:L}):null,k||"Unknown"])]),b.length?i("div",{class:"sub-catalog-wrapper"},b.map(({icon:T,path:P,title:x},D)=>i(H,{class:"sub-catalog-item",to:P},()=>[n.index?`${_+1}.${E+1}.${D+1}`:null,T&&a.icon?a.icon({icon:T}):null,x||"Unknown"]))):null]))):null])])}}),uc=an({enhance:({app:n})=>{N("AutoCatalog",n)||n.component("AutoCatalog",a=>i(dc,a,{icon:({icon:t})=>i(Y("HopeIcon"),{icon:t})}))}});const vc=i("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[i("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),i("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),Js=y({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(n){const a=cn(),t=h(()=>n.locales[a.value]??{openInNewWindow:"open in new window"});return()=>i("span",[vc,i("span",{class:"external-link-icon-sr-only"},t.value.openInNewWindow)])}}),mc={},gc=an({enhance({app:n}){n.component("ExternalLinkIcon",i(Js,{locales:mc}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const $={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:n=>{const a=$.isStarted();n=Ne(n,$.settings.minimum,1),$.status=n===1?null:n;const t=$.render(!a),s=t.querySelector($.settings.barSelector),o=$.settings.speed,l=$.settings.easing;return t.offsetWidth,_c(c=>{fe(s,{transform:"translate3d("+Lt(n)+"%,0,0)",transition:"all "+o+"ms "+l}),n===1?(fe(t,{transition:"none",opacity:"1"}),t.offsetWidth,setTimeout(function(){fe(t,{transition:"all "+o+"ms linear",opacity:"0"}),setTimeout(function(){$.remove(),c()},o)},o)):setTimeout(()=>c(),o)}),$},isStarted:()=>typeof $.status=="number",start:()=>{$.status||$.set(0);const n=()=>{setTimeout(()=>{$.status&&($.trickle(),n())},$.settings.trickleSpeed)};return $.settings.trickle&&n(),$},done:n=>!n&&!$.status?$:$.inc(.3+.5*Math.random()).set(1),inc:n=>{let a=$.status;return a?(typeof n!="number"&&(n=(1-a)*Ne(Math.random()*a,.1,.95)),a=Ne(a+n,0,.994),$.set(a)):$.start()},trickle:()=>$.inc(Math.random()*$.settings.trickleRate),render:n=>{if($.isRendered())return document.getElementById("nprogress");At(document.documentElement,"nprogress-busy");const a=document.createElement("div");a.id="nprogress",a.innerHTML=$.settings.template;const t=a.querySelector($.settings.barSelector),s=n?"-100":Lt($.status||0),o=document.querySelector($.settings.parent);return fe(t,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),o!==document.body&&At(o,"nprogress-custom-parent"),o==null||o.appendChild(a),a},remove:()=>{Tt(document.documentElement,"nprogress-busy"),Tt(document.querySelector($.settings.parent),"nprogress-custom-parent");const n=document.getElementById("nprogress");n&&hc(n)},isRendered:()=>!!document.getElementById("nprogress")},Ne=(n,a,t)=>n<a?a:n>t?t:n,Lt=n=>(-1+n)*100,_c=function(){const n=[];function a(){const t=n.shift();t&&t(a)}return function(t){n.push(t),n.length===1&&a()}}(),fe=function(){const n=["Webkit","O","Moz","ms"],a={};function t(c){return c.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(p,u){return u.toUpperCase()})}function s(c){const p=document.body.style;if(c in p)return c;let u=n.length;const d=c.charAt(0).toUpperCase()+c.slice(1);let v;for(;u--;)if(v=n[u]+d,v in p)return v;return c}function o(c){return c=t(c),a[c]||(a[c]=s(c))}function l(c,p,u){p=o(p),c.style[p]=u}return function(c,p){for(const u in p){const d=p[u];d!==void 0&&Object.prototype.hasOwnProperty.call(p,u)&&l(c,u,d)}}}(),Qs=(n,a)=>(typeof n=="string"?n:Pa(n)).indexOf(" "+a+" ")>=0,At=(n,a)=>{const t=Pa(n),s=t+a;Qs(t,a)||(n.className=s.substring(1))},Tt=(n,a)=>{const t=Pa(n);if(!Qs(n,a))return;const s=t.replace(" "+a+" "," ");n.className=s.substring(1,s.length-1)},Pa=n=>(" "+(n.className||"")+" ").replace(/\s+/gi," "),hc=n=>{n&&n.parentNode&&n.parentNode.removeChild(n)};const bc=()=>{R(()=>{const n=Q(),a=new Set;a.add(n.currentRoute.value.path),n.beforeEach(t=>{a.has(t.path)||$.start()}),n.afterEach(t=>{a.add(t.path),$.done()})})},kc=an({setup(){bc()}}),fc=JSON.parse(`{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$DXVNQqgJSqD9Mq0gnz8KgeJFhgXvKDq7uZysJQUEuZH8GH4AJ/bSS"],"/en/demo/encrypt.html":["$2a$10$hZQUcttz4QjHlv7ZY.iGdurguNQFJydhN0dqYjkdwkO1sTBodk/f6"]}},"editLink":false,"author":{"name":"Kesa"},"copyright":"Copyright ©2021-present Kesa","themeColor":{"blue":"#2196f3","red":"#f26d6d","green":"#3eaf7c","orange":"#fb9b5f"},"logo":"/assets/images/hero.jpg","repo":"https://github.com/dreamjz","blog":{"name":"今朝","roundAvatar":true,"medias":{"Email":"mailto:dreamjzwork@outlook.com","Gmail":"mailto:dreamjzwork@gmail.com"}},"locales":{"/en/":{"lang":"en-US","navbarLocales":{"langName":"English","selectLangAriaLabel":"Select language"},"metaLocales":{"author":"Author","date":"Writing Date","origin":"Original","views":"Page views","category":"Category","tag":"Tag","readingTime":"Reading Time","words":"Words","toc":"On This Page","prev":"Prev","next":"Next","lastUpdated":"Last update","contributors":"Contributors","editLink":"Edit this page","print":"Print"},"blogLocales":{"article":"Articles","articleList":"Article List","category":"Category","tag":"Tag","timeline":"Timeline","timelineTitle":"Yesterday Once More!","all":"All","intro":"Personal Intro","star":"Star"},"paginationLocales":{"prev":"Prev","next":"Next","navigate":"Jump to","action":"Go","errorText":"Please enter a number between 1 and $page !"},"outlookLocales":{"themeColor":"Theme Color","darkmode":"Theme Mode","fullscreen":"Full Screen"},"encryptLocales":{"iconLabel":"Page Encrypted","placeholder":"Enter password","remember":"Remember password","errorHint":"Please enter the correct password!"},"routeLocales":{"skipToContent":"Skip to main content","notFoundTitle":"Page not found","notFoundMsg":["There’s nothing here.","How did we get here?","That’s a Four-Oh-Four.","Looks like we've got some broken links."],"back":"Go back","home":"Take me home","openInNewWindow":"Open in new window"},"navbar":["/en/",{"text":"Demo","icon":"discover","link":"/en/demo/"},{"text":"Posts","icon":"edit","prefix":"/en/posts/","children":[{"text":"Apple","icon":"edit","prefix":"apple/","children":[{"text":"Apple1","icon":"edit","link":"1"},{"text":"Apple2","icon":"edit","link":"2"},"3","4"]},{"text":"Banana","icon":"edit","prefix":"banana/","children":[{"text":"Banana 1","icon":"edit","link":"1"},{"text":"Banana 2","icon":"edit","link":"2"},"3","4"]},{"text":"Cherry","icon":"edit","link":"cherry"},{"text":"Dragon Fruit","icon":"edit","link":"dragonfruit"},"tomato","strawberry"]},{"text":"V2 Docs","icon":"note","link":"https://theme-hope.vuejs.press/"}],"sidebar":{"/":["",{"icon":"discover","text":"Demo","prefix":"demo/","link":"demo/","children":"structure"},{"text":"Articles","icon":"note","prefix":"posts/","children":"structure"},"intro","slides"]},"footer":"Powered by <a href=\\"https://v2.vuepress.vuejs.org/\\">Vuepress-next</a> and <a href=\\"https://theme-hope.vuejs.press/\\">Theme-hope</a>","displayFooter":true},"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"收藏"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"笔记","icon":"article","link":"/note/"},{"text":"Blog","icon":"blog","link":"/blog/"},{"text":"Leet Code","icon":"code","link":"/leetcode/"},{"text":"Cheat Sheet","icon":"exercise","link":"/cheatsheet/"},{"text":"读书笔记","icon":"file","link":"/reading/"},{"text":"语言笔记","icon":"language","link":"/lang/"},{"text":"工具","icon":"tool","link":"/tool/bookmark.md"},{"text":"To Do","icon":"enum","link":"/todo/"},{"text":"面试","icon":"ask","link":"/interview/"},{"text":"Gallery","icon":"pic","link":"/gallery/"},{"text":"关于","icon":"info","link":"/about-me"}],"sidebar":{"/note/":[{"text":"C#","link":"/note/c-sharp/"},{"text":"Golang","link":"/note/golang/"},{"text":"Docker","link":"/note/docker/"},{"text":"JavaScript","link":"/note/javascript/"},{"text":"Linux","link":"/note/linux/"},{"text":"Nginx","link":"/note/nginx/"},{"text":"RPC","link":"/note/rpc/"},{"text":"Typescript","link":"/note/typescript/"},{"text":"Vue","link":"/note/vue/"}],"/note/c-sharp/":"structure","/note/golang/":"structure","/note/docker/":"structure","/note/javascript/":"structure","/note/linux/":"structure","/note/nginx/":"structure","/note/rpc/":"structure","/note/typescript/":"structure","/note/vue/":"structure","/blog/":[{"text":"Algorithm","link":"/blog/algorithm/"},{"text":"Golang","link":"/blog/golang/"},{"text":"Raspberry-pi","link":"/blog/raspberry-pi/"},{"text":"Vuepress","link":"/blog/vuepress/"}],"/blog/golang/":"structure","/blog/algorithm/":"structure","/blog/raspberry-pi/":"structure","/blog/vuepress/":"structure","/lang/":[{"text":"English","collapsible":true,"children":[{"text":"英语构词法","link":""}]},{"text":"Japanese","collapsible":true,"children":[{"text":"标日初级上","link":""},{"text":"标日初级下","link":""},{"text":"标日中级上","link":""},{"text":"标日中级下","link":""},{"text":"标日高级上","link":""},{"text":"标日高级下","link":""}]}],"/reading/":[{"text":"Algorithm","link":"/reading/algorithm/"},{"text":"NoSQL","link":"/reading/nosql/"},{"text":"Golang","link":"/reading/golang/"}],"/reading/algorithm/":"structure","/reading/nosql/":"structure","/reading/golang/":"structure","/interview/":[{"text":"Golang","link":"/interview/golang/"},{"text":"MySQL","link":"/interview/mysql/"},{"text":"Net","link":"/interview/net/"},{"text":"Redis","link":"/interview/redis/"}],"/interview/golang/":"structure","/interview/mysql/":"structure","/interview/net/":"structure","/interview/redis/":"structure","/leetcode/":"structure","/cheatsheet/":[{"text":"Git","link":"/cheatsheet/git/"},{"text":"Golang","link":"/cheatsheet/golang/"}],"/cheatsheet/git/":"structure","/cheatsheet/golang/":"structure","/gallery/":[{"text":"WorldEnd","link":"/gallery/"}],"/tool/":[{"text":"Golang","link":"/tool/golang/"},{"text":"Linux","link":"/tool/linux/"}],"/tool/golang/":"structure","/tool/linux/":"structure"},"footer":"Powered by <a href=\\"https://v2.vuepress.vuejs.org/\\">Vuepress-next</a> and <a href=\\"https://theme-hope.vuejs.press/\\">Theme-hope</a>","displayFooter":true}}}`),yc=w(fc),Ys=()=>yc,Zs=Symbol(""),Ec=()=>{const n=W(Zs);if(!n)throw new Error("useThemeLocaleData() is called without provider.");return n},wc=(n,a)=>{var t;return{...n,...(t=n.locales)==null?void 0:t[a]}},Lc=an({enhance({app:n}){const a=Ys(),t=n._context.provides[va],s=h(()=>wc(a.value,t.value));n.provide(Zs,s),Object.defineProperties(n.config.globalProperties,{$theme:{get(){return a.value}},$themeLocale:{get(){return s.value}}})}}),Ac={"Content-Type":"application/json"},Tc=({serverURL:n,lang:a,paths:t,signal:s})=>(({serverURL:o,lang:l,paths:c,type:p,signal:u})=>fetch(`${o}/article?path=${encodeURIComponent(c.join(","))}&type=${encodeURIComponent(p.join(","))}&lang=${l}`,{signal:u}).then(d=>d.json()))({serverURL:n,lang:a,paths:t,type:["time"],signal:s}).then(o=>Array.isArray(o)?o:[o]),Ic=n=>(({serverURL:a,lang:t,path:s,type:o,action:l})=>fetch(`${a}/article?lang=${t}`,{method:"POST",headers:Ac,body:JSON.stringify({path:s,type:o,action:l})}).then(c=>c.json()))({...n,type:"time",action:"inc"}),It=n=>{const a=((t="")=>t.replace(/\/$/u,""))(n);return/^(https?:)?\/\//.test(a)?a:`https://${a}`},Pc=n=>{n.name!=="AbortError"&&console.error(n.message)},Pt=n=>n.dataset.path||n.getAttribute("id"),Dt=(n,a)=>{a.forEach((t,s)=>{t.innerText=n[s].toString()})},Dc=({serverURL:n,path:a=window.location.pathname,selector:t=".waline-pageview-count",update:s=!0,lang:o=navigator.language})=>{const l=new AbortController,c=Array.from(document.querySelectorAll(t)),p=d=>{const v=Pt(d);return v!==null&&a!==v},u=d=>Tc({serverURL:It(n),paths:d.map(v=>Pt(v)||a),lang:o,signal:l.signal}).then(v=>Dt(v,d)).catch(Pc);if(s){const d=c.filter(m=>!p(m)),v=c.filter(p);Ic({serverURL:It(n),path:a,lang:o}).then(m=>Dt(new Array(d.length).fill(m),d)),v.length&&u(v)}else u(c);return l.abort.bind(l)};const Qn={provider:"Waline",dark:'html[data-theme="dark"]',serverURL:"https://waline-comment-g43a5zsqy-dreamjz.vercel.app/"},xc={"/en/":{placeholder:"Write a comment here (Fill in the email address to receive an email notification when being replied)"},"/":{placeholder:"请留言。(填写邮箱可在被回复时收到邮件提醒)"}};e(()=>import("./waline-meta-56fbc549.js"),[]);var Rc=y({name:"WalineComment",setup(){const n=C(),a=z(),t=se(),s=Pn(xc);let o;const l=h(()=>{const d=Qn.comment!==!1,v=a.value.comment;return!!v||d!==!1&&v!==!1}),c=h(()=>{const d=Qn.pageview!==!1,v=a.value.pageview;return!!v||d!==!1&&v!==!1}),p=h(()=>F(n.value.path)),u=h(()=>({lang:t.value==="zh-CN"?"zh-CN":"en",locale:s.value,dark:"html.dark",...Qn,path:p.value}));return R(()=>{S(p,()=>{o==null||o(),c.value&&Un().then(()=>{setTimeout(()=>{o=Dc({serverURL:Qn.serverURL,path:p.value})},Qn.delay||800)})},{immediate:!0})}),()=>l.value?i("div",{class:"waline-wrapper",id:"comment"},i(r({loader:async()=>(await e(()=>import("./component-a49c475f.js"),["assets/component-a49c475f.js","assets/framework-09afcf0b.js"])).Waline,loadingComponent:fn}),u.value)):null}});const Oc={provider:"Waline",dark:'html[data-theme="dark"]',serverURL:"https://waline-comment-g43a5zsqy-dreamjz.vercel.app/"}.comment!==!1,Vc=y({name:"CommentService",props:{darkmode:Boolean},setup(n){const a=z(),t=h(()=>a.value.comment||Oc&&a.value.comment!==!1);return()=>i(Rc,{darkmode:n.darkmode,style:{display:t.value?"block":"none"}})}});var Sc=an({enhance:({app:n})=>{n.component("CommentService",Vc)}});const Cc=800,$c=2e3,Mc={"/en/":{copy:"Copy code",copied:"Copied",hint:"Copied successfully"},"/":{copy:"复制代码",copied:"已复制",hint:"复制成功"}},zc=!1,jc=['.theme-hope-content div[class*="language-"] pre'],xt=!1,He=new Map,Gc=()=>{const{copy:n}=Fr({legacy:!0}),a=Pn(Mc),t=C(),s=gr(),o=p=>{if(!p.hasAttribute("copy-code-registered")){const u=document.createElement("button");u.type="button",u.classList.add("copy-code-button"),u.innerHTML='<div class="copy-icon" />',u.setAttribute("aria-label",a.value.copy),u.setAttribute("data-copied",a.value.copied),p.parentElement&&p.parentElement.insertBefore(u,p),p.setAttribute("copy-code-registered","")}},l=()=>Un().then(()=>new Promise(p=>{setTimeout(()=>{jc.forEach(u=>{document.querySelectorAll(u).forEach(o)}),p()},Cc)})),c=(p,u,d)=>{let{innerText:v=""}=u;/language-(shellscript|shell|bash|sh|zsh)/.test(p.classList.toString())&&(v=v.replace(/^ *(\$|>) /gm,"")),n(v).then(()=>{d.classList.add("copied"),clearTimeout(He.get(d));const m=setTimeout(()=>{d.classList.remove("copied"),d.blur(),He.delete(d)},$c);He.set(d,m)})};R(()=>{(!s.value||xt)&&l(),q("click",p=>{const u=p.target;if(u.matches('div[class*="language-"] > button.copy')){const d=u.parentElement,v=u.nextElementSibling;v&&c(d,v,u)}else if(u.matches('div[class*="language-"] div.copy-icon')){const d=u.parentElement,v=d.parentElement,m=d.nextElementSibling;m&&c(v,m,d)}}),S(()=>t.value.path,()=>{(!s.value||xt)&&l()})})};var Bc=an({setup:()=>{Gc()}});const qc=(n,a)=>a==="json"?JSON.parse(n):new Function(`let config,__chart_js_config__;
{
${n}
__chart_js_config__=config;
}
return __chart_js_config__;`)();var Nc=y({name:"ChartJS",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(n){const a=w(),t=w(),s=w(!0);return R(async()=>{const[{default:o}]=await Promise.all([e(()=>import("./auto-ba5ecab5.js"),[]),new Promise(p=>setTimeout(p,800))]);o.defaults.maintainAspectRatio=!1;const l=qc(Ln(n.config),n.type),c=t.value.getContext("2d");new o(c,l),s.value=!1}),()=>[n.title?i("div",{class:"chart-title"},decodeURIComponent(n.title)):null,s.value?i(fn,{class:"chart-loading",height:192}):null,i("div",{ref:a,class:"chart-wrapper",id:n.id,style:{display:s.value?"none":"block"}},i("canvas",{ref:t,height:400}))]}});const ye=Wn("VUEPRESS_CODE_TAB_STORE",{});var Hc=y({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(n,{slots:a}){const t=w(n.active),s=w([]),o=()=>{if(n.tabId){const{title:d,id:v=d}=n.data[t.value];ye.value[n.tabId]=v}},l=(d=t.value)=>{t.value=d<s.value.length-1?d+1:0,s.value[t.value].focus()},c=(d=t.value)=>{t.value=d>0?d-1:s.value.length-1,s.value[t.value].focus()},p=(d,v)=>{if(d.key===" "||d.key==="Enter"?(d.preventDefault(),t.value=v):d.key==="ArrowRight"?(d.preventDefault(),l()):d.key==="ArrowLeft"&&(d.preventDefault(),c()),n.tabId){const{title:m,id:g=m}=n.data[t.value];ye.value[n.tabId]=g}},u=()=>{if(n.tabId){const d=n.data.findIndex(({title:v,id:m=v})=>ye.value[n.tabId]===m);if(d!==-1)return d}return n.active};return R(()=>{t.value=u(),S(()=>ye.value[n.tabId],(d,v)=>{if(n.tabId&&d!==v){const m=n.data.findIndex(({title:g,id:_=g})=>_===d);m!==-1&&(t.value=m)}})}),()=>n.data.length?i("div",{class:"code-tabs"},[i("div",{class:"code-tabs-nav",role:"tablist"},n.data.map(({title:d},v)=>{const m=v===t.value;return i("button",{type:"button",ref:g=>{g&&(s.value[v]=g)},class:["code-tabs-nav-tab",{active:m}],role:"tab","aria-controls":`codetab-${n.id}-${v}`,"aria-selected":m,onClick:()=>{t.value=v,o()},onKeydown:g=>p(g,v)},d)})),n.data.map(({title:d,id:v=d},m)=>{var g;const _=m===t.value;return i("div",{class:["code-tab",{active:_}],id:`codetab-${n.id}-${m}`,role:"tabpanel","aria-expanded":_},(g=a[`tab${m}`])==null?void 0:g.call(a,{title:d,value:v,isActive:_}))})]):null}});const Xs=({active:n=!1},{slots:a})=>{var t;return i("div",{class:["code-group-item",{active:n}],"aria-selected":n},(t=a.default)==null?void 0:t.call(a))};Xs.displayName="CodeGroupItem";const Fc=y({name:"CodeGroup",setup(n,{slots:a}){const t=w(-1),s=w([]),o=(p=t.value)=>{t.value=p<s.value.length-1?p+1:0,s.value[t.value].focus()},l=(p=t.value)=>{t.value=p>0?p-1:s.value.length-1,s.value[t.value].focus()},c=(p,u)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),t.value=u):p.key==="ArrowRight"?(p.preventDefault(),o(u)):p.key==="ArrowLeft"&&(p.preventDefault(),l(u))};return()=>{var p;const u=(((p=a.default)==null?void 0:p.call(a))||[]).filter(d=>d.type.name==="CodeGroupItem").map(d=>(d.props===null&&(d.props={}),d));return u.length===0?null:(t.value<0||t.value>u.length-1?(t.value=u.findIndex(d=>"active"in d.props),t.value===-1&&(t.value=0)):u.forEach((d,v)=>{d.props.active=v===t.value}),i("div",{class:"code-group"},[i("div",{class:"code-group-nav"},u.map((d,v)=>{const m=v===t.value;return i("button",{type:"button",ref:g=>{g&&(s.value[v]=g)},class:["code-group-nav-tab",{active:m}],"aria-pressed":m,"aria-expanded":m,onClick:()=>{t.value=v},onKeydown:g=>c(g,v)},d.props.title)})),u]))}}});const Uc=()=>i(O,{name:"back"},()=>i("path",{d:"M1014.749 449.156v125.688H260.626l345.64 345.64-89.239 89.237L19.307 512l497.72-497.721 89.238 89.238-345.64 345.64h754.124z"})),Wc=()=>i(O,{name:"home"},()=>i("path",{d:"M780.106 420.978L506.994 147.866 233.882 420.978h.045v455.11H780.06v-455.11h.046zm90.977 90.976V876.09a91.022 91.022 0 01-91.023 91.022H233.927a91.022 91.022 0 01-91.022-91.022V511.954l-67.22 67.175-64.307-64.307 431.309-431.31c35.498-35.498 93.115-35.498 128.614 0l431.309 431.31-64.307 64.307L871.083 512z"})),Kc='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',Jc='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',Qc='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>';const Fe={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"},Rt={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},Yc=(n,a,t)=>{const s=document.createElement(n);return te(a)&&X(a).forEach(o=>{if(o.indexOf("data"))s[o]=a[o];else{const l=o.replace("data","");s.dataset[l]=a[o]}}),t&&t.forEach(o=>{s.appendChild(o)}),s},Da=n=>({...Fe,...n,jsLib:Array.from(new Set([...Fe.jsLib||[],...n.jsLib||[]])),cssLib:Array.from(new Set([...Fe.cssLib||[],...n.cssLib||[]]))}),jn=(n,a)=>{if(n[a]!==void 0)return n[a];const t=new Promise(s=>{var o;const l=document.createElement("script");l.src=a,(o=document.querySelector("body"))==null||o.appendChild(l),l.onload=()=>{s()}});return n[a]=t,t},Zc=(n,a)=>{if(a.css&&Array.from(n.childNodes).every(t=>t.nodeName!=="STYLE")){const t=Yc("style",{innerHTML:a.css});n.appendChild(t)}},Xc=(n,a,t)=>{const s=t.getScript();if(s&&Array.from(a.childNodes).every(o=>o.nodeName!=="SCRIPT")){const o=document.createElement("script");o.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${n} .code-demo-container').shadowRoot;
${s}}`)),a.appendChild(o)}},np=n=>{const a=X(n),t={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(s=>{const o=a.filter(l=>Rt[s].types.includes(l));if(o.length){const l=o[0];t[s]=[n[l].replace(/^\n|\n$/g,""),Rt[s].map[l]||l]}}),t.isLegal=(!t.html.length||t.html[1]==="none")&&(!t.js.length||t.js[1]==="none")&&(!t.css.length||t.css[1]==="none"),t},no=n=>n.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),eo=n=>`<div id="app">
${no(n)}
</div>`,ep=n=>`${n.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,ap=n=>n.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),ao=n=>`(function(exports){var module={};module.exports=exports;${n};return module.exports.__esModule?module.exports.default:module.exports;})({})`,tp=(n,a)=>{const t=Da(a),s=n.js[0]||"";return{...t,html:no(n.html[0]||""),js:s,css:n.css[0]||"",isLegal:n.isLegal,getScript:()=>{var o;return t.useBabel?((o=window.Babel.transform(s,{presets:["es2015"]}))==null?void 0:o.code)||"":s}}},sp=/<template>([\s\S]+)<\/template>/u,op=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,ip=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,rp=(n,a)=>{const t=Da(a),s=n.html[0]||"",o=sp.exec(s),l=op.exec(s),c=ip.exec(s),p=o?o[1].replace(/^\n|\n$/g,""):"",[u="",d=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],[v="",m=""]=c?[c[4].replace(/^\n|\n$/g,""),c[3]]:[],g=d===""&&(m===""||m==="css");return{...t,html:eo(p),js:ap(u),css:v,isLegal:g,jsLib:[t.vue,...t.jsLib],getScript:()=>{var _,b;const L=a.useBabel?((b=(_=window.Babel)==null?void 0:_.transform(u,{presets:["es2015"]}))==null?void 0:b.code)||"":u.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${ao(L)};appOptions.template=\`${p.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},lp=(n,a)=>{const t=Da(a);return{...t,html:eo(""),js:ep(n.js[0]||""),css:n.css[0]||(n.js[0]?n.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:n.isLegal,jsLib:[t.react,t.reactDOM,...t.jsLib],jsx:!0,getScript:()=>{var s,o;const l=((o=(s=window.Babel)==null?void 0:s.transform(n.js[0]||"",{presets:["es2015","react"]}))==null?void 0:o.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${ao(l)}))`}}},Gn={},cp=n=>Promise.all([jn(Gn,n.babel),jn(Gn,n.react),jn(Gn,n.reactDOM)]),pp=n=>{const a=[jn(Gn,n.vue)];return n.useBabel&&a.push(jn(Gn,n.babel)),Promise.all(a)},dp=n=>n.useBabel?jn(Gn,n.babel):Promise.resolve();var up=y({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},setup(n,{slots:a}){const[t,s]=Xe(!1),o=w(),l=w(),c=w("0"),p=w(!1),u=h(()=>JSON.parse(n.config?Ln(n.config):"{}")),d=h(()=>{const b=JSON.parse(Ln(n.code));return np(b)}),v=h(()=>n.type==="react"?lp(d.value,u.value):n.type==="vue"?rp(d.value,u.value):tp(d.value,u.value)),m=h(()=>v.value.isLegal),g=(b=!1)=>{const L=o.value.attachShadow({mode:"open"}),f=document.createElement("div");f.classList.add("code-demo-app"),L.appendChild(f),m.value?(b&&(f.innerHTML=v.value.html),Zc(L,v.value),Xc(n.id,L,v.value),c.value="0"):c.value="auto",p.value=!0},_=()=>{switch(n.type){case"react":return cp(v.value).then(()=>g());case"vue":return pp(v.value).then(()=>g());default:return dp(v.value).then(()=>g(!0))}};return R(()=>{setTimeout(()=>{_()},800)}),()=>{var b;return i("div",{class:"code-demo-wrapper",id:n.id},[i("div",{class:"code-demo-header"},[v.value.isLegal?i("button",{type:"button",title:"toggle","aria-hidden":!0,class:["toggle-button",t.value?"down":"end"],onClick:()=>{c.value=t.value?"0":`${l.value.clientHeight+13.8}px`,s()}}):null,n.title?i("span",{class:"title"},decodeURIComponent(n.title)):null,v.value.isLegal&&v.value.jsfiddle!==!1?i("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[i("input",{type:"hidden",name:"html",value:v.value.html}),i("input",{type:"hidden",name:"js",value:v.value.js}),i("input",{type:"hidden",name:"css",value:v.value.css}),i("input",{type:"hidden",name:"wrap",value:"1"}),i("input",{type:"hidden",name:"panel_js",value:"3"}),i("input",{type:"hidden",name:"resources",value:[...v.value.cssLib,...v.value.jsLib].join(",")}),i("button",{type:"submit",class:"jsfiddle-button",innerHTML:Jc,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!v.value.isLegal||v.value.codepen!==!1?i("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[i("input",{type:"hidden",name:"data",value:JSON.stringify({html:v.value.html,js:v.value.js,css:v.value.css,js_external:v.value.jsLib.join(";"),css_external:v.value.cssLib.join(";"),layout:v.value.codepenLayout,html_pre_processor:d.value?d.value.html[1]:"none",js_pre_processor:d.value?d.value.js[1]:v.value.jsx?"babel":"none",css_pre_processor:d.value?d.value.css[1]:"none",editors:v.value.codepenEditors})}),i("button",{type:"submit",innerHTML:Kc,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),p.value?null:i(fn,{class:"code-demo-loading"}),i("div",{ref:o,class:"code-demo-container",style:{display:m.value&&p.value?"block":"none"}}),i("div",{class:"code-demo-code-wrapper",style:{height:c.value}},i("div",{ref:l,class:"code-demo-codes"},(b=a.default)==null?void 0:b.call(a)))])}}});const vp=(n,a,t)=>a==="js"?new Function("myChart",`let width,height,option,__echarts_config__;
{
${n}
__echarts_config__={width,height,option};
}
return __echarts_config__;
`)(t):{option:JSON.parse(n)};var mp=y({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(n){const a=w(!0),t=w();let s;return q("resize",Vs(()=>s==null?void 0:s.resize(),100)),R(()=>{Promise.all([e(()=>import("./index-b03bef79.js"),[]),new Promise(o=>setTimeout(o,800))]).then(([o])=>{s=o.init(t.value);const{option:l,...c}=vp(Ln(n.config),n.type,s);s.resize(c),s.setOption(l),a.value=!1})}),ae(()=>{s==null||s.dispose()}),()=>[n.title?i("div",{class:"echarts-title"},decodeURIComponent(n.title)):null,i("div",{class:"echarts-wrapper"},[i("div",{ref:t,class:"echarts-container",id:n.id}),a.value?i(fn,{class:"echarts-loading",height:360}):null])]}});var xa={x:0,y:0,"line-width":2,"line-length":40,"text-margin":8,"font-size":14,"font-color":"#8DA1AC","line-color":"#8DA1AC","element-color":"black",fill:"white","yes-text":"Yes","no-text":"No","arrow-end":"block",scale:1},gp={...xa,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#595959","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#595959","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#FF485E","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FF485E","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#1890ff","line-width":"0px"}}},_p={...xa,"line-width":1,symbols:{start:{class:"start-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},end:{class:"end-element",fill:"#ccc","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},operation:{class:"operation-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},inputoutput:{class:"inputoutput-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},subroutine:{class:"subroutine-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},condition:{class:"condition-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"},parallel:{class:"parallel-element",fill:"#f1f1f1","line-width":"1px","line-color":"#5c6ac4","font-color":"#000"}}},hp={...xa,symbols:{start:{class:"start-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},end:{class:"end-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"},operation:{class:"operation-element","font-color":"#fff",fill:"#00BC7D","line-width":"0px"},inputoutput:{class:"inputoutput-element","font-color":"#fff",fill:"#EB4D5D","line-width":"0px"},subroutine:{class:"subroutine-element","font-color":"#fff",fill:"#937AC4","element-color":"#fff","line-color":"red"},condition:{class:"condition-element","font-color":"#fff",fill:"#FFB500","line-width":"0px"},parallel:{class:"parallel-element","font-color":"#fff",fill:"#2F495F","line-width":"0px"}}},Ot={ant:gp,vue:hp,pie:_p},bp=y({name:"FlowChart",props:{code:{type:String,required:!0},id:{type:String,required:!0},preset:{type:String,default:"vue"}},setup(n){let a=null;const t=w(),s=w(!0),o=w(1),l=h(()=>Ot[n.preset]||(console.warn(`[md-enhance:flowchart] Unknown preset: ${n.preset}`),Ot.vue)),c=p=>p<419?.8:p>1280?1:.9;return R(()=>{Promise.all([e(()=>import("./flowchart-8b576787.js"),[]),new Promise(p=>setTimeout(p,800))]).then(([{parse:p}])=>{a=p(Ln(n.code)),o.value=c(window.innerWidth),s.value=!1,a.draw(n.id,{...l.value,scale:o.value})}),q("resize",Vs(()=>{if(a){const p=c(window.innerWidth);o.value!==p&&(o.value=p,a.draw(n.id,{...l.value,scale:p}))}},100))}),()=>[s.value?i(fn,{class:"flowchart-loading",height:192}):null,i("div",{ref:t,class:["flowchart-wrapper",n.preset],id:n.id,style:{display:s.value?"none":"block"}})]}});const Sn={useMaxWidth:!1},kp=n=>({dark:n,background:n?"#1e1e1e":"#fff",primaryColor:n?"#389d70":"#4abf8a",primaryBorderColor:n?"#389d70":"#4abf8a",primaryTextColor:"#fff",secondaryColor:"#ffb500",secondaryBorderColor:n?"#fff":"#000",secondaryTextColor:n?"#ddd":"#333",tertiaryColor:n?"#282828":"#efeef4",tertiaryBorderColor:n?"#bbb":"#242424",tertiaryTextColor:n?"#ddd":"#333",noteBkgColor:n?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:n?"#f6d365":"#333",lineColor:n?"#d3d3d3":"#333",textColor:n?"#fff":"#242424",mainBkg:n?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:n?"#389d70":"#4abf8a",nodeTextColor:n?"#fff":"#242424",signalTextColor:n?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",fillType0:n?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var fp=y({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0}},setup(n){const a=w(),t=w(""),s=w(!1),o=h(()=>Ln(n.code)),l=async()=>Promise.all([e(()=>import("./mermaid.core-5fb438e9.js").then(c=>c.aJ),[]),new Promise(c=>setTimeout(c,800))]).then(async([{default:c}])=>{c.initialize({theme:"base",themeVariables:kp(s.value),flowchart:Sn,sequence:Sn,journey:Sn,gantt:Sn,er:Sn,pie:Sn,startOnLoad:!1}),t.value=(await c.render(n.id,o.value)).svg});return R(()=>{const c=document.documentElement,p=()=>c.classList.contains("dark")||c.getAttribute("data-theme")==="dark";s.value=p(),l(),Ms(c,()=>{s.value=p()},{attributeFilter:["class","data-theme"],attributes:!0}),S(s,()=>l())}),()=>i("div",{ref:a,class:"mermaid-wrapper"},t.value?i("div",{class:"mermaid-content",innerHTML:t.value}):i(fn,{class:"mermaid-loading",height:96}))}});const yp=()=>e(()=>import("./highlight.esm-75b11b9d.js"),[]),Ep=()=>e(()=>import("./markdown.esm-0191f9da.js"),[]),wp=()=>e(()=>import("./math.esm-70a288c8.js"),[]),Lp=()=>e(()=>import("./notes.esm-a106bb2c.js"),[]),Ap=()=>e(()=>import("./reveal.esm-ab04f0b1.js"),[]),Tp=()=>e(()=>import("./search.esm-7e6792e2.js"),[]),Ip=()=>e(()=>import("./zoom.esm-b83b91d0.js"),[]),Pp=()=>[Ap(),Ep(),yp(),wp(),Tp(),Lp(),Ip()];var Dp=y({name:"Presentation",props:{id:{type:String,required:!0},code:{type:String,required:!0},theme:{type:String,default:"auto"}},setup(n){const a=z(),t=w(""),s=w(!0),o=w();let l=null;const c=async p=>{const u=[new Promise(g=>setTimeout(g,800)),...Pp()],[,d,...v]=await Promise.all(u),m=new d.default(p,{plugins:v.map(({default:g})=>g)});return await m.initialize({backgroundTransition:"slide",hash:a.value.layout==="Slide",mouseWheel:a.value.layout==="Slide",transition:"slide",slideNumber:!0,...a.value.reveal||{},embedded:a.value.layout!=="Slide"}),m.configure({backgroundTransition:"slide"}),m};return R(async()=>{const p=o.value;p&&(t.value=Ln(n.code),p.setAttribute("id",n.id),p.setAttribute("data-theme",n.theme),l=await c(p),s.value=!1)}),ae(()=>{l==null||l.destroy()}),()=>i("div",{class:"presentation-wrapper"},[i("div",{ref:o,class:["reveal","reveal-viewport"]},i("div",{class:"slides",innerHTML:`<section data-markdown data-separator="^\\r?\\n---\\r?\\n$" data-separator-vertical="^\\r?\\n--\\r?\\n$"><script type="text/template">${t.value}<\/script></section>`})),s.value?i(fn,{class:"reveal-loading",height:400}):null])}});var xp=y({name:"Playground",props:{title:{type:String,default:""},link:{type:String,required:!0}},setup(n){return()=>[i("div",{class:"playground-wrapper"},[i("div",{class:"title-wrapper"},[n.title?i("div",{class:"title"},decodeURIComponent(n.title)):null,i("div",{class:"actions"},[i("a",{class:"action",href:decodeURIComponent(n.link),target:"_blank",innerHTML:Qc})])]),i("div",{class:"playground-container"},i("iframe",{src:decodeURIComponent(n.link)}))])]}});const Ue=Wn("VUEPRESS_TAB_STORE",{});var Rp=y({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},setup(n,{slots:a}){const t=w(n.active),s=w([]),o=()=>{if(n.tabId){const{title:d,id:v=d}=n.data[t.value];Ue.value[n.tabId]=v}},l=(d=t.value)=>{t.value=d<s.value.length-1?d+1:0,s.value[t.value].focus()},c=(d=t.value)=>{t.value=d>0?d-1:s.value.length-1,s.value[t.value].focus()},p=(d,v)=>{d.key===" "||d.key==="Enter"?(d.preventDefault(),t.value=v):d.key==="ArrowRight"?(d.preventDefault(),l()):d.key==="ArrowLeft"&&(d.preventDefault(),c()),o()},u=()=>{if(n.tabId){const d=n.data.findIndex(({title:v,id:m=v})=>Ue.value[n.tabId]===m);if(d!==-1)return d}return n.active};return R(()=>{t.value=u(),S(()=>Ue.value[n.tabId],(d,v)=>{if(n.tabId&&d!==v){const m=n.data.findIndex(({title:g,id:_=g})=>_===d);m!==-1&&(t.value=m)}})}),()=>n.data.length?i("div",{class:"tab-list"},[i("div",{class:"tab-list-nav",role:"tablist"},n.data.map(({title:d},v)=>{const m=v===t.value;return i("button",{type:"button",ref:g=>{g&&(s.value[v]=g)},class:["tab-list-nav-item",{active:m}],role:"tab","aria-controls":`tab-${n.id}-${v}`,"aria-selected":m,onClick:()=>{t.value=v,o()},onKeydown:g=>p(g,v)},d)})),n.data.map(({title:d,id:v=d},m)=>{var g;const _=m===t.value;return i("div",{class:["tab-item",{active:_}],id:`tab-${n.id}-${m}`,role:"tabpanel","aria-expanded":_},(g=a[`tab${m}`])==null?void 0:g.call(a,{title:d,value:v,isActive:_}))})]):null}});const Op=an({enhance:({app:n})=>{n.component("ChartJS",Nc),n.component("CodeTabs",Hc),N("CodeGroup",n)||n.component("CodeGroup",Fc),N("CodeGroupItem",n)||n.component("CodeGroupItem",Xs),n.component("CodeDemo",up),n.component("ECharts",mp),n.component("FlowChart",bp),n.component("Mermaid",fp),n.component("Presentation",Dp),n.component("Playground",xp),n.component("Tabs",Rp),n.component("VuePlayground",r(()=>e(()=>import("./VuePlayground-e312db8e.js"),["assets/VuePlayground-e312db8e.js","assets/framework-09afcf0b.js"])))}});const Vp=".theme-hope-content :not(a) > img:not([no-view])",Sp={"/en/":{closeTitle:"Close",downloadTitle:"Download Image",fullscreenTitle:"Switch to full screen",zoomTitle:"Zoom in/out",arrowPrevTitle:"Prev (Arrow Left)",arrowNextTitle:"Next (Arrow Right)"},"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},Cp=800,$p={},Mp='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',zp=n=>U(n)?Array.from(document.querySelectorAll(n)):n.map(a=>Array.from(document.querySelectorAll(a))).flat(),to=n=>new Promise((a,t)=>{n.complete?a({type:"image",element:n,src:n.src,width:n.naturalWidth,height:n.naturalHeight,alt:n.alt,msrc:n.src}):(n.onload=()=>a(to(n)),n.onerror=s=>t(s))}),jp=()=>{const{isSupported:n,toggle:a}=Ea(),t=Pn(Sp),s=C();let o;const l=p=>{p.on("uiRegister",()=>{n&&p.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{a()}}),p.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(u,d)=>{u.setAttribute("download",""),u.setAttribute("target","_blank"),u.setAttribute("rel","noopener"),d.on("change",()=>{u.setAttribute("href",d.currSlide.data.src)})}}),p.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(u,d)=>{const v=[];let m=-1;for(let g=0;g<d.getNumItems();g++){const _=document.createElement("div");_.className="photo-swipe-bullet",_.onclick=b=>{d.goTo(v.indexOf(b.target))},v.push(_),u.appendChild(_)}d.on("change",()=>{m>=0&&v[m].classList.remove("active"),v[d.currIndex].classList.add("active"),m=d.currIndex})}})})},c=()=>Promise.all([e(()=>import("./photoswipe.esm-36cd6c3c.js"),[]),Un().then(()=>new Promise(p=>setTimeout(p,Cp)).then(()=>zp(Vp)))]).then(([{default:p},u])=>{const d=u.map(v=>({html:Mp,element:v,msrc:v.src}));u.forEach((v,m)=>{const g=()=>{o=new p({preloaderDelay:0,showHideAnimationType:"zoom",...t.value,...$p,dataSource:d,index:m,closeOnVerticalDrag:!0,wheelToZoom:!1}),l(o),o.addFilter("thumbEl",()=>v),o.addFilter("placeholderSrc",()=>v.src),o.init()};v.style.cursor="zoom-in",v.addEventListener("click",()=>{g()}),v.addEventListener("keypress",({key:_})=>{_==="Enter"&&g()})}),u.forEach((v,m)=>{to(v).then(g=>{d.splice(m,1,g),o==null||o.refreshSlideContent(m)})})});R(()=>{q("wheel",()=>{o==null||o.close()}),c(),S(()=>s.value.path,()=>c())})};var Gp=an({setup:()=>{jp()}});const so=()=>{const n=C();return h(()=>n.value.readingTime??null)},na=typeof{"/en/":{word:"About $word words",less1Minute:"Less than 1 minute",time:"About $time min"},"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}}>"u"?null:{"/en/":{word:"About $word words",less1Minute:"Less than 1 minute",time:"About $time min"},"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},oo=(n,a)=>{const{minutes:t,words:s}=n,{less1Minute:o,word:l,time:c}=a;return{time:t<1?o:c.replace("$time",Math.round(t).toString()),words:l.replace("$word",s.toString())}},Vt={words:"",time:""},io=()=>na?Pn(na):h(()=>null),Bp=()=>{if(typeof na>"u")return h(()=>Vt);const n=so(),a=io();return h(()=>n.value&&a.value?oo(n.value,a.value):Vt)},pn=()=>Ys(),V=()=>Ec(),Kn=()=>h(()=>!!pn().value.pure);var St=y({name:"EmptyComponent",setup:()=>()=>null});const Ra={"/demo/":[],"/posts/":[],"/note/c-sharp/":["quick_start"],"/note/golang/":[{text:"Concurrency",prefix:"concurrency/",collapsible:!0,children:["GMPModel"]},"endless","gin",{text:"Github Repos",prefix:"github-repos/",collapsible:!0,children:[{text:"7days Golang",prefix:"7days-golang/",collapsible:!0,children:["gee-web","preface","summary"]},{text:"Flower Corp",prefix:"flower-corp/",collapsible:!0,children:[{text:"Minidb",prefix:"minidb/",collapsible:!0,children:["minidb","preface"]}]}]},{text:"Go Gin Blog",prefix:"go-gin-blog/",collapsible:!0,children:["01.1","01.2","01.3","Preface"]},"go-jwt",{text:"Golang Daily Lib",prefix:"golang-daily-lib/",collapsible:!0,children:["cast","cobra","email","flag","fsnotify","go-flags","go-homedir","go-ini","godotenv","log","logrus","preface","uniplace-carbon","viper"]},{text:"Gorm",prefix:"gorm/",collapsible:!0,children:["01.1","01.2","01.3","01.4","01.5","gorm"]},{text:"Open Source Books",prefix:"open-source-books/",collapsible:!0,children:[{text:"Advanced Go Programming",prefix:"advanced-go-programming/",collapsible:!0,children:["04.1","04.2","04.3","04.4","Preface"]},{text:"High Performance Go",prefix:"high-performance-go/",collapsible:!0,children:[{text:"Performance Analysis",prefix:"performance-analysis/",collapsible:!0,children:["benchmark","pprof"]},"preface","summary"]},{text:"The Design And Implementation of Golang",prefix:"The-Design-and-Implementation-of-Golang/",collapsible:!0,children:["01.1","03.1","03.2","03.3","03.4","preface","summary"]},{text:"The Way to Go",prefix:"the-way-to-go/",collapsible:!0,children:[{text:"04",prefix:"04/",collapsible:!0,children:["04.1","04.2","04.3","04.4","04.5","04.6","04.7","04.8","04.9"]},{text:"05",prefix:"05/",collapsible:!0,children:["05.0","05.1","05.2","05.3","05.4","05.5","05.6"]},{text:"06",prefix:"06/",collapsible:!0,children:["06.1","06.2","06.3","06.4","06.5","06.6","06.7","06.8","06.9","06.10","6.11","06.12"]},{text:"07",prefix:"07/",collapsible:!0,children:["07.1","07.2","07.3","07.4","07.5","07.6"]},{text:"08",prefix:"08/",collapsible:!0,children:["08.0","08.1","08.2","08.3","08.4","08.5","08.6"]},{text:"09",prefix:"09/",collapsible:!0,children:["09.0","09.1"]},{text:"10",prefix:"10/",collapsible:!0,children:["10.0","10.1","10.2","10.3","10.4","10.5","10.6"]},{text:"11",prefix:"11/",collapsible:!0,children:["11.0","11.1","11.2","11.3","11.4","11.5","11.6","11.9"]},{text:"13",prefix:"13/",collapsible:!0,children:["13.1","13.2","13.3","13.4","13.5","13.6","13.7"]},{text:"14",prefix:"14/",collapsible:!0,children:["14.1","14.2","14.3","14.4","14.5","14.6","14.7","14.8","14.9","14.12","14.13","14.14","14.16","14.17"]}]}]},{text:"Uber Go Zap",prefix:"uber-go-zap/",collapsible:!0,children:["01.1"]}],"/note/docker/":[{text:"Docker Compose",prefix:"docker-compose/",collapsible:!0,children:["01.1","01.2","01.3","Preface"]},{text:"Docker Practice",prefix:"docker-practice/",collapsible:!0,children:["preface"]},{text:"Docker Tutorial",prefix:"docker-tutorial/",collapsible:!0,children:["docker-nginx","get-started"]}],"/note/javascript/":[{text:"Tutorial",prefix:"tutorial/",collapsible:!0,children:["00_preface"]}],"/note/linux/":[{text:"Vim",prefix:"vim/",collapsible:!0,children:["spf13-vim-plugin"]}],"/note/nginx/":["nginx"],"/note/rpc/":[{text:"G R P C",prefix:"gRPC/",collapsible:!0,children:["atls","basic_tutorial","generated_code","introduction","preface","quick_start"]},{text:"Protocol Buffers",prefix:"protocol-buffers/",collapsible:!0,children:["basics-go","language-guide-proto3","preface"]}],"/note/typescript/":["quick_start",{text:"Tutorial",prefix:"tutorial/",collapsible:!0,children:["00_preface"]}],"/note/vue/":[{text:"Vue 2",prefix:"vue-2/",collapsible:!0,children:["vue-cli","vue-router","vuex"]},{text:"Vue 3",prefix:"vue-3/",collapsible:!0,children:[{text:"Fundamentals",prefix:"fundamentals/",collapsible:!0,children:[{text:"01 Fundamentals",prefix:"01-fundamentals/",collapsible:!0,children:["00.start","01.1.create_app","01.2.template_syntax","01.3.reactivity_fundamental","01.4.computed_props","01.5.class_style_binding","01.6.conditional_rendering","01.7.list_rendering","01.8.event_handling","01.9.form_input_binding","01.10.lifecycle_hooks","01.11.watchers","01.12.template_refs","01.13.component_basics"]},{text:"02 Component",prefix:"02-component/",collapsible:!0,children:["02.1.registration","02.2.props","02.3.events","02.4.v_model","02.5.fallthrough_attributes","02.6.slots","02.7.provide_inject","02.8.async_component"]}]}]}],"/blog/golang/":["bytes_to_string_quickly",{text:"Go Gin Blog",prefix:"go-gin-blog/",collapsible:!0,children:["0.00","01.1","01.2","01.3"]},{text:"How",prefix:"how/",collapsible:!0,children:["1.impl_of_heap"]},"natural_sort",{text:"Why",prefix:"why/",collapsible:!0,children:["01.1.why_is_this_slicegrow_formula","01.2.why_hmap_overflowthreshold_loadfactory","3.why_cannot_value_using_pointerinterfacemethods","4.why_iterate_map_randomly"]}],"/blog/algorithm/":[{text:"Dynamic Programming",prefix:"dynamic-programming/",collapsible:!0,children:["01.dp_sc_optimization_summary","02.general_solution_of_stock_series_problem"]},{text:"Sort",prefix:"sort/",collapsible:!0,children:["01.QuickSort","02.MergeSort","03.HeapSort"]}],"/blog/raspberry-pi/":["clash-linux","pi-docker-blog","pi-go","pi-nginx"],"/blog/vuepress/":["ghaction","live2d_widget","migrate_to_v2","moe-counter","ssl"],"/reading/algorithm/":[{text:"Algorithms in C Part 1 4",prefix:"algorithms_in_c_part_1-4/",collapsible:!0,children:[{text:"01 Fundamentals",prefix:"01_fundamentals/",collapsible:!0,children:["01.0","01.1"]},{text:"02 Data Structures",prefix:"02_data_structures/",collapsible:!0,children:["03","03.0","03.1","03.2","03.3","03.4","03.5","03.6","03.7"]}]},{text:"Offer Oriented",prefix:"offer_oriented/",collapsible:!0,children:[{text:"A L D S",prefix:"AL_DS/",collapsible:!0,children:[{text:"01 Integer",prefix:"01_integer/",collapsible:!0,children:["01.0","01.1","01.2"]},{text:"02 Array",prefix:"02_array/",collapsible:!0,children:["02.1","02.2","02.3"]},{text:"03 String",prefix:"03_string/",collapsible:!0,children:["03.1","03.2","03.3"]},{text:"04 List",prefix:"04_List/",collapsible:!0,children:["04.1","04.2","04.3","04.4","04.5"]},{text:"05 Hashtable",prefix:"05_hashtable/",collapsible:!0,children:["05.1","05.2","05.3"]},{text:"06 Stack",prefix:"06_stack/",collapsible:!0,children:["06.1","06.2"]},{text:"07 Queue",prefix:"07_queue/",collapsible:!0,children:["07.1","07.2","07.3"]},{text:"08 Tree",prefix:"08_tree/",collapsible:!0,children:["08.1","08.2","08.3","08.4"]},{text:"09 Heap",prefix:"09_heap/",collapsible:!0,children:["09.1","09.2"]},{text:"10 Trie",prefix:"10_trie/",collapsible:!0,children:["10.1","10.2"]},{text:"11 Binary Search",prefix:"11_binary_search/",collapsible:!0,children:["11.1","11.2","11.3"]},{text:"12 Sort",prefix:"12_sort/",collapsible:!0,children:["12.1","12.2","12.3","12.4"]},{text:"13 Backtracking",prefix:"13_backtracking/",collapsible:!0,children:["13.1","13.2","13.3"]},{text:"14 Dynamic Programming",prefix:"14_dynamic_programming/",collapsible:!0,children:["14.1","14.2","14.3","14.4","14.5"]},{text:"15 Graph",prefix:"15-graph/",collapsible:!0,children:["15.1","15.2","15.3","15.4"]}]}]}],"/reading/nosql/":[{text:"The Design And Implementation of Redis",prefix:"The_Design_and_Implementation_of_Redis/",collapsible:!0,children:["01","01.1","01.2","01.3","preface"]}],"/reading/golang/":[{text:"7 Days Golang",prefix:"7-days-golang/",collapsible:!0,children:[{text:"01 Gee Web",prefix:"01-Gee-Web/",collapsible:!0,children:["00.0.preface","01.1.http_basic","01.2.context","01.3.trie_router","01.4.group","01.5.middleware","01.6.html_template","01.7.recover"]}]},{text:"Concurrency in Go",prefix:"concurrency-in-go/",collapsible:!0,children:["01.overview","03.sync","04.pattern","05.massive_concurrency"]},{text:"High Performance Go",prefix:"high-performance-go/",collapsible:!0,children:[{text:"01 Performance Analysis",prefix:"01-performance-analysis/",collapsible:!0,children:["01.1.benchmark","01.2.pprof"]},{text:"02 Datastructure",prefix:"02-datastructure/",collapsible:!0,children:["02.1.string_concat","02.2.slice","02.3.for-range","02.4.reflect","02.5.empty_struct","02.6.mem_alignment"]},{text:"03 Concurrency",prefix:"03-concurrency/",collapsible:!0,children:["03.1.mutex","03.2.once"]},{text:"04 Compile",prefix:"04-compile/",collapsible:!0,children:["04.1.reduce_exe_size","04.2.mem_escape","04.3.deadcode"]}]},{text:"The Design And Implementation of Golang",prefix:"the-design-and-implementation-of-golang/",collapsible:!0,children:[{text:"Part2 Foundation",prefix:"part2-foundation/",collapsible:!0,children:[{text:"Ch03 Datastructure",prefix:"ch03-datastructure/",collapsible:!0,children:["03.0.chpater_summary","03.1.array","03.2.slice","03.3.hashmap","03.4.string"]},{text:"Ch04 Basic",prefix:"ch04-basic/",collapsible:!0,children:["04.0.chapter_summary","04.1.function","04.2.interface","04.3.reflect"]},{text:"Ch05 Keyword",prefix:"ch05-keyword/",collapsible:!0,children:["05.0.chapter_summary","05.1.for_range","05.2.select","05.3.defer","05.4.panic_recover","05.5.make_new"]}]},{text:"Part3 Runtime",prefix:"part3-runtime/",collapsible:!0,children:[{text:"06 Concurrency",prefix:"06-concurrency/",collapsible:!0,children:["06.1.context","06.2.sync-primitives","06.3.timer","06.4.channel","06.5.goroutine","06.6.netpoll","06.7.sysmon"]},{text:"07 Memory",prefix:"07-memory/",collapsible:!0,children:["07.1.malloc","07.2.gc","07.3.stackmem"]}]}]}],"/interview/golang/":["golang"],"/interview/mysql/":["mysql"],"/interview/net/":["network"],"/interview/redis/":["redis"],"/leetcode/":[{text:"Category",prefix:"category/",collapsible:!0,children:[{text:"Array",prefix:"array/",collapsible:!0,children:["1_Two_Sum","35_Search_insert_position","118.pascals-triangle","119.Pascals-Triangle-II","151_reverse_words_in_string","153.Find-Minimum-In-Rotated-Sorted-Array","167.Two-sum-ii-input-array-is-sorted","557.Reverse-Words-In-a-String-III","724_Pivot_Index","Concepts"]},{text:"Hashtable",prefix:"hashtable/",collapsible:!0,children:["705.Design-HashSet","706.Design-HashMap","concepts"]}]},{text:"Solution",prefix:"solution/",collapsible:!0,children:["1.twoSum","3.longest_substring_without_repeating_characters","5.longest_palindromic_substring","15.three_sum","20.valid_parentheses","21.merge_two_sorted_lists","25.reverse_nodes_in_k_group","33.search_in_rotated_sorted_array","46.permutations","53.maximum_subarray","88.merge_sorted_array","102.binary_tree_level_order_traversal","103.binary_tree_zigzag_level_order_traversal","121.122.123.188.309.714.stock_series","141.142.linked_list_cycle","146.LRU_cache","200.number_of_islands","206.reverse_linked_list","215.kth_ele_in_arr"]}],"/cheatsheet/git/":["rewrite_history"],"/cheatsheet/golang/":["SliceTricks"],"/tool/golang/":[""],"/tool/linux/":[""]},ro=n=>{const{icon:a="",color:t,size:s}=n,o={};return t&&(o.color=t),s&&(o.height=Number.isNaN(Number(s))?s:`${s}px`),Tn(a)?i("img",{class:"icon",src:a,"no-view":"",style:o}):Re(a)?i("img",{class:"icon",src:F(a),"no-view":"",style:o}):i(Y("FontIcon"),n)};ro.displayName="HopeIcon";var en=ro,j=(n=>(n.type="y",n.title="t",n.shortTitle="s",n.icon="i",n.author="a",n.date="d",n.localizedDate="l",n.category="c",n.tag="g",n.isEncrypted="n",n.isOriginal="o",n.readingTime="r",n.excerpt="e",n.sticky="u",n.cover="v",n.index="I",n.order="O",n))(j||{}),lo=(n=>(n.article="a",n.home="h",n.slide="s",n.page="p",n))(lo||{});const Bn=(n,a=!1)=>{const t=Q(),{fullPath:s,meta:o,name:l}=re(t,encodeURI(n));return{text:!a&&o[j.shortTitle]?o[j.shortTitle]:o[j.title]||n,link:l==="404"?n:s,...o[j.icon]?{icon:o[j.icon]}:{}}},pe=()=>{const n=Q(),a=sn();return t=>{if(t)if(Re(t))a.path!==t&&n.push(t);else if(Tn(t)||as(t))window&&window.open(t);else{const s=a.path.slice(0,a.path.lastIndexOf("/"));n.push(`${s}/${encodeURI(t)}`)}}},co=()=>{const n=V(),a=z();return h(()=>{const{author:t}=a.value;return t?ne(t):t===!1?[]:ne(n.value.author,!1)})},qp=()=>{const n=z();return h(()=>Is(n.value.category).map(a=>{var t,s;return{name:a,path:((s=(t=W(Symbol.for("categoryMap")))==null?void 0:t.value.map[a])==null?void 0:s.path)||""}}))},Np=()=>{const n=z();return h(()=>Ps(n.value.tag).map(a=>{var t,s;return{name:a,path:((s=(t=W(Symbol.for("tagMap")))==null?void 0:t.value.map[a])==null?void 0:s.path)||""}}))},Hp=()=>{const n=z(),a=C();return h(()=>{const t=ha(n.value.date);if(t)return t;const{createdTime:s}=a.value.git||{};return s?new Date(s):null})},Fp=()=>{const n=V(),a=C(),t=z(),s=co(),o=qp(),l=Np(),c=Hp(),p=so(),u=Bp(),d=h(()=>({author:s.value,category:o.value,date:c.value,localizedDate:a.value.localizedDate,tag:l.value,isOriginal:t.value.isOriginal||!1,readingTime:p.value,readingTimeLocale:u.value,pageview:"pageview"in t.value?t.value.pageview:!0})),v=h(()=>"pageInfo"in t.value?t.value.pageInfo:"pageInfo"in n.value?n.value.pageInfo:null);return{info:d,items:v}},de=()=>{const n=pn(),a=w(!1),t=w(!1),s=()=>{a.value=window.innerWidth<=(n.value.mobileBreakPoint||719),t.value=window.innerWidth>=(n.value.pcBreakPoint||1440)};return R(()=>{s(),q("resize",s,!1),q("orientationchange",s,!1)}),{isMobile:a,isPC:t}},po=Symbol(""),ue=()=>{const n=W(po);if(!n)throw new Error("useDarkmode() is called without provider.");return n},Up=n=>{const a=pn(),t=nl(),s=Wn("vuepress-theme-hope-scheme","auto"),o=h(()=>a.value.darkmode||"switch"),l=h(()=>{const p=o.value;return p==="disable"?!1:p==="enable"?!0:p==="auto"?t.value:p==="toggle"?s.value==="dark":s.value==="dark"||s.value==="auto"&&t.value}),c=h(()=>{const p=o.value;return p==="switch"||p==="toggle"});n.provide(po,{canToggle:c,config:o,isDarkmode:l,status:s}),Object.defineProperties(n.config.globalProperties,{$isDarkmode:{get:()=>l.value}})},Wp=()=>{const{isDarkmode:n}=ue(),a=(t=n.value)=>document.documentElement.setAttribute("data-theme",t?"dark":"light");R(()=>{S(n,a,{immediate:!0})})};var Z=y({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],setup(n,{attrs:a,emit:t,slots:s}){const o=sn(),l=ps(),c=Fn(n,"config"),p=h(()=>Tn(c.value.link)),u=h(()=>as(c.value.link)||Pi(c.value.link)),d=h(()=>u.value?void 0:c.value.target||(p.value?"_blank":void 0)),v=h(()=>d.value==="_blank"),m=h(()=>!p.value&&!u.value&&!v.value),g=h(()=>u.value?void 0:c.value.rel||(v.value?"noopener noreferrer":void 0)),_=h(()=>c.value.ariaLabel||c.value.text),b=h(()=>{if(n.exact)return!1;const f=X(l.value.locales);return f.length?f.every(k=>k!==c.value.link):c.value.link!=="/"}),L=h(()=>m.value?c.value.activeMatch?new RegExp(c.value.activeMatch).test(o.path):b.value?wn(o.path,c.value.link):o.path===c.value.link:!1);return()=>{var f,k,E;const{text:T,icon:P,link:x}=c.value;return m.value?i(H,{to:x,"aria-label":_.value,...a,class:["nav-link",{active:L.value},a.class],onFocusout:()=>t("focusout")},()=>{var D,A,I;return((D=s.default)==null?void 0:D.call(s))||[((A=s.before)==null?void 0:A.call(s))||i(en,{icon:P}),T,(I=s.after)==null?void 0:I.call(s)]}):i("a",{href:x,rel:g.value,target:d.value,"aria-label":_.value,...a,class:["nav-link",a.class],onFocusout:()=>t("focusout")},((f=s.default)==null?void 0:f.call(s))||[((k=s.before)==null?void 0:k.call(s))||i(en,{icon:P}),T,n.noExternalLinkIcon?null:i(Js),(E=s.after)==null?void 0:E.call(s)])}}});const Nn=(n,a,t=!1)=>"activeMatch"in a?new RegExp(a.activeMatch).test(n.path):ba(n,a.link)?!0:a.children&&!t?a.children.some(s=>Nn(n,s)):!1,uo=(n,a)=>a.type==="group"?a.children.some(t=>t.type==="group"?uo(n,t):t.type==="page"&&Nn(n,t,!0))||"prefix"in a&&ba(n,a.prefix):!1,vo=(n,a)=>U(n.link)?i(Z,{...a,config:n}):i("p",a,[i(en,{icon:n.icon}),n.text]),mo=n=>{const a=sn();return n?i("ul",{class:"sidebar-sub-headers"},n.map(t=>{const s=Nn(a,t,!0);return i("li",{class:"sidebar-sub-header"},[vo(t,{class:["sidebar-link","heading",{active:s}]}),mo(t.children)])})):null},We=(n="",a="")=>Re(a)?a:`${es(n)}${a}`,Kp=(n,a)=>{const t=C();return{type:"heading",text:n.title,link:`${t.value.path}#${n.slug}`,children:Oa(n.children,a)}},Oa=(n,a)=>a>0?n.map(t=>Kp(t,a-1)):[],go=n=>{const a=C();return Oa(a.value.headers,n)},ea=(n,a,t="")=>{const s=C(),o=(l,c=t)=>{var p;const u=U(l)?Bn(We(c,l)):l.link?{...l,...Ae(l.link)?{}:{link:Bn(We(c,l.link)).link}}:l;if("children"in u){const d=We(c,u.prefix),v=u.children==="structure"?Ra[d]:u.children;return{type:"group",...u,prefix:d,children:v.map(m=>o(m,d))}}return{type:"page",...u,children:u.link===s.value.path?Oa(((p=s.value.headers[0])==null?void 0:p.level)===1?s.value.headers[0].children:s.value.headers,a):[]}};return n.map(l=>o(l))},Jp=(n,a)=>{const t=C(),s=X(n).sort((o,l)=>l.length-o.length);for(const o of s)if(wn(decodeURI(t.value.path),o)){const l=n[o];return l?ea(l==="structure"?Ra[o]:l==="heading"?go(a):l,a,o):[]}return console.warn(`${t.value.path} is missing sidebar config.`),[]},Qp=()=>{const n=cn(),a=z(),t=V(),s=a.value.home?!1:a.value.sidebar??t.value.sidebar??"structure",o=a.value.headerDepth??t.value.headerDepth??2;return s===!1?[]:s==="heading"?go(o):s==="structure"?ea(Ra[n.value],o,n.value):Pe(s)?ea(s,o):te(s)?Jp(s,o):[]},_o=Symbol(""),Yp=()=>{const n=h(()=>Qp());In(_o,n)},Va=()=>{const n=W(_o);if(!n)throw new Error("useSidebarItems() is called without provider.");return n};var Zp=y({name:"PageFooter",setup(){const n=z(),a=V(),t=co(),s=h(()=>{const{copyright:c,footer:p}=n.value;return p!==!1&&!!(c||p||a.value.displayFooter)}),o=h(()=>{const{footer:c}=n.value;return c===!1?!1:U(c)?c:a.value.footer||""}),l=h(()=>"copyright"in n.value?n.value.copyright:"copyright"in a.value?a.value.copyright:t.value.length?`Copyright © ${new Date().getFullYear()} ${t.value[0].name}`:!1);return()=>s.value?i("footer",{class:"footer-wrapper"},[o.value?i("div",{class:"footer",innerHTML:o.value}):null,l.value?i("div",{class:"copyright",innerHTML:l.value}):null]):null}}),ho=y({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},setup(n,{slots:a}){const t=C(),s=Fn(n,"config"),o=h(()=>s.value.ariaLabel||s.value.text),l=w(!1);S(()=>t.value.path,()=>{l.value=!1});const c=p=>{p.detail===0&&(l.value=!l.value)};return()=>{var p;return i("div",{class:["dropdown-wrapper",{open:l.value}]},[i("button",{type:"button",class:"dropdown-title","aria-label":o.value,onClick:c},[((p=a.title)==null?void 0:p.call(a))||i("span",{class:"title"},[i(en,{icon:s.value.icon}),n.config.text]),i("span",{class:"arrow"}),i("ul",{class:"nav-dropdown"},s.value.children.map((u,d)=>{const v=d===s.value.children.length-1;return i("li",{class:"dropdown-item"},"children"in u?[i("h4",{class:"dropdown-subtitle"},u.link?i(Z,{config:u,onFocusout:()=>{u.children.length===0&&v&&(l.value=!1)}}):i("span",u.text)),i("ul",{class:"dropdown-subitem-wrapper"},u.children.map((m,g)=>i("li",{class:"dropdown-subitem"},i(Z,{config:m,onFocusout:()=>{g===u.children.length-1&&v&&(l.value=!1)}}))))]:i(Z,{config:u,onFocusout:()=>{v&&(l.value=!1)}}))}))])])}}});const bo=()=>i(O,{name:"i18n"},()=>[i("path",{d:"M379.392 460.8 494.08 575.488l-42.496 102.4L307.2 532.48 138.24 701.44l-71.68-72.704L234.496 460.8l-45.056-45.056c-27.136-27.136-51.2-66.56-66.56-108.544h112.64c7.68 14.336 16.896 27.136 26.112 35.84l45.568 46.08 45.056-45.056C382.976 312.32 409.6 247.808 409.6 204.8H0V102.4h256V0h102.4v102.4h256v102.4H512c0 70.144-37.888 161.28-87.04 210.944L378.88 460.8zM576 870.4 512 1024H409.6l256-614.4H768l256 614.4H921.6l-64-153.6H576zM618.496 768h196.608L716.8 532.48 618.496 768z"})]);bo.displayName="I18nIcon";const ko=(n,a="")=>U(n)?Bn(`${a}${n}`):"children"in n?{...n,...n.link&&!Ae(n.link)?Bn(`${a}${n.link}`):{},children:n.children.map(t=>ko(t,`${a}${n.prefix||""}`))}:{...n,link:Ae(n.link)?n.link:Bn(`${a}${n.link}`).link},fo=()=>h(()=>(V().value.navbar||[]).map(n=>ko(n))),Xp=()=>{const n=Q(),a=sn(),t=cn(),s=oe(),o=pn(),l=V();return h(()=>{const c=X(s.value.locales);if(c.length<2)return null;const{path:p,fullPath:u}=n.currentRoute.value,{navbarLocales:d}=l.value;return{text:"",ariaLabel:d==null?void 0:d.selectLangAriaLabel,children:[...c.map(v=>{var m,g,_;const b=((m=s.value.locales)==null?void 0:m[v])??{},L=((g=o.value.locales)==null?void 0:g[v])??{},f=b.lang||"",k=((_=L.navbarLocales)==null?void 0:_.langName)??f;let E;if(f===s.value.lang)E=p;else{const T=p.replace(t.value,v);E=n.getRoutes().some(P=>P.path===T)?u.replace(p,T):L.home??v}return{text:k,link:E}}),...Dn(o.value.extraLocales||{}).map(([v,m])=>({text:v,link:m.replace(":route",a.path.replace(t.value,""))}))]}})},nd=()=>{const n=V(),a=h(()=>n.value.repo||null),t=h(()=>a.value?yr(a.value):null),s=h(()=>a.value?xs(a.value):null),o=h(()=>t.value?n.value.repoLabel??(s.value===null?"Source":s.value):null);return h(()=>!t.value||!o.value||n.value.repoDisplay===!1?null:{type:s.value||"Source",label:o.value,link:t.value})};var ed=y({name:"LanguageDropdown",setup(){const n=Xp();return()=>n.value?i("div",{class:"nav-item"},i(ho,{class:"i18n-dropdown",config:n.value},{title:()=>{var a;return i(bo,{"aria-label":(a=n.value)==null?void 0:a.ariaLabel,style:{width:"1rem",height:"1rem",verticalAlign:"middle"}})}})):null}}),ad=y({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(n){const a=C(),t=Fn(n,"config"),s=h(()=>t.value.ariaLabel||t.value.text),o=w(!1);S(()=>a.value.path,()=>{o.value=!1});const l=(c,p)=>p[p.length-1]===c;return()=>[i("button",{type:"button",class:["nav-screen-dropdown-title",{active:o.value}],"aria-label":s.value,onClick:()=>{o.value=!o.value}},[i("span",{class:"title"},[i(en,{icon:t.value.icon}),n.config.text]),i("span",{class:["arrow",o.value?"down":"end"]})]),i("ul",{class:["nav-screen-dropdown",{hide:!o.value}]},t.value.children.map(c=>i("li",{class:"dropdown-item"},"children"in c?[i("h4",{class:"dropdown-subtitle"},c.link?i(Z,{config:c,onFocusout:()=>{l(c,t.value.children)&&c.children.length===0&&(o.value=!1)}}):i("span",c.text)),i("ul",{class:"dropdown-subitem-wrapper"},c.children.map(p=>i("li",{class:"dropdown-subitem"},i(Z,{config:p,onFocusout:()=>{l(p,c.children)&&l(c,t.value.children)&&(o.value=!1)}}))))]:i(Z,{config:c,onFocusout:()=>{l(c,t.value.children)&&(o.value=!1)}}))))]}}),td=y({name:"NavScreenLinks",setup(){const n=fo();return()=>n.value.length?i("nav",{class:"nav-screen-links"},n.value.map(a=>i("div",{class:"navbar-links-item"},"children"in a?i(ad,{config:a}):i(Z,{config:a})))):null}});const yo=()=>i(O,{name:"dark"},()=>i("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));yo.displayName="DarkIcon";const Eo=()=>i(O,{name:"light"},()=>i("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Eo.displayName="LightIcon";const wo=()=>i(O,{name:"auto"},()=>i("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));wo.displayName="AutoIcon";const Lo=()=>i(O,{name:"enter-fullscreen"},()=>i("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Lo.displayName="EnterFullScreenIcon";const Ao=()=>i(O,{name:"cancel-fullscreen"},()=>i("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Ao.displayName="CancelFullScreenIcon";const To=()=>i(O,{name:"outlook"},()=>[i("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);To.displayName="OutlookIcon";var Io=y({name:"AppearanceSwitch",setup(){const{config:n,status:a}=ue(),t=()=>{n.value==="switch"?a.value={light:"dark",dark:"auto",auto:"light"}[a.value]:a.value=a.value==="light"?"dark":"light"};return()=>i("button",{type:"button",id:"appearance-switch",onClick:()=>t()},[i(wo,{style:{display:a.value==="auto"?"block":"none"}}),i(yo,{style:{display:a.value==="dark"?"block":"none"}}),i(Eo,{style:{display:a.value==="light"?"block":"none"}})])}}),sd=y({name:"AppearanceMode",setup(){const n=V(),{canToggle:a}=ue(),t=h(()=>n.value.outlookLocales.darkmode);return()=>a.value?i("div",{class:"appearance-wrapper"},[i("label",{class:"appearance-title",for:"appearance-switch"},t.value),i(Io)]):null}}),od=y({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(n){const a=(t="")=>{const s=document.documentElement.classList,o=X(n.themeColor).map(l=>`theme-${l}`);if(!t){localStorage.removeItem("theme"),s.remove(...o);return}s.remove(...o.filter(l=>l!==`theme-${t}`)),s.add(`theme-${t}`),localStorage.setItem("theme",t)};return R(()=>{const t=localStorage.getItem("theme");t&&a(t)}),()=>i("ul",{id:"theme-color-picker"},[i("li",i("span",{class:"theme-color",onClick:()=>a()})),Dn(n.themeColor).map(([t,s])=>i("li",i("span",{style:{background:s},onClick:()=>a(t)})))])}}),id=y({name:"ThemeColor",setup(){const n=pn(),a=V(),t=h(()=>a.value.outlookLocales.themeColor),s=h(()=>{const{themeColor:o}=n.value;return o===!1?null:o});return()=>s.value?i("div",{class:"theme-color-wrapper"},[i("label",{class:"theme-color-title",for:"theme-color-picker"},t.value),i(od,{themeColor:s.value})]):null}}),Po=y({name:"ToggleFullScreenButton",setup(){const n=V(),{isSupported:a,isFullscreen:t,toggle:s}=Ea(),o=h(()=>n.value.outlookLocales.fullscreen);return()=>a?i("div",{class:"full-screen-wrapper"},[i("label",{class:"full-screen-title",for:"full-screen-switch"},o.value),i("button",{type:"button",class:"full-screen",id:"full-screen-switch",ariaPressed:t.value,onClick:()=>s()},t.value?i(Ao):i(Lo))]):null}}),Do=y({name:"OutlookSettings",setup(){const n=pn(),a=Kn(),t=h(()=>!a.value&&!!n.value.themeColor),s=h(()=>!a.value&&n.value.fullscreen);return()=>i(De,()=>[t.value?i(id):null,i(sd),s.value?i(Po):null])}}),rd=y({name:"NavScreen",props:{show:Boolean},emits:["close"],setup(n,{emit:a,slots:t}){const s=C(),{isMobile:o}=de(),l=w(),c=js(l);return R(()=>{l.value=document.body,S(o,p=>{!p&&n.show&&(c.value=!1,a("close"))}),S(()=>s.value.path,()=>{c.value=!1,a("close")})}),ae(()=>{c.value=!1}),()=>i(qn,{name:"fade",onEnter:()=>{c.value=!0},onAfterLeave:()=>{c.value=!1}},()=>{var p,u;return n.show?i("div",{id:"nav-screen"},i("div",{class:"container"},[(p=t.before)==null?void 0:p.call(t),i(td),i("div",{class:"outlook-wrapper"},i(Do)),(u=t.after)==null?void 0:u.call(t)])):null})}}),ld=y({name:"NavbarBrand",setup(){const n=cn(),a=oe(),t=V(),s=h(()=>t.value.home||n.value),o=h(()=>a.value.title),l=h(()=>t.value.logo?F(t.value.logo):null),c=h(()=>t.value.logoDark?F(t.value.logoDark):null);return()=>i(H,{to:s.value,class:"brand"},()=>[l.value?i("img",{class:["logo",{light:!!c.value}],src:l.value,alt:o.value}):null,c.value?i("img",{class:["logo dark"],src:c.value,alt:o.value}):null,o.value?i("span",{class:["site-name",{"hide-in-pad":l.value&&t.value.hideSiteNameOnMobile!==!1}]},o.value):null])}}),cd=y({name:"NavbarLinks",setup(){const n=fo();return()=>n.value.length?i("nav",{class:"nav-links"},n.value.map(a=>i("div",{class:"nav-item hide-in-mobile"},"children"in a?i(ho,{config:a}):i(Z,{config:a})))):null}}),pd=y({name:"RepoLink",components:{BitbucketIcon:ws,GiteeIcon:Es,GitHubIcon:fs,GitLabIcon:ys,SourceIcon:Ls},setup(){const n=nd();return()=>n.value?i("div",{class:"nav-item"},i("a",{class:"repo-link",href:n.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":n.value.label},i(Y(`${n.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const xo=({active:n=!1},{emit:a})=>i("button",{type:"button",class:["toggle-navbar-button",{"is-active":n}],"aria-label":"Toggle Navbar","aria-expanded":n,"aria-controls":"nav-screen",onClick:()=>a("toggle")},i("span",{class:"button-container"},[i("span",{class:"button-top"}),i("span",{class:"button-middle"}),i("span",{class:"button-bottom"})]));xo.displayName="ToggleNavbarButton";var dd=xo;const aa=(n,{emit:a})=>i("button",{type:"button",class:"toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>a("toggle")},i("span",{class:"icon"}));aa.displayName="ToggleSidebarButton",aa.emits=["toggle"];var ud=aa,vd=y({name:"OutlookButton",setup(){const{isSupported:n}=Ea(),a=pn(),t=Kn(),s=C(),{canToggle:o}=ue(),l=w(!1),c=h(()=>!t.value&&!!a.value.themeColor),p=h(()=>!t.value&&a.value.fullscreen&&n);return S(()=>s.value.path,()=>{l.value=!1}),()=>o.value||p.value||c.value?i("div",{class:"nav-item hide-in-mobile"},o.value&&!p.value&&!c.value?i(Io):p.value&&!o.value&&!c.value?i(Po):i("button",{type:"button",class:["outlook-button",{open:l.value}],tabindex:"-1","aria-hidden":!0},[i(To),i("div",{class:"outlook-dropdown"},i(Do))])):null}}),md=y({name:"NavBar",emits:["toggleSidebar"],setup(n,{emit:a,slots:t}){const s=V(),{isMobile:o}=de(),l=w(!1),c=h(()=>{const{navbarAutoHide:v="mobile"}=s.value;return v!=="none"&&(v==="always"||o.value)}),p=h(()=>s.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),u={Brand:ld,Language:ed,Links:cd,Repo:pd,Outlook:vd,Search:N("Docsearch")?Y("Docsearch"):N("SearchBox")?Y("SearchBox"):St},d=v=>u[v]??(N(v)?Y(v):St);return()=>{var v,m,g,_,b,L;return[i("header",{class:["navbar",{"auto-hide":c.value,"hide-icon":s.value.navbarIcon===!1}],id:"navbar"},[i("div",{class:"navbar-start"},[i(ud,{onToggle:()=>{l.value&&(l.value=!1),a("toggleSidebar")}}),(v=t.startBefore)==null?void 0:v.call(t),(p.value.start||[]).map(f=>i(d(f))),(m=t.startAfter)==null?void 0:m.call(t)]),i("div",{class:"navbar-center"},[(g=t.centerBefore)==null?void 0:g.call(t),(p.value.center||[]).map(f=>i(d(f))),(_=t.centerAfter)==null?void 0:_.call(t)]),i("div",{class:"navbar-end"},[(b=t.endBefore)==null?void 0:b.call(t),(p.value.end||[]).map(f=>i(d(f))),(L=t.endAfter)==null?void 0:L.call(t),i(dd,{active:l.value,onToggle:()=>{l.value=!l.value}})])]),i(rd,{show:l.value,onClose:()=>{l.value=!1}},{before:()=>{var f;return(f=t.screenTop)==null?void 0:f.call(t)},after:()=>{var f;return(f=t.screenBottom)==null?void 0:f.call(t)}})]}}}),gd=y({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(n){const a=sn();return()=>[vo(n.config,{class:["sidebar-link",`sidebar-${n.config.type}`,{active:Nn(a,n.config,!0)}],exact:!0}),mo(n.config.children)]}}),_d=y({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(n,{emit:a}){const t=sn(),s=h(()=>Nn(t,n.config)),o=h(()=>Nn(t,n.config,!0));return()=>{const{collapsible:l,children:c=[],icon:p,prefix:u,link:d,text:v}=n.config;return i("section",{class:"sidebar-group"},[i(l?"button":"p",{class:["sidebar-heading",{clickable:l||d,exact:o.value,active:s.value}],...l?{type:"button",onClick:()=>a("toggle"),onKeydown:m=>{m.key==="Enter"&&a("toggle")}}:{}},[i(en,{icon:p}),d?i(Z,{class:"title",config:{text:v,link:d},noExternalLinkIcon:!0}):i("span",{class:"title"},v),l?i("span",{class:["arrow",n.open?"down":"end"]}):null]),n.open||!l?i(Ro,{key:u,config:c}):null])}}}),Ro=y({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(n){const a=sn(),t=w(-1),s=o=>{t.value=o===t.value?-1:o};return S(()=>a.path,()=>{const o=n.config.findIndex(l=>uo(a,l));t.value=o},{immediate:!0,flush:"post"}),()=>i("ul",{class:"sidebar-links"},n.config.map((o,l)=>i("li",o.type==="group"?i(_d,{config:o,open:l===t.value,onToggle:()=>s(l)}):i(gd,{config:o}))))}}),hd=y({name:"SideBar",setup(n,{slots:a}){const t=sn(),s=V(),o=Va(),l=w();return R(()=>{S(()=>t.hash,c=>{const p=document.querySelector(`.sidebar a.sidebar-link[href="${t.path}${c}"]`);if(!p)return;const{top:u,height:d}=l.value.getBoundingClientRect(),{top:v,height:m}=p.getBoundingClientRect();v<u?p.scrollIntoView(!0):v+m>u+d&&p.scrollIntoView(!1)})}),()=>{var c,p,u;return i("aside",{class:["sidebar",{"hide-icon":s.value.sidebarIcon===!1}],id:"sidebar",ref:l},[(c=a.top)==null?void 0:c.call(a),((p=a.default)==null?void 0:p.call(a))||i(Ro,{config:o.value}),(u=a.bottom)==null?void 0:u.call(a)])}}}),Sa=y({name:"CommonWrapper",props:{noNavbar:Boolean,noSidebar:Boolean},setup(n,{slots:a}){const t=Q(),s=C(),o=z(),l=V(),{isMobile:c,isPC:p}=de(),[u,d]=Xe(!1),[v,m]=Xe(!1),g=Va(),_=w(!1),b=h(()=>n.noNavbar||o.value.navbar===!1||l.value.navbar===!1?!1:!!(s.value.title||l.value.logo||l.value.repo||l.value.navbar)),L=h(()=>n.noSidebar?!1:o.value.sidebar!==!1&&g.value.length!==0&&!o.value.home),f={x:0,y:0},k=D=>{f.x=D.changedTouches[0].clientX,f.y=D.changedTouches[0].clientY},E=D=>{const A=D.changedTouches[0].clientX-f.x,I=D.changedTouches[0].clientY-f.y;Math.abs(A)>Math.abs(I)*1.5&&Math.abs(A)>40&&(A>0&&f.x<=80?d(!0):d(!1))},T=h(()=>o.value.home?!1:o.value.toc||l.value.toc!==!1&&o.value.toc!==!1),P=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let x=0;return q("scroll",Tr(()=>{const D=P();D<=58||D<x?_.value=!1:x+200<D&&!u.value&&(_.value=!0),x=D},300,!0)),S(c,D=>{D||d(!1)}),R(()=>{const D=js(document.body);S(u,I=>{D.value=I});const A=t.afterEach(()=>{d(!1)});ae(()=>{D.value=!1,A()})}),()=>i(N("GlobalEncrypt")?Y("GlobalEncrypt"):ks,()=>{var D;return i("div",{class:["theme-container",{"no-navbar":!b.value,"no-sidebar":!L.value&&!(a.sidebar||a.sidebarTop||a.sidebarBottom),"has-toc":T.value,"hide-navbar":_.value,"sidebar-collapsed":!c.value&&!p.value&&v.value,"sidebar-open":c.value&&u.value},o.value.containerClass||""],onTouchStart:k,onTouchEnd:E},[b.value?i(md,{onToggleSidebar:()=>d()},{startBefore:()=>{var A;return(A=a.navbarStartBefore)==null?void 0:A.call(a)},startAfter:()=>{var A;return(A=a.navbarStartAfter)==null?void 0:A.call(a)},centerBefore:()=>{var A;return(A=a.navbarCenterBefore)==null?void 0:A.call(a)},centerAfter:()=>{var A;return(A=a.navbarCenterAfter)==null?void 0:A.call(a)},endBefore:()=>{var A;return(A=a.navbarEndBefore)==null?void 0:A.call(a)},endAfter:()=>{var A;return(A=a.navbarEndAfter)==null?void 0:A.call(a)},screenTop:()=>{var A;return(A=a.navScreenTop)==null?void 0:A.call(a)},screenBottom:()=>{var A;return(A=a.navScreenBottom)==null?void 0:A.call(a)}}):null,i(qn,{name:"fade"},()=>u.value?i("div",{class:"sidebar-mask",onClick:()=>d(!1)}):null),i(qn,{name:"fade"},()=>c.value?null:i("div",{class:"toggle-sidebar-wrapper",onClick:()=>m()},i("span",{class:["arrow",v.value?"end":"start"]}))),i(hd,{},{...a.sidebar?{default:()=>{var A;return(A=a.sidebar)==null?void 0:A.call(a)}}:{},top:()=>{var A;return(A=a.sidebarTop)==null?void 0:A.call(a)},bottom:()=>{var A;return(A=a.sidebarBottom)==null?void 0:A.call(a)}}),(D=a.default)==null?void 0:D.call(a),i(Zp)])})}}),M=y({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},setup(n,{slots:a}){const t=o=>{o.style.transition=`transform ${n.duration}s ease-in-out ${n.delay}s, opacity ${n.duration}s ease-in-out ${n.delay}s`,o.style.transform="translateY(-20px)",o.style.opacity="0"},s=o=>{o.style.transform="translateY(0)",o.style.opacity="1"};return()=>i(n.type==="single"?qn:Ii,{name:"drop",appear:n.appear,onAppear:t,onAfterAppear:s,onEnter:t,onAfterEnter:s,onBeforeLeave:t},()=>{var o;return(o=a.default)==null?void 0:o.call(a)})}});const ta=({custom:n})=>i(ma,{class:["theme-hope-content",{custom:n}]});ta.displayName="MarkdownContent",ta.props={custom:Boolean};var Ca=ta;const Oo=()=>i(O,{name:"author"},()=>i("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Oo.displayName="AuthorIcon";const Vo=()=>i(O,{name:"calendar"},()=>i("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Vo.displayName="CalendarIcon";const So=()=>i(O,{name:"category"},()=>i("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));So.displayName="CategoryIcon";const Co=()=>i(O,{name:"eye"},()=>i("path",{d:"M992 512.096c0-5.76-.992-10.592-1.28-11.136-.192-2.88-1.152-8.064-2.08-10.816-.256-.672-.544-1.376-.832-2.08-.48-1.568-1.024-3.104-1.6-4.32C897.664 290.112 707.104 160 512 160c-195.072 0-385.632 130.016-473.76 322.592-1.056 2.112-1.792 4.096-2.272 5.856a55.512 55.512 0 00-.64 1.6c-1.76 5.088-1.792 8.64-1.632 7.744-.832 3.744-1.568 11.168-1.568 11.168-.224 2.272-.224 4.032.032 6.304 0 0 .736 6.464 1.088 7.808.128 1.824.576 4.512 1.12 6.976h-.032c.448 2.08 1.12 4.096 1.984 6.08.48 1.536.992 2.976 1.472 4.032C126.432 733.856 316.992 864 512 864c195.136 0 385.696-130.048 473.216-321.696 1.376-2.496 2.24-4.832 2.848-6.912.256-.608.48-1.184.672-1.728 1.536-4.48 1.856-8.32 1.728-8.32l-.032.032c.608-3.104 1.568-7.744 1.568-13.28zM512 672c-88.224 0-160-71.776-160-160s71.776-160 160-160 160 71.776 160 160-71.776 160-160 160z"}));Co.displayName="EyeIcon";const $o=()=>i(O,{name:"fire"},()=>i("path",{d:"M726.4 201.6c-12.8-9.6-28.8-6.4-38.4 0-9.6 9.6-16 25.6-9.6 38.4 6.4 12.8 9.6 28.8 12.8 44.8C604.8 83.2 460.8 38.4 454.4 35.2c-9.6-3.2-22.4 0-28.8 6.4-9.6 6.4-12.8 19.2-9.6 28.8 12.8 86.4-25.6 188.8-115.2 310.4-6.4-25.6-16-51.2-32-80-9.6-9.6-22.4-16-35.2-12.8-16 3.2-25.6 12.8-25.6 28.8-3.2 48-25.6 92.8-51.2 140.8C134.4 499.2 112 544 102.4 592c-32 150.4 99.2 329.6 233.6 380.8 9.6 3.2 19.2 6.4 32 9.6-25.6-19.2-41.6-51.2-48-96C294.4 691.2 505.6 640 515.2 460.8c153.6 105.6 224 336 137.6 505.6 3.2 0 6.4-3.2 9.6-3.2 0 0 3.2 0 3.2-3.2 163.2-89.6 252.8-208 259.2-345.6 16-211.2-163.2-390.4-198.4-412.8z"}));$o.displayName="FireIcon";const Mo=()=>i(O,{name:"print"},()=>i("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Mo.displayName="PrintIcon";const zo=()=>i(O,{name:"tag"},()=>i("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));zo.displayName="TagIcon";const jo=()=>i(O,{name:"timer"},()=>i("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));jo.displayName="TimerIcon";const Go=()=>i(O,{name:"word"},()=>[i("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),i("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Go.displayName="WordIcon";const vn=()=>{const n=V();return h(()=>n.value.metaLocales)};var bd=y({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(n){const a=vn();return()=>n.author.length?i("span",{class:"page-author-info","aria-label":`${a.value.author}${n.pure?"":"🖊"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(Oo),i("span",n.author.map(t=>t.url?i("a",{class:"page-author-item",href:t.url,target:"_blank",rel:"noopener noreferrer"},t.name):i("span",{class:"page-author-item"},t.name))),i("span",{property:"author",content:n.author.map(t=>t.name).join(", ")})]):null}}),kd=y({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(n){const a=Q(),t=C(),s=vn(),o=(l,c="")=>{c&&t.value.path!==c&&(l.preventDefault(),a.push(c))};return()=>n.category.length?i("span",{class:"page-category-info","aria-label":`${s.value.category}${n.pure?"":"🌈"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(So),n.category.map(({name:l,path:c})=>i("span",{class:["page-category-item",{[`category${xe(l,9)}`]:!n.pure,clickable:c}],role:c?"navigation":"",onClick:p=>o(p,c)},l)),i("meta",{property:"articleSection",content:n.category.map(({name:l})=>l).join(",")})]):null}}),fd=y({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(n){const a=se(),t=vn();return()=>n.date?i("span",{class:"page-date-info","aria-label":`${t.value.date}${n.pure?"":"📅"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(Vo),i("span",i(De,()=>n.localizedDate||n.date.toLocaleDateString(a.value))),i("meta",{property:"datePublished",content:n.date.toISOString()||""})]):null}}),yd=y({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(n){const a=vn();return()=>n.isOriginal?i("span",{class:"page-original-info"},a.value.origin):null}}),Ed=y({name:"PageViewInfo",inheritAttrs:!1,props:{pageview:{type:[Boolean,String],default:!1},pure:Boolean},setup(n){const a=sn(),t=vn(),s=w(),o=w(0);return Ms(s,()=>{const l=s.value.textContent;l&&!isNaN(Number(l))&&(o.value=Number(l))},{childList:!0}),()=>n.pageview?i("span",{class:"page-pageview-info","aria-label":`${t.value.views}${n.pure?"":"🔢"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(o.value<1e3?Co:$o),i("span",{ref:s,class:"waline-pageview-count",id:"ArtalkPV","data-path":U(n.pageview)?n.pageview:F(a.path)},"...")]):null}}),wd=y({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(n){const a=vn(),t=h(()=>{if(!n.readingTime)return null;const{minutes:s}=n.readingTime;return s<1?"PT1M":`PT${Math.round(s)}M`});return()=>{var s,o;return(s=n.readingTimeLocale)!=null&&s.time?i("span",{class:"page-reading-time-info","aria-label":`${a.value.readingTime}${n.pure?"":"⌛"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(jo),i("span",(o=n.readingTimeLocale)==null?void 0:o.time),i("meta",{property:"timeRequired",content:t.value})]):null}}}),Ld=y({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(n){const a=Q(),t=C(),s=vn(),o=(l,c="")=>{c&&t.value.path!==c&&(l.preventDefault(),a.push(c))};return()=>n.tag.length?i("span",{class:"page-tag-info","aria-label":`${s.value.tag}${n.pure?"":"🏷"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(zo),n.tag.map(({name:l,path:c})=>i("span",{class:["page-tag-item",{[`tag${xe(l,9)}`]:!n.pure,clickable:c}],role:c?"navigation":"",onClick:p=>o(p,c)},l)),i("meta",{property:"keywords",content:n.tag.map(({name:l})=>l).join(",")})]):null}}),Ad=y({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(n){const a=vn();return()=>{var t,s,o;return(t=n.readingTimeLocale)!=null&&t.words?i("span",{class:"page-word-info","aria-label":`${a.value.words}${n.pure?"":"🔠"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[i(Go),i("span",(s=n.readingTimeLocale)==null?void 0:s.words),i("meta",{property:"wordCount",content:(o=n.readingTime)==null?void 0:o.words})]):null}}}),Bo=y({name:"PageInfo",components:{AuthorInfo:bd,CategoryInfo:kd,DateInfo:fd,OriginalInfo:yd,PageViewInfo:Ed,ReadingTimeInfo:wd,TagInfo:Ld,WordInfo:Ad},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(n){const a=Kn();return()=>n.items?i("div",{class:"page-info"},n.items.map(t=>i(Y(`${t}Info`),{...n.info,pure:a.value}))):null}}),Td=y({name:"PrintButton",setup(){const n=pn(),a=V();return()=>n.value.print===!1?null:i("button",{type:"button",class:"print-button",title:a.value.metaLocales.print,onClick:()=>{window.print()}},i(Mo))}});const Id=({title:n,level:a,slug:t})=>i(H,{to:`#${t}`,class:["toc-link",`level${a}`]},()=>n),sa=(n,a)=>{const t=sn();return n.length&&a>0?i("ul",{class:"toc-list"},n.map(s=>{const o=sa(s.children,a-1);return[i("li",{class:["toc-item",{active:ba(t,`#${s.slug}`)}]},Id(s)),o?i("li",o):null]})):null};var qo=y({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},setup(n,{slots:a}){const t=sn(),s=C(),o=vn(),l=w(),c=w("-1.7rem"),p=d=>{var v;(v=l.value)==null||v.scrollTo({top:d,behavior:"smooth"})},u=()=>{if(l.value){const d=document.querySelector(".toc-item.active");d?c.value=`${d.getBoundingClientRect().top-l.value.getBoundingClientRect().top+l.value.scrollTop}px`:c.value="-1.7rem"}else c.value="-1.7rem"};return R(()=>{S(()=>t.hash,d=>{if(l.value){const v=document.querySelector(`#toc a.toc-link[href$="${d}"]`);if(!v)return;const{top:m,height:g}=l.value.getBoundingClientRect(),{top:_,height:b}=v.getBoundingClientRect();_<m?p(l.value.scrollTop+_-m):_+b>m+g&&p(l.value.scrollTop+_+b-m-g)}}),S(()=>t.fullPath,()=>u(),{flush:"post",immediate:!0})}),()=>{var d,v;const m=n.items.length?sa(n.items,n.headerDepth):s.value.headers?sa(s.value.headers,n.headerDepth):null;return m?i("div",{class:"toc-place-holder"},[i("aside",{id:"toc"},[(d=a.before)==null?void 0:d.call(a),i("div",{class:"toc-header"},[o.value.toc,i(Td)]),i("div",{class:"toc-wrapper",ref:l},[m,i("div",{class:"toc-marker",style:{top:c.value}})]),(v=a.after)==null?void 0:v.call(a)])]):null}}}),$a=y({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(n){const a=C(),t=V(),s=w(),o=({target:l})=>{const c=document.querySelector(l.hash);if(c){const p=()=>{c.removeAttribute("tabindex"),c.removeEventListener("blur",p)};c.setAttribute("tabindex","-1"),c.addEventListener("blur",p),c.focus(),window.scrollTo(0,0)}};return R(()=>{S(()=>a.value.path,()=>s.value.focus())}),()=>[i("span",{ref:s,tabindex:"-1"}),i("a",{href:`#${n.content}`,class:"skip-link sr-only",onClick:o},t.value.routeLocales.skipToContent)]}});let Ke=null,Ee=null;const Pd={wait:()=>Ke,pending:()=>{Ke=new Promise(n=>Ee=n)},resolve:()=>{Ee==null||Ee(),Ke=null,Ee=null}},No=()=>Pd;var Ho=y({name:"FadeSlideY",setup(n,{slots:a}){const{resolve:t,pending:s}=No();return()=>i(qn,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:t,onBeforeLeave:s},()=>{var o;return(o=a.default)==null?void 0:o.call(a)})}}),Dd=y({name:"FeaturePanel",props:{items:{type:Object,default:()=>[]},header:{type:String,default:""}},setup(n){return()=>i("div",{class:"feature-panel"},[n.header?i("h2",{class:"feature-header"},n.header):null,n.items.length?i("div",{class:"feature-wrapper"},n.items.map(a=>{const t=[i("h3",[i(en,{icon:a.icon}),i("span",{innerHTML:a.title})]),i("p",{innerHTML:a.details})];return a.link?Ae(a.link)?i("a",{class:"feature-item link",href:a.link,role:"navigation","aria-label":a.title,target:"_blank"},t):i(H,{class:"feature-item link",to:a.link,role:"navigation","aria-label":a.title},()=>t):i("div",{class:"feature-item"},t)})):null])}}),xd=y({name:"HeroInfo",setup(n,{slots:a}){const t=z(),s=oe(),o=h(()=>t.value.heroText===!1?!1:t.value.heroText||s.value.title||"Hello"),l=h(()=>t.value.tagline===!1?!1:t.value.tagline||s.value.description||"Welcome to your VuePress site"),c=h(()=>t.value.heroImage?F(t.value.heroImage):null),p=h(()=>t.value.heroImageDark?F(t.value.heroImageDark):null),u=h(()=>t.value.heroAlt||o.value||"hero"),d=h(()=>t.value.actions??[]);return()=>{var v,m;return i("header",{class:"hero-info-wrapper"},[((v=a.heroImage)==null?void 0:v.call(a))||i(M,{appear:!0,type:"group"},()=>[c.value?i("img",{key:"light",class:{light:p.value},src:c.value,alt:u.value}):null,p.value?i("img",{key:"dark",class:"dark",src:p.value,alt:u.value}):null]),((m=a.heroInfo)==null?void 0:m.call(a))||i("div",{class:"hero-info"},[o.value?i(M,{appear:!0,delay:.04},()=>i("h1",{id:"main-title"},o.value)):null,l.value?i(M,{appear:!0,delay:.08},()=>i("p",{class:"description"},l.value)):null,d.value.length?i(M,{appear:!0,delay:.12},()=>i("p",{class:"actions"},d.value.map(g=>i(Z,{class:["action-button",g.type||"default"],config:g,noExternalLinkIcon:!0})))):null])])}}}),Rd=y({name:"HopePage",setup(n,{slots:a}){const t=Kn(),s=z(),o=h(()=>{const{features:l}=s.value;return Pe(l)?l.some(c=>!("items"in c))?[{items:l}]:l:[]});return()=>{var l,c,p;return i("main",{class:["home project",{pure:t.value}],id:"main-content","aria-labelledby":s.value.heroText===null?void 0:"main-title"},[(l=a.top)==null?void 0:l.call(a),i(xd),o.value.map(({header:u="",items:d},v)=>i(M,{appear:!0,delay:.16+v*.08},()=>i(Dd,{header:u,items:d}))),(c=a.center)==null?void 0:c.call(a),i(M,{appear:!0,delay:.16+o.value.length*.08},()=>i(Ca)),(p=a.bottom)==null?void 0:p.call(a)])}}});const Od=(n,a)=>{const t=n.replace(a,"/").split("/"),s=[];let o=ua(a);return t.forEach((l,c)=>{c!==t.length-1?(o+=`${l}/`,s.push(o)):l!==""&&(o+=l,s.push(o))}),s};var Vd=y({name:"BreadCrumb",setup(){const n=Q(),a=C(),t=cn(),s=z(),o=V(),l=w([]),c=h(()=>(s.value.breadcrumb||s.value.breadcrumb!==!1&&o.value.breadcrumb!==!1)&&l.value.length>1),p=h(()=>s.value.breadcrumbIcon||s.value.breadcrumbIcon!==!1&&o.value.breadcrumbIcon!==!1),u=()=>{const d=n.getRoutes(),v=Od(a.value.path,t.value).map(m=>{const g=d.find(_=>_.path===m);if(g){const{meta:_,path:b}=re(n,g.path),L=_[j.shortTitle]||_[j.title];if(L)return{title:L,icon:_[j.icon],path:b}}return null}).filter(m=>m!==null);v.length>1&&(l.value=v)};return R(()=>{u(),S(()=>a.value.path,u)}),()=>i("nav",{class:["breadcrumb",{disable:!c.value}]},c.value?i("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},l.value.map((d,v)=>i("li",{class:{"is-active":l.value.length-1===v},property:"itemListElement",typeof:"ListItem"},[i(H,{to:d.path,property:"item",typeof:"WebPage"},()=>[p.value?i(en,{icon:d.icon}):null,i("span",{property:"name"},d.title||"Unknown")]),i("meta",{property:"position",content:v+1})]))):[])}});const Ct=n=>n===!1?!1:U(n)?Bn(n,!0):te(n)?n:null,oa=(n,a,t)=>{const s=n.findIndex(o=>o.link===a);if(s!==-1){const o=n[s+t];return o!=null&&o.link?o:null}for(const o of n)if(o.children){const l=oa(o.children,a,t);if(l)return l}return null};var Sd=y({name:"PageNav",setup(){const n=V(),a=z(),t=Va(),s=C(),o=pe(),l=h(()=>{const p=Ct(a.value.prev);return p===!1?null:p||(n.value.prevLink===!1?null:oa(t.value,s.value.path,-1))}),c=h(()=>{const p=Ct(a.value.next);return p===!1?null:p||(n.value.nextLink===!1?null:oa(t.value,s.value.path,1))});return q("keydown",p=>{p.altKey&&(p.key==="ArrowRight"?c.value&&(o(c.value.link),p.preventDefault()):p.key==="ArrowLeft"&&l.value&&(o(l.value.link),p.preventDefault()))}),()=>l.value||c.value?i("nav",{class:"page-nav"},[l.value?i(Z,{class:"prev",config:l.value},()=>{var p,u;return[i("div",{class:"hint"},[i("span",{class:"arrow start"}),n.value.metaLocales.prev]),i("div",{class:"link"},[i(en,{icon:(p=l.value)==null?void 0:p.icon}),(u=l.value)==null?void 0:u.text])]}):null,c.value?i(Z,{class:"next",config:c.value},()=>{var p,u;return[i("div",{class:"hint"},[n.value.metaLocales.next,i("span",{class:"arrow end"})]),i("div",{class:"link"},[(p=c.value)==null?void 0:p.text,i(en,{icon:(u=c.value)==null?void 0:u.icon})])]}):null]):null}});const Cd={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},$d=({docsRepo:n,docsBranch:a,docsDir:t,filePathRelative:s,editLinkPattern:o})=>{if(!s)return null;const l=xs(n);let c;return o?c=o:l!==null&&(c=Cd[l]),c?c.replace(/:repo/,Tn(n)?n:`https://github.com/${n}`).replace(/:branch/,a).replace(/:path/,Yt(`${ua(t)}/${s}`)):null},Md=()=>{const n=V(),a=C(),t=z();return h(()=>{const{repo:s,docsRepo:o=s,docsBranch:l="main",docsDir:c="",editLink:p,editLinkPattern:u=""}=n.value;if(!(t.value.editLink??p??!0)||!o)return null;const d=$d({docsRepo:o,docsBranch:l,docsDir:c,editLinkPattern:u,filePathRelative:a.value.filePathRelative});return d?{text:n.value.metaLocales.editLink,link:d}:null})},zd=()=>{const n=oe(),a=V(),t=C(),s=z();return h(()=>{var o,l;return!(s.value.lastUpdated??a.value.lastUpdated??!0)||!((o=t.value.git)!=null&&o.updatedTime)?null:new Date((l=t.value.git)==null?void 0:l.updatedTime).toLocaleString(n.value.lang)})},jd=()=>{const n=V(),a=C(),t=z();return h(()=>{var s;return t.value.contributors??n.value.contributors??!0?((s=a.value.git)==null?void 0:s.contributors)??null:null})};var Gd=y({name:"PageTitle",setup(){const n=C(),a=z(),t=V(),{info:s,items:o}=Fp();return()=>i("div",{class:"page-title"},[i("h1",[t.value.titleIcon===!1?null:i(en,{icon:a.value.icon}),n.value.title]),i(Bo,{info:s.value,...o.value===null?{}:{items:o.value}}),i("hr")])}});const Fo=()=>i(O,{name:"edit"},()=>[i("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),i("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Fo.displayName="EditIcon";var Bd=y({name:"PageMeta",setup(){const n=V(),a=Md(),t=zd(),s=jd();return()=>{const{metaLocales:o}=n.value;return i("footer",{class:"page-meta"},[a.value?i("div",{class:"meta-item edit-link"},i(Z,{class:"label",config:a.value},{before:()=>i(Fo)})):null,i("div",{class:"meta-item git-info"},[t.value?i("div",{class:"update-time"},[i("span",{class:"label"},`${o.lastUpdated}: `),i(De,()=>i("span",{class:"info"},t.value))]):null,s.value&&s.value.length?i("div",{class:"contributors"},[i("span",{class:"label"},`${o.contributors}: `),s.value.map(({email:l,name:c},p)=>[i("span",{class:"contributor",title:`email: ${l}`},c),p!==s.value.length-1?",":""])]):null])])}}}),qd=y({name:"NormalPage",setup(n,{slots:a}){const t=z(),s=C(),{isDarkmode:o}=ue(),l=V(),c=h(()=>t.value.toc||t.value.toc!==!1&&l.value.toc!==!1);return()=>i("main",{class:"page",id:"main-content"},i(N("LocalEncrypt")?Y("LocalEncrypt"):ks,()=>{var p,u,d,v;return[(p=a.top)==null?void 0:p.call(a),t.value.cover?i("img",{class:"page-cover",src:t.value.cover,alt:s.value.title,"no-view":""}):null,i(Vd),i(Gd),c.value?i(qo,{headerDepth:t.value.headerDepth??l.value.headerDepth??2},{before:()=>{var m;return(m=a.tocBefore)==null?void 0:m.call(a)},after:()=>{var m;return(m=a.tocAfter)==null?void 0:m.call(a)}}):null,(u=a.contentBefore)==null?void 0:u.call(a),i(Ca),(d=a.contentAfter)==null?void 0:d.call(a),i(Bd),i(Sd),N("CommentService")?i(Y("CommentService"),{darkmode:o.value}):null,(v=a.bottom)==null?void 0:v.call(a)]}))}}),Nd=y({name:"Layout",setup(){const n=pn(),a=V(),t=C(),s=z(),{isMobile:o}=de(),l=h(()=>{var c,p;return((c=a.value.blog)==null?void 0:c.sidebarDisplay)||((p=n.value.blog)==null?void 0:p.sidebarDisplay)||"mobile"});return()=>[i($a),i(Sa,{},{default:()=>s.value.home?i(Rd):i(Ho,()=>i(qd,{key:t.value.path})),...l.value!=="none"?{navScreenBottom:()=>i(Y("BloggerInfo"))}:{},...!o.value&&l.value==="always"?{sidebar:()=>i(Y("BloggerInfo"))}:{}})]}}),Hd=y({name:"NotFoundHint",setup(){const n=V(),a=()=>{const t=n.value.routeLocales.notFoundMsg;return t[Math.floor(Math.random()*t.length)]};return()=>i("div",{class:"not-found-hint"},[i("p",{class:"error-code"},"404"),i("h1",{class:"error-title"},n.value.routeLocales.notFoundTitle),i("p",{class:"error-hint"},a())])}}),Fd=y({name:"NotFound",setup(n,{slots:a}){const t=cn(),s=V(),{navigate:o}=Di({to:s.value.home??t.value});return()=>[i($a),i(Sa,{noSidebar:!0},()=>{var l;return i("main",{class:"page not-found",id:"main-content"},((l=a.default)==null?void 0:l.call(a))||[i(Hd),i("div",{class:"actions"},[i("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},s.value.routeLocales.back),i("button",{type:"button",class:"action-button",onClick:()=>o()},s.value.routeLocales.home)])])})]}});const Ud={Email:'<svg xmlns="http://www.w3.org/2000/svg" class="icon email-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#1384FF"/><path fill="#fff" d="M270.077 286.233H751.99c32.933 0 59.86 24.855 60.274 55.51l-301.023 157L210.217 341.88c.207-30.723 26.927-55.717 59.86-55.717zm-59.929 115.714-.276 277.756c0 30.931 27.134 56.2 60.205 56.2H751.99c33.14 0 60.274-25.269 60.274-56.2V401.81L518.283 551.492a15.88 15.88 0 0 1-14.43 0L210.148 401.947z"/></svg>',Gmail:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gmail-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#DB4437"/><path fill="#E67C73" d="M277.48 285.567h465.767v441.362H277.48V285.567z"/><path fill="#FFF" d="M282.543 285.567h-10.645c-25.962 0-47.122 21.808-47.122 48.705v343.952c0 26.897 21.08 48.705 47.122 48.705h24.976V407.954l213.49 169.95 213.489-169.95V726.93h24.975c26.04 0 47.123-21.809 47.123-48.705V334.272c0-26.897-21.134-48.705-47.123-48.705h-10.644L510.364 480.44 282.542 285.567z"/></svg>'},Wd={category:{"/en/":{path:"/en/category/",map:{Guide:{path:"/en/category/guide/",keys:["v-0e4acecb","v-395cd082","v-70eda030","v-3777b6d3","v-4a2a37eb"]},Cherry:{path:"/en/category/cherry/",keys:["v-fb852992"]},"Dragon Fruit":{path:"/en/category/dragon-fruit/",keys:["v-4fd051a1"]},Fruit:{path:"/en/category/fruit/",keys:["v-57615dc1","v-4fd051a1","v-e3de7730","v-e748286e","v-4e6ceffa","v-51d6a138"]},Strawberry:{path:"/en/category/strawberry/",keys:["v-57615dc1"]},Vegetable:{path:"/en/category/vegetable/",keys:["v-285adf66"]},Apple:{path:"/en/category/apple/",keys:["v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4"]},Banana:{path:"/en/category/banana/",keys:["v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e"]}}},"/":{path:"/category/",map:{tool:{path:"/category/tool/",keys:["v-29289036"]},golang:{path:"/category/golang/",keys:["v-53e31fe0","v-c8c456c8","v-5800d1ea","v-92f80350","v-1458e00e","v-9acf99fc","v-5e331da4","v-20d09562","v-15d3b17c","v-7fa49b0c","v-f23db260","v-6a293671","v-040284a4","v-a9da6580","v-567da953","v-1244a7cb","v-681ca6cc","v-c4bbd09c","v-c4551e66","v-7b90e602","v-2057ad0f","v-f6665750","v-e6d3b74a","v-6cc31111","v-62f503b0","v-1bc274ab","v-b3a58990","v-35640268","v-f22856bc","v-3f67611c","v-5cebfcec","v-35c742aa","v-4d657308","v-d2b5c958","v-0bddc6dd","v-1f30217a","v-4242d329","v-8b53256e","v-eb7c0d78","v-829e24fa","v-3204c3dd","v-ee300c90","v-30973042","v-06735c8b","v-5ae068e5","v-3799e97e","v-50e5a21a","v-cbcea296","v-2b556b2e","v-57baa4bc","v-e0a4562c","v-f5b4bb7e","v-00ad664e","v-5bab429f","v-ef99c07c","v-78e33f52","v-6beeb8fc","v-7a6ac2b6","v-40f6cc6c","v-4f5da57e","v-57168dca","v-0f79baa2","v-7cd467d2","v-7b1f8f33","v-3ce7855e","v-796ab694","v-77b5ddf5","v-350af4a0","v-64cfc26e","v-ba0a5a48","v-0852c2d9","v-809ed732","v-25febabc","v-64ab95ec","v-27d17794","v-2b3b28d2","v-34935b8c","v-4d2d1dcb","v-2ea4da10","v-7d56e130","v-b018f792","v-320e8b4e","v-51d75507","v-37b776b7","v-36029e18","v-385e0822","v-0dcfbc1a","v-50227c68","v-0c1ae37b","v-0a660adc","v-08b1323d","v-06fc599e","v-7dc3935f","v-7991054c","v-959407fc","v-16ceb7bd","v-4a26dc54","v-90b97d26","v-99c27f88","v-2d00fe8d","v-28002915","v-3b58180c","v-9371a17a","v-4b73468f","v-f00eb258","v-476f03ed","v-6ad98bb7","v-5bb14210","v-fa7c9c8c","v-63741259"]},linux:{path:"/category/linux/",keys:["v-c02a4b2e","v-4b6696b8","v-99c27f88","v-b5ed2b58","v-8a2d5246"]},"raspberry pi":{path:"/category/raspberry-pi/",keys:["v-4b6696b8","v-86290fc2","v-99c27f88","v-b5ed2b58"]},docker:{path:"/category/docker/",keys:["v-3d1e3058","v-43f192d4","v-4087e196","v-51d75507","v-37b776b7","v-385e0822","v-7991054c","v-799d9d9d","v-4c02f4c4","v-86290fc2"]},nginx:{path:"/category/nginx/",keys:["v-51d75507","v-37b776b7","v-18c55e38","v-799d9d9d","v-86290fc2","v-b5ed2b58"]},"CI/CD":{path:"/category/cicd/",keys:["v-50e28978"]},vuepress:{path:"/category/vuepress/",keys:["v-d113dcdc","v-17581545","v-0ae43aab","v-020997ea"]},git:{path:"/category/git/",keys:["v-1c39fd42"]},cheatsheet:{path:"/category/cheatsheet/",keys:["v-c02a4b2e","v-2ebd7ecc","v-1c39fd42","v-7a6ac2b6"]},network:{path:"/category/network/",keys:["v-2ebd7ecc"]},algorithm:{path:"/category/algorithm/",keys:["v-025d7b61","v-535d9b4c","v-549fa92c","v-5125b4c6","v-a32a07dc","v-8355eb16","v-1af74c42","v-570e4ea8","v-29f01add","v-72954ae8","v-0894e1ba","v-3eb533c2","v-097e0892","v-9655c078","v-2037675e","v-6348cbb8","v-dab163b2","v-0aac4a8d","v-de9f1ca0","v-6b3e55f8","v-2fe69306","v-648f631d","v-62da8a7e","v-810fe0d8","v-518ba335","v-5f70d940","v-6125b1df","v-4c924008","v-4e4718a7","v-4ffbf146","v-4ab840b9","v-4c6d1958","v-4e21f1f7","v-4fd6ca96","v-e16459c4","v-3f5dd1dc","v-d162282e","v-cdf876f0","v-ca8ec5b2","v-9d14dd6c","v-99ab2c2e","v-4e112ea6","v-4fc60745","v-517adfe4","v-d4cbd96c","v-5fa0991e","v-5c36e7e0","v-58cd36a2","v-0d4df688","v-09e4454a","v-067a940c","v-0310e2ce","v-52673f70","v-4efd8e32","v-7fdb5a60","v-fcdf9a02","v-f975e8c4","v-22502948","v-240501e7","v-523b0560","v-1a089ff7","v-4d1c7b83","v-4ed15422","v-50862cc1","v-169eeeb9","v-1853c758","v-4b67a2e4","v-1a368d97","v-2ac0379e","v-2c75103d","v-16ccdc59","v-1881b4f8","v-15d707c2","v-14222f23","v-126d5684","v-10b87de5","v-0f03a546","v-0d4ecca7","v-a9266534","v-09e51b69","v-0b99f408"]},Note:{path:"/category/note/",keys:["v-4ce10d7f","v-5208c422","v-63a80d45","v-50cc852d","v-377f2ac8"]},"C#":{path:"/category/c_/",keys:["v-377f2ac8"]},Frontend:{path:"/category/frontend/",keys:["v-4ce10d7f","v-5208c422","v-63a80d45","v-50cc852d","v-4e6da3c9","v-344dc579","v-33bd0e54","v-34943ad0","v-601a5951"]},TypeScript:{path:"/category/typescript/",keys:["v-5208c422","v-50cc852d"]},vue:{path:"/category/vue/",keys:["v-4e6da3c9","v-344dc579","v-33bd0e54","v-34943ad0","v-601a5951"]},mysql:{path:"/category/mysql/",keys:["v-51d75507","v-37b776b7"]},leetcode:{path:"/category/leetcode/",keys:["v-1e6f1d5c","v-62f769e2","v-70286756","v-ad253b78","v-3940b36a","v-765b1aa3","v-349a846f","v-311bd816","v-06561839","v-492efb38","v-04b56930","v-5501cf2c","v-821df360"]},JavaScript:{path:"/category/javascript/",keys:["v-63a80d45"]},rpc:{path:"/category/rpc/",keys:["v-ba0a5a48","v-0852c2d9","v-809ed732","v-25febabc","v-64ab95ec","v-27d17794","v-2b3b28d2","v-2ea4da10","v-320e8b4e"]},"protocol buffers":{path:"/category/protocol-buffers/",keys:["v-34935b8c","v-4d2d1dcb"]},Redis:{path:"/category/redis/",keys:["v-3b40d3e9","v-3cf5ac88","v-3eaa8527","v-dee84ee8"]},clang:{path:"/category/clang/",keys:["v-a9266534"]},"data structure":{path:"/category/data-structure/",keys:["v-15d707c2","v-14222f23","v-126d5684","v-10b87de5","v-0f03a546","v-0d4ecca7","v-09e51b69","v-0b99f408"]},NoSql:{path:"/category/nosql/",keys:["v-350af4a0"]},Vue:{path:"/category/vue/",keys:["v-4ce10d7f"]}}}},tag:{"/en/":{path:"/en/tag/",map:{disable:{path:"/en/tag/disable/",keys:["v-70eda030"]},encryption:{path:"/en/tag/encryption/",keys:["v-3777b6d3"]},Markdown:{path:"/en/tag/markdown/",keys:["v-4a2a37eb"]},"Page config":{path:"/en/tag/page-config/",keys:["v-0e4acecb"]},Guide:{path:"/en/tag/guide/",keys:["v-0e4acecb"]},red:{path:"/en/tag/red/",keys:["v-285adf66","v-57615dc1","v-4fd051a1","v-fb852992","v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4"]},small:{path:"/en/tag/small/",keys:["v-57615dc1","v-fb852992"]},round:{path:"/en/tag/round/",keys:["v-285adf66","v-fb852992","v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4"]},big:{path:"/en/tag/big/",keys:["v-4fd051a1","v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4"]},yellow:{path:"/en/tag/yellow/",keys:["v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e"]},curly:{path:"/en/tag/curly/",keys:["v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e"]},long:{path:"/en/tag/long/",keys:["v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e"]}}},"/":{path:"/tag/",map:{sort:{path:"/tag/sort/",keys:["v-53e31fe0"]},clash:{path:"/tag/clash/",keys:["v-4b6696b8"]},"Github actions":{path:"/tag/github-actions/",keys:["v-50e28978"]},slice:{path:"/tag/slice/",keys:["v-7a6ac2b6","v-7b1f8f33","v-796ab694"]},Tutorial:{path:"/tag/tutorial/",keys:["v-4ce10d7f","v-5208c422","v-63a80d45","v-50cc852d","v-377f2ac8"]},endless:{path:"/tag/endless/",keys:["v-7991054c"]},gin:{path:"/tag/gin/",keys:["v-36029e18","v-50227c68","v-7991054c","v-959407fc"]},"go-jwt":{path:"/tag/go-jwt/",keys:["v-385e0822"]},jwt:{path:"/tag/jwt/",keys:["v-385e0822"]},"go-gin-blog":{path:"/tag/go-gin-blog/",keys:["v-4e6da3c9","v-344dc579"]},viper:{path:"/tag/viper/",keys:["v-36029e18","v-50227c68"]},gorm:{path:"/tag/gorm/",keys:["v-36029e18","v-0dcfbc1a","v-50227c68","v-0c1ae37b","v-0a660adc","v-08b1323d","v-06fc599e","v-7dc3935f"]},why:{path:"/tag/why/",keys:["v-1f30217a","v-2b556b2e","v-57baa4bc","v-e0a4562c"]},array:{path:"/tag/array/",keys:["v-77b5ddf5","v-1e6f1d5c","v-62f769e2","v-70286756","v-ad253b78","v-311bd816","v-06561839","v-492efb38","v-5501cf2c","v-821df360","v-0d4ecca7"]},"docker compose":{path:"/tag/docker-compose/",keys:["v-3d1e3058","v-43f192d4","v-4087e196"]},GMP:{path:"/tag/gmp/",keys:["v-64cfc26e"]},"golang daily lib":{path:"/tag/golang-daily-lib/",keys:["v-16ceb7bd","v-4a26dc54","v-90b97d26","v-2d00fe8d","v-28002915","v-3b58180c","v-9371a17a","v-4b73468f","v-f00eb258","v-476f03ed","v-6ad98bb7","v-5bb14210","v-fa7c9c8c","v-63741259"]},zap:{path:"/tag/zap/",keys:["v-7d56e130"]},vim:{path:"/tag/vim/",keys:["v-8a2d5246"]},grpc:{path:"/tag/grpc/",keys:["v-ba0a5a48","v-0852c2d9","v-809ed732","v-25febabc","v-64ab95ec","v-27d17794"]},"vue-cli":{path:"/tag/vue-cli/",keys:["v-601a5951"]},"vue router":{path:"/tag/vue-router/",keys:["v-34943ad0"]},vuex:{path:"/tag/vuex/",keys:["v-33bd0e54"]},SDS:{path:"/tag/sds/",keys:["v-3b40d3e9"]},"Linked List":{path:"/tag/linked-list/",keys:["v-3cf5ac88"]},dict:{path:"/tag/dict/",keys:["v-3eaa8527"]},string:{path:"/tag/string/",keys:["v-7cd467d2"]},"linked list":{path:"/tag/linked-list/",keys:["v-126d5684","v-10b87de5","v-0f03a546"]},strings:{path:"/tag/strings/",keys:["v-14222f23"]},minidb:{path:"/tag/minidb/",keys:["v-350af4a0"]}}}}},Kd={article:{"/en/":{path:"/en/article/",keys:["v-285adf66","v-0e4acecb","v-57615dc1","v-4fd051a1","v-fb852992","v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e","v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4","v-5aa3d8ba","v-367b840a","v-395cd082","v-70eda030","v-3777b6d3","v-4a2a37eb"]},"/":{path:"/article/",keys:["v-29289036","v-53e31fe0","v-c8c456c8","v-5800d1ea","v-92f80350","v-1458e00e","v-9acf99fc","v-5e331da4","v-20d09562","v-15d3b17c","v-c02a4b2e","v-2ebd7ecc","v-7fa49b0c","v-f23db260","v-6a293671","v-040284a4","v-a9da6580","v-567da953","v-1244a7cb","v-681ca6cc","v-c4bbd09c","v-c4551e66","v-7b90e602","v-2057ad0f","v-f6665750","v-e6d3b74a","v-6cc31111","v-62f503b0","v-1bc274ab","v-b3a58990","v-35640268","v-f22856bc","v-3f67611c","v-5cebfcec","v-35c742aa","v-4d657308","v-d2b5c958","v-0bddc6dd","v-1f30217a","v-4242d329","v-8b53256e","v-eb7c0d78","v-829e24fa","v-3204c3dd","v-ee300c90","v-30973042","v-06735c8b","v-5ae068e5","v-3799e97e","v-50e5a21a","v-cbcea296","v-025d7b61","v-2b556b2e","v-57baa4bc","v-e0a4562c","v-f5b4bb7e","v-535d9b4c","v-549fa92c","v-5125b4c6","v-a32a07dc","v-8355eb16","v-1af74c42","v-570e4ea8","v-00ad664e","v-5bab429f","v-ef99c07c","v-78e33f52","v-29f01add","v-72954ae8","v-0894e1ba","v-3eb533c2","v-097e0892","v-9655c078","v-2037675e","v-6348cbb8","v-dab163b2","v-0aac4a8d","v-de9f1ca0","v-6b3e55f8","v-2fe69306","v-648f631d","v-62da8a7e","v-810fe0d8","v-518ba335","v-5f70d940","v-6125b1df","v-4c924008","v-4e4718a7","v-4ffbf146","v-4ab840b9","v-4c6d1958","v-4e21f1f7","v-4fd6ca96","v-e16459c4","v-3f5dd1dc","v-d162282e","v-cdf876f0","v-ca8ec5b2","v-6beeb8fc","v-9d14dd6c","v-99ab2c2e","v-4e112ea6","v-4fc60745","v-517adfe4","v-d4cbd96c","v-5fa0991e","v-5c36e7e0","v-58cd36a2","v-0d4df688","v-09e4454a","v-067a940c","v-0310e2ce","v-52673f70","v-4efd8e32","v-7fdb5a60","v-fcdf9a02","v-f975e8c4","v-22502948","v-240501e7","v-523b0560","v-1a089ff7","v-4d1c7b83","v-4ed15422","v-50862cc1","v-169eeeb9","v-1853c758","v-4b67a2e4","v-1a368d97","v-2ac0379e","v-2c75103d","v-16ccdc59","v-1881b4f8","v-4ce10d7f","v-5208c422","v-63a80d45","v-50cc852d","v-1c39fd42","v-7a6ac2b6","v-50e28978","v-d113dcdc","v-17581545","v-0ae43aab","v-020997ea","v-377f2ac8","v-20003db7","v-805e4cfe","v-fd464dca","v-40f6cc6c","v-4f5da57e","v-57168dca","v-a747c65e","v-57cc0d8b","v-2916a324","v-822adc4e","v-0f79baa2","v-d4eae3a0","v-7cd467d2","v-7b1f8f33","v-3ce7855e","v-796ab694","v-77b5ddf5","v-350af4a0","v-7811b9c6","v-1e6f1d5c","v-62f769e2","v-70286756","v-ad253b78","v-3940b36a","v-765b1aa3","v-349a846f","v-311bd816","v-3b40d3e9","v-3cf5ac88","v-3eaa8527","v-dee84ee8","v-5c650e76","v-06561839","v-492efb38","v-04b56930","v-5501cf2c","v-821df360","v-15d707c2","v-14222f23","v-126d5684","v-10b87de5","v-0f03a546","v-0d4ecca7","v-ac901672","v-a9266534","v-09e51b69","v-0b99f408","v-bac7172a","v-64cfc26e","v-ba0a5a48","v-0852c2d9","v-809ed732","v-25febabc","v-145ac574","v-14e2aca8","v-ba0625c8","v-79e08508","v-64ab95ec","v-27d17794","v-2b3b28d2","v-34935b8c","v-4d2d1dcb","v-f15d7708","v-2ea4da10","v-7d56e130","v-b018f792","v-320e8b4e","v-2a93f832","v-3d1e3058","v-43f192d4","v-4087e196","v-27edcf18","v-51d75507","v-37b776b7","v-36029e18","v-4e6da3c9","v-344dc579","v-33bd0e54","v-34943ad0","v-601a5951","v-385e0822","v-0dcfbc1a","v-fd0cf4b0","v-50227c68","v-0c1ae37b","v-0a660adc","v-08b1323d","v-06fc599e","v-7dc3935f","v-7991054c","v-959407fc","v-7ee1bb0f","v-24dbb155","v-16ceb7bd","v-4a26dc54","v-90b97d26","v-18c55e38","v-193915ab","v-799d9d9d","v-4c02f4c4","v-4b6696b8","v-86290fc2","v-99c27f88","v-b5ed2b58","v-2d00fe8d","v-28002915","v-3b58180c","v-9371a17a","v-4b73468f","v-8a2d5246","v-f00eb258","v-476f03ed","v-6ad98bb7","v-5bb14210","v-fa7c9c8c","v-63741259","v-15054f24","v-6beb5d16","v-1559a150","v-72b977ca","v-27637179","v-3bd0497f","v-3d85221e","v-3f39fabd","v-40eed35c","v-42a3abfb","v-4458849a","v-460d5d39","v-47c235d8","v-49770e77","v-36e15080","v-3896291f","v-3a4b01be","v-3bffda5d","v-3db4b2fc","v-3f698b9b","v-411e643a","v-355c08bf","v-76581383","v-79c1c4c1","v-3710e15e","v-38c5b9fd","v-3a7a929c","v-3c2f6b3b","v-3de443da","v-3f991c79","v-414df518","v-4302cdb7","v-0e9fed90","v-3221e85f","v-33d6c0fe","v-358b999d","v-3740723c","v-38f54adb","v-3aaa237a","v-2d32ef60","v-2ee7c7ff","v-309ca09e","v-3251793d","v-340651dc","v-35bb2a7b","v-3770031a","v-29f8cf00","v-2bada79f","v-3a0bf280","v-36a24142","v-33389004","v-2fcedec6","v-2c652d88","v-28fb7c4a","v-2591cb0c","v-40803340","v-3d168202","v-39acd0c4","v-36431f86","v-32d96e48","v-2f6fbd0a","v-2c060bcc","v-21c8f812","v-49ff0382","v-46955244","v-432ba106","v-3fc1efc8","v-3c583e8a","v-38ee8d4c","v-3584dc0e","v-50734442","v-24a213a1","v-2656ec40","v-280bc4df","v-2b75761d","v-2d2a4ebc","v-4d099304","v-499fe1c6","v-46363088","v-42cc7f4a","v-3f62ce0c","v-3bf91cce","v-388f6b90","v-3525ba52","v-30f72877","v-519865c6","v-424c459b","v-21067a7a","v-224593cd","v-37c3b518","v-cff5dd62","v-7a32e59a","v-56c1d229","v-7db8c2c5","v-14236860","v-11aa17f2","v-a2e20f30","v-1018c823","v-a7271076","v-47f6df05","v-1503255a","v-997ddd98","v-020db39c","v-1d9145f3","v-391dd596","v-290b5eff"]}},star:{"/en/":{path:"/en/star/",keys:["v-e3de7730","v-285adf66","v-55405276","v-0e4acecb"]},"/":{path:"/star/",keys:["v-53e31fe0","v-99c27f88"]}},timeline:{"/en/":{path:"/en/timeline/",keys:["v-285adf66","v-57615dc1","v-4fd051a1","v-fb852992","v-dd0b14b4","v-e074c5f2","v-e3de7730","v-e748286e","v-4e6ceffa","v-51d6a138","v-55405276","v-58aa03b4","v-0e4acecb"]},"/":{path:"/timeline/",keys:["v-c8c456c8","v-5800d1ea","v-92f80350","v-1458e00e","v-9acf99fc","v-5e331da4","v-20d09562","v-15d3b17c","v-c02a4b2e","v-2ebd7ecc","v-7fa49b0c","v-f23db260","v-6a293671","v-040284a4","v-a9da6580","v-567da953","v-1244a7cb","v-681ca6cc","v-c4bbd09c","v-c4551e66","v-7b90e602","v-2057ad0f","v-f6665750","v-e6d3b74a","v-6cc31111","v-62f503b0","v-1bc274ab","v-b3a58990","v-35640268","v-f22856bc","v-3f67611c","v-5cebfcec","v-35c742aa","v-4d657308","v-d2b5c958","v-0bddc6dd","v-1f30217a","v-4242d329","v-8b53256e","v-eb7c0d78","v-829e24fa","v-3204c3dd","v-ee300c90","v-30973042","v-06735c8b","v-5ae068e5","v-3799e97e","v-50e5a21a","v-cbcea296","v-025d7b61","v-2b556b2e","v-57baa4bc","v-e0a4562c","v-f5b4bb7e","v-535d9b4c","v-549fa92c","v-5125b4c6","v-a32a07dc","v-8355eb16","v-1af74c42","v-570e4ea8","v-00ad664e","v-5bab429f","v-ef99c07c","v-78e33f52","v-29f01add","v-72954ae8","v-0894e1ba","v-3eb533c2","v-097e0892","v-9655c078","v-2037675e","v-6348cbb8","v-dab163b2","v-0aac4a8d","v-de9f1ca0","v-6b3e55f8","v-2fe69306","v-648f631d","v-62da8a7e","v-810fe0d8","v-518ba335","v-5f70d940","v-6125b1df","v-4c924008","v-4e4718a7","v-4ffbf146","v-4ab840b9","v-4c6d1958","v-4e21f1f7","v-4fd6ca96","v-e16459c4","v-3f5dd1dc","v-d162282e","v-cdf876f0","v-ca8ec5b2","v-6beeb8fc","v-9d14dd6c","v-99ab2c2e","v-4e112ea6","v-4fc60745","v-517adfe4","v-d4cbd96c","v-5fa0991e","v-5c36e7e0","v-58cd36a2","v-0d4df688","v-09e4454a","v-067a940c","v-0310e2ce","v-52673f70","v-4efd8e32","v-7fdb5a60","v-fcdf9a02","v-f975e8c4","v-22502948","v-240501e7","v-523b0560","v-1a089ff7","v-4d1c7b83","v-4ed15422","v-50862cc1","v-169eeeb9","v-1853c758","v-4b67a2e4","v-1a368d97","v-2ac0379e","v-2c75103d","v-16ccdc59","v-1881b4f8","v-4ce10d7f","v-5208c422","v-63a80d45","v-50cc852d","v-53e31fe0","v-1c39fd42","v-7a6ac2b6","v-29289036","v-50e28978","v-d113dcdc","v-17581545","v-0ae43aab","v-020997ea","v-377f2ac8","v-fd464dca","v-40f6cc6c","v-4f5da57e","v-57168dca","v-0f79baa2","v-7cd467d2","v-7b1f8f33","v-3ce7855e","v-796ab694","v-77b5ddf5","v-350af4a0","v-1e6f1d5c","v-62f769e2","v-70286756","v-ad253b78","v-3940b36a","v-765b1aa3","v-349a846f","v-311bd816","v-3b40d3e9","v-3cf5ac88","v-3eaa8527","v-dee84ee8","v-06561839","v-492efb38","v-04b56930","v-5501cf2c","v-821df360","v-15d707c2","v-14222f23","v-126d5684","v-10b87de5","v-0f03a546","v-0d4ecca7","v-a9266534","v-09e51b69","v-0b99f408","v-64cfc26e","v-ba0a5a48","v-0852c2d9","v-809ed732","v-25febabc","v-64ab95ec","v-27d17794","v-2b3b28d2","v-34935b8c","v-4d2d1dcb","v-2ea4da10","v-7d56e130","v-b018f792","v-320e8b4e","v-3d1e3058","v-43f192d4","v-4087e196","v-51d75507","v-37b776b7","v-36029e18","v-4e6da3c9","v-344dc579","v-33bd0e54","v-34943ad0","v-601a5951","v-385e0822","v-0dcfbc1a","v-50227c68","v-0c1ae37b","v-0a660adc","v-08b1323d","v-06fc599e","v-7dc3935f","v-7991054c","v-959407fc","v-16ceb7bd","v-4a26dc54","v-90b97d26","v-18c55e38","v-799d9d9d","v-4c02f4c4","v-4b6696b8","v-86290fc2","v-99c27f88","v-b5ed2b58","v-2d00fe8d","v-28002915","v-3b58180c","v-9371a17a","v-4b73468f","v-8a2d5246","v-f00eb258","v-476f03ed","v-6ad98bb7","v-5bb14210","v-fa7c9c8c","v-15054f24"]}}},$t=w(Wd),Uo=(n="")=>{const a=C(),t=Q(),s=cn();return h(()=>{var o;const l=n||((o=z().value.blog)==null?void 0:o.key)||"";if(!l)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const c=t.getRoutes();if(!$t.value[l])throw new Error(`useBlogCategory: key ${l} is invalid`);const p=$t.value[l][s.value],u={path:p.path,map:{}};for(const d in p.map){const v=p.map[d];u.map[d]={path:v.path,items:[]};for(const m of v.keys){const g=c.find(({name:_})=>_===m);if(g){const _=re(t,g.path);u.map[d].items.push({path:_.path,info:_.meta})}}a.value.path===v.path&&(u.currentItems=u.map[d].items)}return u})},Mt=w(Kd),Ve=(n="")=>{const a=Q(),t=cn();return h(()=>{var s;const o=n||((s=z().value.blog)==null?void 0:s.key)||"";if(!o)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Mt.value[o])throw new Error(`useBlogType: key ${n} is invalid`);const l=a.getRoutes(),c=Mt.value[o][t.value],p={path:c.path,items:[]};for(const u of c.keys){const d=l.find(({name:v})=>v===u);if(d){const v=re(a,d.path);p.items.push({path:v.path,info:v.meta})}}return p})};const Jd="/assets/hero-197a9d2d.jpg",Wo=Symbol.for("categoryMap"),ve=()=>{const n=W(Wo);if(!n)throw new Error("useCategoryMap() is called without provider.");return n},Qd=()=>{const n=Uo("category");In(Wo,n)},me=()=>{const n=pn(),a=V();return h(()=>({...n.value.blog,...a.value.blog}))},Ko=Symbol.for("tagMap"),ge=()=>{const n=W(Ko);if(!n)throw new Error("useTagMap() is called without provider.");return n},Yd=()=>{const n=Uo("tag");In(Ko,n)},Zd=n=>{const a=V();return h(()=>{const{[j.author]:t}=n.value;return t?ne(t):t===!1?[]:ne(a.value.author,!1)})},Xd=n=>{const a=ve();return h(()=>Is(n.value[j.category]).map(t=>({name:t,path:a.value.map[t].path})))},nu=n=>{const a=ge();return h(()=>Ps(n.value[j.tag]).map(t=>({name:t,path:a.value.map[t].path})))},eu=n=>h(()=>{const{[j.date]:a}=n.value;return ha(a)}),au=n=>{const a=Fn(n,"info"),t=me(),s=Zd(a),o=Xd(a),l=nu(a),c=eu(a),p=io(),u=h(()=>({author:s.value,category:o.value,date:c.value,localizedDate:a.value[j.localizedDate]||"",tag:l.value,isOriginal:a.value[j.isOriginal]||!1,readingTime:a.value[j.readingTime]||null,readingTimeLocale:a.value[j.readingTime]&&p.value?oo(a.value[j.readingTime],p.value):null,pageview:n.path})),d=h(()=>t.value.articleInfo);return{info:u,items:d}},Jo=Symbol(""),_e=()=>{const n=W(Jo);if(!n)throw new Error("useArticles() is called without provider.");return n},tu=()=>{const n=Ve("article");In(Jo,n)},Qo=Symbol(""),Ma=()=>{const n=W(Qo);if(!n)throw new Error("useStars() is called without provider.");return n},su=()=>{const n=Ve("star");In(Qo,n)},Yo=Symbol(""),za=()=>{const n=W(Yo);if(!n)throw new Error("useTimelines() is called without provider.");return n},ou=()=>{const n=Ve("timeline"),a=h(()=>{const t=[];return n.value.items.forEach(({info:s,path:o})=>{const l=ha(s[j.date]),c=l==null?void 0:l.getFullYear(),p=l?l.getMonth()+1:null,u=l==null?void 0:l.getDate();c&&p&&u&&((!t[0]||t[0].year!==c)&&t.unshift({year:c,items:[]}),t[0].items.push({date:`${p}/${u}`,info:s,path:o}))}),{...n.value,config:t.reverse()}});In(Yo,a)},iu=()=>{tu(),Qd(),su(),Yd(),ou()};var ru=y({name:"SocialMedia",setup(){const n=me(),a=Kn(),t=h(()=>{const s=n.value.medias;return s?Dn(s).map(([o,l])=>({name:o,icon:Ud[o],url:l})):[]});return()=>t.value.length?i("div",{class:"social-media-wrapper"},t.value.map(({name:s,icon:o,url:l})=>i("a",{class:"social-media",href:l,rel:"noopener noreferrer",target:"_blank","aria-label":s,...a.value?{}:{"data-balloon-pos":"up"},innerHTML:o}))):null}}),ja=y({name:"BloggerInfo",setup(){const n=me(),a=oe(),t=V(),s=_e(),o=ve(),l=ge(),c=za(),p=pe(),u=h(()=>{var g;return n.value.name||((g=ne(t.value.author)[0])==null?void 0:g.name)||a.value.title}),d=h(()=>n.value.avatar||t.value.logo),v=h(()=>t.value.blogLocales),m=h(()=>n.value.intro);return()=>i("div",{class:"blogger-info",vocab:"https://schema.org/",typeof:"Person"},[i("div",{class:"blogger",...m.value?{style:{cursor:"pointer"},"aria-label":v.value.intro,"data-balloon-pos":"down",role:"navigation",onClick:()=>p(m.value)}:{}},[d.value?i("img",{class:["blogger-avatar",{round:n.value.roundAvatar}],src:F(d.value),property:"image",alt:"Blogger Avatar"}):null,u.value?i("div",{class:"blogger-name",property:"name"},u.value):null,n.value.description?i("div",{class:"blogger-description",innerHTML:n.value.description}):null,m.value?i("meta",{property:"url",content:F(m.value)}):null]),i("div",{class:"num-wrapper"},[i(H,{to:s.value.path},()=>[i("div",{class:"num"},s.value.items.length),i("div",v.value.article)]),i(H,{to:o.value.path},()=>[i("div",{class:"num"},X(o.value.map).length),i("div",v.value.category)]),i(H,{to:l.value.path},()=>[i("div",{class:"num"},X(l.value.map).length),i("div",v.value.tag)]),i(H,{to:c.value.path},()=>[i("div",{class:"num"},c.value.items.length),i("div",v.value.timeline)])]),i(ru)])}});const ia=()=>i(O,{name:"category"},()=>i("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));ia.displayName="CategoryIcon";const ra=()=>i(O,{name:"tag"},()=>i("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));ra.displayName="TagIcon";const Ga=()=>i(O,{name:"timeline"},()=>i("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Ga.displayName="TimelineIcon";const Zo=()=>i(O,{name:"slides"},()=>i("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));Zo.displayName="SlideIcon";const Xo=()=>i(O,{name:"sticky"},()=>[i("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);Xo.displayName="StickyIcon";const Ie=()=>i(O,{name:"article"},()=>i("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Ie.displayName="ArticleIcon";const ni=()=>i(O,{name:"book"},()=>i("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));ni.displayName="BookIcon";const ei=()=>i(O,{name:"link"},()=>i("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));ei.displayName="LinkIcon";const ai=()=>i(O,{name:"project"},()=>i("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));ai.displayName="ProjectIcon";const ti=()=>i(O,{name:"friend"},()=>i("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));ti.displayName="FriendIcon";const la=()=>i(O,{name:"slide-down"},()=>i("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));la.displayName="SlideDownIcon";const si=()=>i("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});si.displayName="EmptyIcon";const oi=()=>i(O,{name:"lock"},()=>i("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));oi.displayName="LockIcon";var lu=y({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},setup(n,{slots:a}){const t=Fn(n,"info"),{info:s,items:o}=au(n);return()=>{var l,c,p;const{[j.title]:u,[j.type]:d,[j.isEncrypted]:v,[j.cover]:m,[j.excerpt]:g,[j.sticky]:_}=t.value,b=s.value;return i("div",{class:"article-item"},i("article",{class:"article",vocab:"https://schema.org/",typeof:"Article"},[((l=a.cover)==null?void 0:l.call(a,{cover:m}))||(m?[i("img",{class:"article-cover",src:F(m)}),i("meta",{property:"image",content:F(m)})]:[]),_?i(Xo):null,i(H,{to:n.path},()=>{var L;return((L=a.title)==null?void 0:L.call(a,{title:u,isEncrypted:v,type:d}))||i("header",{class:"title"},[v?i(oi):null,d===lo.slide?i(Zo):null,i("span",{property:"headline"},u)])}),((c=a.excerpt)==null?void 0:c.call(a,{excerpt:g}))||(g?i("div",{class:"article-excerpt",innerHTML:g}):null),i("hr",{class:"hr"}),((p=a.info)==null?void 0:p.call(a,{info:b}))||i(Bo,{info:b,...o.value?{items:o.value}:{}})]))}}}),cu=y({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(n,{emit:a}){let t;const s=V(),o=w(""),l=h(()=>s.value.paginationLocales),c=h(()=>Math.ceil(n.total/n.perPage)),p=h(()=>!!c.value&&c.value!==1),u=h(()=>c.value<7?!1:n.current>4),d=h(()=>c.value<7?!1:n.current<c.value-3),v=h(()=>{const{current:_}=n;let b=1,L=c.value;const f=[];c.value>=7&&(_<=4&&_<c.value-3?(b=1,L=5):_>4&&_>=c.value-3?(L=c.value,b=c.value-4):c.value>7&&(b=_-2,L=_+2));for(let k=b;k<=L;k++)f.push(k);return f}),m=_=>a("updateCurrentPage",_),g=_=>{const b=parseInt(_);b<=c.value&&b>0?m(b):t.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${l.value.errorText.replace(/\$page/g,c.value.toString())}`)};return R(()=>{t=new kr}),()=>i("div",{class:"pagination-wrapper"},p.value?i("div",{class:"pagination-list"},[i("div",{class:"page-number"},[n.current>1?i("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>m(n.current-1)},l.value.prev):null,u.value?[i("div",{role:"navigation",onClick:()=>m(1)},1),i("div",{class:"ellipsis"},"...")]:null,v.value.map(_=>i("div",{key:_,class:{active:n.current===_},role:"navigation",onClick:()=>m(_)},_)),d.value?[i("div",{class:"ellipsis"},"..."),i("div",{role:"navigation",onClick:()=>m(c.value)},c.value)]:null,n.current<c.value?i("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>m(n.current+1)},l.value.next):null]),i("div",{class:"navigate-wrapper"},[i("label",{for:"navigation-text"},`${l.value.navigate}: `),i("input",{id:"navigation-text",value:o.value,onInput:({target:_})=>{o.value=_.value},onKeydown:_=>{_.key==="Enter"&&(_.preventDefault(),g(o.value))}}),i("button",{class:"navigate",role:"navigation",title:l.value.action,onClick:()=>g(o.value)},l.value.action)])]):[])}}),Ba=y({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(n){const a=sn(),t=Q(),s=me(),o=w(1),l=h(()=>s.value.articlePerPage||10),c=h(()=>n.items.slice((o.value-1)*l.value,o.value*l.value)),p=u=>{o.value=u;const d={...a.query};d.page===u.toString()||u===1&&!d.page||(u===1?delete d.page:d.page=u.toString(),t.push({path:a.path,query:d}))};return R(()=>{const{page:u}=a.query;p(u?Number(u):1),e(()=>import("./pageview-e6e65ec0.js"),["assets/pageview-e6e65ec0.js","assets/framework-09afcf0b.js"]).then(({updatePageview:d})=>{d()}),S(o,()=>{const d=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,d)},100)})}),()=>i("div",{id:"article-list",class:"article-wrapper"},c.value.length?[...c.value.map(({info:u,path:d},v)=>i(M,{appear:!0,delay:v*.04},()=>i(lu,{key:d,info:u,path:d}))),i(cu,{current:o.value,perPage:l.value,total:n.items.length,onUpdateCurrentPage:p})]:i(si))}}),qa=y({name:"CategoryList",setup(){const n=C(),a=ve();return()=>i("ul",{class:"category-list-wrapper"},Dn(a.value.map).map(([t,{path:s,items:o}])=>i("li",{class:["category",`category${xe(t,9)}`,{active:s===n.value.path}]},i(H,{to:s},()=>[t,i("span",{class:"category-num"},o.length)]))))}}),Na=y({name:"TagList",setup(){const n=z(),a=ge(),t=s=>{var o;return s===((o=n.value.blog)==null?void 0:o.name)};return()=>i("ul",{class:"tag-list-wrapper"},Dn(a.value.map).map(([s,{path:o,items:l}])=>i("li",{class:["tag",`tag${xe(s,9)}`,{active:t(s)}]},i(H,{to:o},()=>[s,i("span",{class:"tag-num"},l.length)]))))}}),pu=y({name:"TimelineList",setup(){const n=V(),a=za(),t=pe(),s=h(()=>n.value.blogLocales.timeline);return()=>i("div",{class:"timeline-list-wrapper"},[i("div",{class:"timeline-list-title",onClick:()=>t(a.value.path)},[i(Ga),i("span",{class:"num"},a.value.items.length),s.value]),i("hr"),i("div",{class:"timeline-content"},i("ul",{class:"timeline-list"},a.value.config.map(({year:o,items:l},c)=>i(M,{appear:!0,delay:.08*(c+1)},()=>i("li",[i("h3",{class:"timeline-year"},o),i("ul",{class:"timeline-year-wrapper"},l.map(({date:p,info:u,path:d})=>i("li",{class:"timeline-item"},[i("span",{class:"timeline-date"},p),i(H,{class:"timeline-title",to:d},()=>u[j.title])])))])))))])}}),ii=y({name:"InfoList",setup(){const n=V(),a=_e(),t=ve(),s=h(()=>X(t.value.map).length),o=Ma(),l=ge(),c=h(()=>X(l.value.map).length),p=pe(),u=w("article"),d=h(()=>n.value.blogLocales),v=[["article",Ie],["category",ia],["tag",ra],["timeline",Ga]];return()=>i("div",{class:"blog-info-list"},[i("div",{class:"blog-type-wrapper"},v.map(([m,g])=>i("button",{type:"button",class:"blog-type-button",onClick:()=>{u.value=m}},i("div",{class:["icon-wrapper",{active:u.value===m}],"aria-label":d.value[m],"data-balloon-pos":"up"},i(g))))),i(M,()=>u.value==="article"?i("div",{class:"sticky-article-wrapper"},[i("div",{class:"title",onClick:()=>p(a.value.path)},[i(Ie),i("span",{class:"num"},a.value.items.length),d.value.article]),i("hr"),i("ul",{class:"sticky-article-list"},o.value.items.map(({info:m,path:g},_)=>i(M,{appear:!0,delay:.08*(_+1)},()=>i("li",{class:"sticky-article"},i(H,{to:g},()=>m[j.title])))))]):u.value==="category"?i("div",{class:"category-wrapper"},[s.value?i("div",{class:"title",onClick:()=>p(t.value.path)},[i(ia),i("span",{class:"num"},s.value),d.value.category]):null,i("hr"),i(M,{delay:.04},()=>i(qa))]):u.value==="tag"?i("div",{class:"tag-wrapper"},[c.value?i("div",{class:"title",onClick:()=>p(l.value.path)},[i(ra),i("span",{class:"num"},c.value),d.value.tag]):null,i("hr"),i(M,{delay:.04},()=>i(Na))]):i(M,()=>i(pu)))])}}),Se=y({name:"BlogWrapper",setup(n,{slots:a}){const{isMobile:t}=de();return()=>[i($a),i(Sa,{noSidebar:!0},{default:()=>{var s;return(s=a.default)==null?void 0:s.call(a)},navScreenBottom:()=>i(ja),...t.value?{sidebar:()=>i(ii)}:{}})]}});const ri=()=>i("aside",{class:"blog-info-wrapper"},[i(M,()=>i(ja)),i(M,{delay:.04},()=>i(ii))]);ri.displayName="InfoPanel";var Ce=ri,du=y({name:"BlogPage",components:{CategoryList:qa,TagList:Na},setup(){const n=C(),a=z(),t=ve(),s=ge(),o=h(()=>a.value.blog||{}),l=h(()=>{const{key:p=""}=o.value;return p==="category"?"CategoryList":p==="tag"?"TagList":null}),c=h(()=>{const{name:p="",key:u=""}=o.value;return u==="category"?p?t.value.map[p].items:[]:u==="tag"?p?s.value.map[p].items:[]:[]});return()=>i(Se,()=>i("div",{class:"page blog"},i("div",{class:"blog-page-wrapper"},[i("main",{class:"blog-main",id:"main-content"},[i(M,()=>l.value?i(Y(l.value)):null),o.value.name?i(M,{appear:!0,delay:.24},()=>i(Ba,{key:n.value.path,items:c.value})):null]),i(M,{delay:.16},()=>i(Ce))])))}}),uu=y({name:"BlogHero",setup(n,{slots:a}){const t=qi(),s=z(),o=w(),l=h(()=>s.value.heroFullScreen??!1),c=h(()=>{const{heroText:u,heroImage:d,heroImageDark:v,heroAlt:m,heroImageStyle:g,tagline:_=null}=s.value;return{text:u===!1?null:u||t.value,image:d?F(d):null,imageDark:v?F(v):null,heroStyle:g,alt:m||"hero image",tagline:_,isFullScreen:l.value}}),p=h(()=>{const{bgImage:u,bgImageStyle:d}=s.value;return{image:U(u)?F(u):u===!1?null:Jd,bgStyle:d,isFullScreen:l.value}});return()=>{var u,d;return s.value.hero===!1?null:i("div",{ref:o,class:["blog-hero",{fullscreen:l.value,"no-bg":!p.value.image}]},[((u=a.heroBg)==null?void 0:u.call(a,p.value))||(p.value.image?i("div",{class:"mask",style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null),((d=a.heroInfo)==null?void 0:d.call(a,c.value))||[i(M,{appear:!0,type:"group",delay:.04},()=>[c.value.image?i("img",{key:"light",class:["hero-image",{light:c.value.imageDark}],style:c.value.heroStyle,src:c.value.image,alt:c.value.alt}):null,c.value.imageDark?i("img",{key:"dark",class:"hero-image dark",style:c.value.heroStyle,src:c.value.imageDark,alt:c.value.alt}):null]),i(M,{appear:!0,delay:.08},()=>c.value.text?i("h1",c.value.text):null),i(M,{appear:!0,delay:.12},()=>c.value.tagline?i("p",{class:"description",innerHTML:c.value.tagline}):null)],c.value.isFullScreen?i("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:o.value.clientHeight,behavior:"smooth"})}},[i(la),i(la)]):null])}}});const vu=["link","article","book","project","friend"];var mu=y({name:"ProjectPanel",components:{ArticleIcon:Ie,BookIcon:ni,FriendIcon:ti,LinkIcon:ei,ProjectIcon:ai},setup(){const n=z(),a=Kn(),t=pe(),s=(o="",l="icon")=>vu.includes(o)?i(Y(`${o}-icon`)):Tn(o)?i("img",{src:o,alt:l,class:"image"}):Re(o)?i("img",{src:F(o),alt:l,class:"image"}):i(en,{icon:o});return()=>{var o;return(o=n.value.projects)!=null&&o.length?i("div",{class:"project-panel"},n.value.projects.map(({icon:l,link:c,name:p,desc:u},d)=>i("div",{class:["project-card",{[`project${d%9}`]:!a.value}],onClick:()=>t(c)},[s(l,p),i("div",{class:"name"},p),i("div",{class:"desc"},u)]))):null}}}),gu=y({name:"BlogHome",setup(){const n=_e();return()=>i("div",{class:"page blog"},[i(uu),i("div",{class:"blog-page-wrapper"},[i("main",{class:"blog-home",id:"main-content"},[i(M,{appear:!0,delay:.16},()=>i(mu)),i(M,{appear:!0,delay:.24},()=>i(Ba,{items:n.value.items}))]),i(M,{appear:!0,delay:.16},()=>i(Ce))]),i(M,{appear:!0,delay:.28},()=>i(Ca))])}}),_u=y({name:"BlogHome",setup(){return()=>i(Se,()=>i(gu))}}),li=y({name:"ArticleType",setup(){const n=C(),a=cn(),t=V(),s=_e(),o=Ma(),l=h(()=>{const c=t.value.blogLocales;return[{text:c.all,path:s.value.path},{text:c.star,path:o.value.path},...[].map(({key:p,path:u})=>({text:c[p],path:u.replace(/^\//,a.value)}))]});return()=>i("ul",{class:"article-type-wrapper"},l.value.map(c=>i("li",{class:["article-type",{active:c.path===n.value.path}]},i(H,{to:c.path},()=>c.text))))}}),hu=y({name:"BlogPage",setup(){const n=Ve(),a=z(),t=C(),s=_e(),o=Ma(),l=h(()=>{const{key:c="",type:p}=a.value.blog||{};return c==="star"?o.value.items:p==="type"&&c?n.value.items:s.value.items});return()=>i(Se,()=>i("div",{class:"page blog"},i("div",{class:"blog-page-wrapper"},[i("main",{class:"blog-main",id:"main-content"},[i(M,()=>i(li)),i(M,{appear:!0,delay:.24},()=>i(Ba,{key:t.value.path,items:l.value}))]),i(M,{delay:.16},()=>i(Ce))])))}}),bu=y({name:"TimelineItems",setup(){const n=me(),a=V(),t=za(),s=h(()=>n.value.timeline||a.value.blogLocales.timelineTitle),o=h(()=>t.value.config.map(({year:l})=>({title:l.toString(),level:2,slug:l.toString(),children:[]})));return()=>i("div",{class:"timeline-wrapper"},i("ul",{class:"timeline-content"},[i(M,()=>i("li",{class:"motto"},s.value)),i(qo,{items:o.value}),t.value.config.map(({year:l,items:c},p)=>i(M,{appear:!0,delay:.08*(p+1),type:"group"},()=>[i("h3",{key:"title",id:l,class:"timeline-year-title"},i("span",l)),i("li",{key:"content",class:"timeline-year-list"},[i("ul",{class:"timeline-year-wrapper"},c.map(({date:u,info:d,path:v})=>i("li",{class:"timeline-item"},[i("span",{class:"timeline-date"},u),i(H,{class:"timeline-title",to:v},()=>d[j.title])])))])]))]))}}),ku=y({name:"Timeline",components:{ArticleType:li,CategoryList:qa,TagList:Na},setup(){return()=>i(Se,()=>i("div",{class:"page blog"},i("div",{class:"blog-page-wrapper"},[i("main",{class:"blog-main",id:"main-content"},[i(M,{appear:!0,delay:.24},()=>i(bu))]),i(M,{delay:.16},()=>i(Ce))])))}});const Cn="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),_n=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1],zt=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],jt=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],ci=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],ca=(n,a)=>{if(a<=0||a>n.length)throw Error(`Illegal len: ${a}`);let t,s,o=0;const l=[];for(;o<a;){if(t=255&n[o++],l.push(Cn[t>>2&63]),t=(3&t)<<4,o>=a){l.push(Cn[63&t]);break}if(s=255&n[o++],t|=s>>4&15,l.push(Cn[63&t]),t=(15&s)<<2,o>=a){l.push(Cn[63&t]);break}s=255&n[o++],t|=s>>6&3,l.push(Cn[63&t]),l.push(Cn[63&s])}return l.join("")},fu=typeof process<"u"&&process&&typeof process.nextTick=="function"?typeof setImmediate=="function"?setImmediate:process.nextTick:setTimeout,Xn=(n,a,t,s)=>{let o,l=n[a],c=n[a+1];return l^=t[0],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[1],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[2],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[3],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[4],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[5],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[6],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[7],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[8],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[9],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[10],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[11],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[12],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[13],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[14],o=s[l>>>24],o+=s[256|l>>16&255],o^=s[512|l>>8&255],o+=s[768|255&l],c^=o^t[15],o=s[c>>>24],o+=s[256|c>>16&255],o^=s[512|c>>8&255],o+=s[768|255&c],l^=o^t[16],n[a]=c^t[17],n[a+1]=l,n},$n=(n,a)=>{let t=0;for(let s=0;s<4;++s)t=t<<8|255&n[a],a=(a+1)%n.length;return{key:t,offp:a}},Gt=(n,a,t)=>{const s=a.length,o=t.length;let l,c=0,p=[0,0];for(let u=0;u<s;u++)l=$n(n,c),c=l.offp,a[u]=a[u]^l.key;for(let u=0;u<s;u+=2)p=Xn(p,0,a,t),a[u]=p[0],a[u+1]=p[1];for(let u=0;u<o;u+=2)p=Xn(p,0,a,t),t[u]=p[0],t[u+1]=p[1]},Bt=(n,a,t,s,o)=>{const l=ci.slice(),c=l.length;if(t<4||t>31){const g=new Error(`Illegal number of rounds (4-31): ${t}`);if(s===!1)return Promise.reject(g);throw g}if(a.length!==16){const g=new Error(`Illegal salt length: ${a.length} != 16`);if(s===!1)return Promise.reject(g);throw g}let p,u;t=1<<t>>>0;let d,v=0;Int32Array?(p=new Int32Array(zt),u=new Int32Array(jt)):(p=zt.slice(),u=jt.slice()),((g,_,b,L)=>{const f=b.length,k=L.length;let E,T=0,P=[0,0];for(let x=0;x<f;x++)E=$n(_,T),T=E.offp,b[x]=b[x]^E.key;T=0;for(let x=0;x<f;x+=2)E=$n(g,T),T=E.offp,P[0]^=E.key,E=$n(g,T),T=E.offp,P[1]^=E.key,P=Xn(P,0,b,L),b[x]=P[0],b[x+1]=P[1];for(let x=0;x<k;x+=2)E=$n(g,T),T=E.offp,P[0]^=E.key,E=$n(g,T),T=E.offp,P[1]^=E.key,P=Xn(P,0,b,L),L[x]=P[0],L[x+1]=P[1]})(a,n,p,u);const m=()=>{if(o&&o(v/t),!(v<t)){for(v=0;v<64;v++)for(d=0;d<c>>1;d++)Xn(l,d<<1,p,u);const g=[];for(v=0;v<c;v++)g.push((l[v]>>24&255)>>>0),g.push((l[v]>>16&255)>>>0),g.push((l[v]>>8&255)>>>0),g.push((255&l[v])>>>0);return s===!1?Promise.resolve(g):g}{const g=Date.now();for(;v<t&&(v+=1,Gt(n,p,u),Gt(a,p,u),!(Date.now()-g>100)););}if(s===!1)return new Promise(g=>fu(()=>{m().then(g)}))};if(s===!1)return m();{let g;for(;;)if((g=m())!==void 0)return g||[]}},yu=(n=10)=>{if(typeof n!="number")throw Error("Illegal arguments: "+typeof n);n<4?n=4:n>31&&(n=31);const a=[];return a.push("$2a$"),n<10&&a.push("0"),a.push(n.toString()),a.push("$"),a.push(ca((t=>{try{let s;return(self.crypto||self.msCrypto).getRandomValues(s=new Uint32Array(t)),Array.prototype.slice.call(s)}catch{throw Error("WebCryptoAPI is not available")}})(16),16)),a.join("")};function Eu(n,a,t,s){if(typeof n!="string"||typeof a!="string"){const m=new Error("Invalid string / salt: Not a string");if(t===!1)return Promise.reject(m);throw m}let o,l;if(a.charAt(0)!=="$"||a.charAt(1)!=="2"){const m=new Error("Invalid salt version: "+a.substring(0,2));if(t===!1)return Promise.reject(m);throw m}if(a.charAt(2)==="$")o=String.fromCharCode(0),l=3;else{if(o=a.charAt(2),o!=="a"&&o!=="b"&&o!=="y"||a.charAt(3)!=="$"){const m=Error("Invalid salt revision: "+a.substring(2,4));if(t===!1)return Promise.reject(m);throw m}l=4}if(a.charAt(l+2)>"$"){const m=new Error("Missing salt rounds");if(t===!1)return Promise.reject(m);throw m}const c=10*parseInt(a.substring(l,l+1),10)+parseInt(a.substring(l+1,l+2),10),p=a.substring(l+3,l+25),u=(m=>{const g=[];let _=0;var b;return b=L=>{g.push(L)},((L,f)=>{let k,E=null;for(;(k=E!==null?E:L())!==null;)k>=55296&&k<=57343&&(E=L())!==null&&E>=56320&&E<=57343?(f(1024*(k-55296)+E-56320+65536),E=null):f(k);E!==null&&f(E)})(()=>_>=m.length?null:m.charCodeAt(_++),function(L){((f,k)=>{let E=null;for(typeof f=="number"&&(E=f,f=()=>null);E!==null||(E=f())!==null;)E<128?k(127&E):E<2048?(k(E>>6&31|192),k(63&E|128)):E<65536?(k(E>>12&15|224),k(E>>6&63|128),k(63&E|128)):(k(E>>18&7|240),k(E>>12&63|128),k(E>>6&63|128),k(63&E|128)),E=null})(L,b)}),g})(n+=o>="a"?"\0":""),d=((m,g)=>{if(g<=0)throw Error(`Illegal len: ${g}`);const _=m.length;let b,L,f,k,E,T,P=0,x=0;const D=[];for(;P<_-1&&x<g&&(T=m.charCodeAt(P++),b=T<_n.length?_n[T]:-1,T=m.charCodeAt(P++),L=T<_n.length?_n[T]:-1,b!=-1&&L!=-1)&&(E=b<<2>>>0,E|=(48&L)>>4,D.push(String.fromCharCode(E)),!(++x>=g||P>=_))&&(T=m.charCodeAt(P++),f=T<_n.length?_n[T]:-1,f!=-1)&&(E=(15&L)<<4>>>0,E|=(60&f)>>2,D.push(String.fromCharCode(E)),!(++x>=g||P>=_));)T=m.charCodeAt(P++),k=T<_n.length?_n[T]:-1,E=(3&f)<<6>>>0,E|=k,D.push(String.fromCharCode(E)),++x;return D.map(A=>A.charCodeAt(0))})(p,16),v=m=>{const g=[];return g.push("$2"),o>="a"&&g.push(o),g.push("$"),c<10&&g.push("0"),g.push(c.toString()),g.push("$"),g.push(ca(d,d.length)),g.push(ca(m,4*ci.length-1)),g.join("")};return t===!1?Bt(u,d,c,!1,s).then(m=>v(m)):v(Bt(u,d,c,!0,s))}const wu=(n,a=10)=>{if(typeof a=="number"&&(a=yu(a)),typeof n!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof n+", "+typeof a);return Eu(n,a,!0)},pa=(n,a)=>{if(typeof n!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof n+", "+typeof a);return a.length===60&&wu(n,a.substring(0,a.length-31))===a},pi=()=>i(O,{name:"lock"},()=>i("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));pi.displayName="LockIcon";var di=y({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(n,{emit:a}){const t=z(),s=V(),o=w(""),l=w(!1),c=w(!1),p=h(()=>s.value.encryptLocales);let u=null;const d=()=>{u&&clearTimeout(u),l.value=!1,a("verify",o.value,c.value),Un().then(()=>{l.value=!0,u=setTimeout(()=>{l.value=!1},1e3)})};return()=>i("div",{class:["password-layer",{expand:n.full||t.value.home}]},i("div",{class:"password-modal"},[i("div",{class:["hint",{tried:l.value}]},l.value?p.value.errorHint:i(pi,{"aria-label":p.value.iconLabel})),i("div",{class:"password"},[i("input",{type:"password",value:o.value,placeholder:p.value.placeholder,onInput:({target:v})=>{o.value=v.value},onKeydown:({key:v})=>{v==="Enter"&&d()}})]),i("div",{class:"remember-password"},[i("input",{type:"checkbox",value:c.value,onChange:()=>c.value=!c.value}),p.value.remember]),i("button",{type:"button",class:"submit",onClick:()=>d()},"OK")]))}});const ui=()=>{const n=pn();return h(()=>n.value.encrypt||{})},qt="VUEPRESS_HOPE_GLOBAL_TOKEN",Lu=()=>{const n=ui(),a=Wn(qt,""),t=Gs(qt,""),s=h(()=>{const{global:l=!1,admin:c=[]}=n.value;return l&&c.length>0}),o=h(()=>{if(s.value){if(a.value)return n.value.admin.some(l=>pa(a.value,l));if(t.value)return n.value.admin.some(l=>pa(t.value,l))}return!1});return{isEncrypted:s,isDecrypted:o,validate:(l,c=!1)=>{(c?a:t).value=l}}},Je=(n="",a)=>!!n&&pa(n,a),Nt="VUEPRESS_HOPE_PATH_TOKEN",Au=()=>{const n=C(),a=ui(),t=Wn(Nt,{}),s=Gs(Nt,{}),o=c=>te(a.value.config)?X(a.value.config).filter(p=>wn(decodeURI(c),p)).sort((p,u)=>u.length-p.length):[],l=c=>{const p=o(c);if(p.length>0){const{config:u={}}=a.value;return{isEncrypted:!0,isDecrypted:p.some(d=>t.value[d]&&u[d].some(v=>Je(t.value[d],v))||s.value[d]&&u[d].some(v=>Je(s.value[d],v)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:h(()=>l(n.value.path)),getStatus:l,validate:(c,p=!1)=>{const{config:u={}}=a.value,d=o(n.value.path);for(const v of d)if(u[v].filter(m=>Je(c,m))){(p?t:s).value[v]=c;break}}}};var Tu=y({name:"GlobalEncrypt",setup(n,{slots:a}){const{isDecrypted:t,isEncrypted:s,validate:o}=Lu(),l=w(!1);return R(()=>{l.value=!0}),()=>i(Ho,()=>{var c,p;return s.value?l.value?t.value?(c=a.default)==null?void 0:c.call(a):i(di,{full:!0,onVerify:o}):null:(p=a.default)==null?void 0:p.call(a)})}}),Iu=y({name:"LocalEncrypt",setup(n,{slots:a}){const{status:t,validate:s}=Au(),o=w(!1);return R(()=>{o.value=!0}),()=>{var l,c;const{isEncrypted:p,isDecrypted:u}=t.value;return p?o.value?u?((l=a.default)==null?void 0:l.call(a))||null:i(di,{full:!0,onVerify:s}):null:((c=a.default)==null?void 0:c.call(a))||null}}});var Pu=y({name:"SlidePage",setup(){const n=Q(),a=w(!1),t=w(),s=()=>{a.value=!a.value},o=()=>{a.value=!1},l=()=>{o(),window.history.go(-1)},c=()=>{o(),n.push("/")};return qr(t,o),()=>i("div",{class:"presentation"},[i(ma),i("div",{ref:t,class:["menu",{active:a.value}]},[i("button",{type:"button",class:"menu-button",onClick:()=>s()},i("span",{class:"icon"})),i("button",{type:"button",class:"back-button",onClick:()=>l()},i(Uc)),i("button",{type:"button",class:"home-button",onClick:()=>c()},i(Wc))])])}});const Du=an({enhance:({app:n,router:a})=>{const{scrollBehavior:t}=a.options;a.options.scrollBehavior=async(...s)=>(await No().wait(),t(...s)),Up(n),n.component("HopeIcon",en),n.component("BloggerInfo",ja),n.component("GlobalEncrypt",Tu),n.component("LocalEncrypt",Iu)},setup:()=>{Wp(),Yp(),iu()},layouts:{Layout:Nd,NotFound:Fd,BlogCategory:du,BlogHome:_u,BlogType:hu,Timeline:ku,Slide:Pu}}),xu=n=>{if(window.dataLayer&&window.gtag)return;const a=document.createElement("script");a.src=`https://www.googletagmanager.com/gtag/js?id=${n.id}`,a.async=!0,document.head.appendChild(a),window.dataLayer=window.dataLayer||[],window.gtag=function(){dataLayer.push(arguments)},gtag("js",new Date),n.debug?gtag("config",n.id,{debug_mode:!0}):gtag("config",n.id)},Ru={id:"G-3RQ3LRSTKM"},Ou=an({enhance(){xu(Ru)}});var Ht;const vi=typeof window<"u",Vu=n=>typeof n=="string",Su=()=>{};vi&&((Ht=window==null?void 0:window.navigator)!=null&&Ht.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);function mi(n){return typeof n=="function"?n():Mn(n)}function Cu(n){return n}function $u(n){return Zt()?(Xt(n),!0):!1}function Mu(n){var a;const t=mi(n);return(a=t==null?void 0:t.$el)!=null?a:t}const zu=vi?window:void 0;function ju(...n){let a,t,s,o;if(Vu(n[0])||Array.isArray(n[0])?([t,s,o]=n,a=zu):[a,t,s,o]=n,!a)return Su;Array.isArray(t)||(t=[t]),Array.isArray(s)||(s=[s]);const l=[],c=()=>{l.forEach(v=>v()),l.length=0},p=(v,m,g,_)=>(v.addEventListener(m,g,_),()=>v.removeEventListener(m,g,_)),u=S(()=>[Mu(a),mi(o)],([v,m])=>{c(),v&&l.push(...t.flatMap(g=>s.map(_=>p(v,g,_,m))))},{immediate:!0,flush:"post"}),d=()=>{u(),c()};return $u(d),d}const Ft=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Ut="__vueuse_ssr_handlers__";Ft[Ut]=Ft[Ut]||{};var Wt;(function(n){n.UP="UP",n.RIGHT="RIGHT",n.DOWN="DOWN",n.LEFT="LEFT",n.NONE="NONE"})(Wt||(Wt={}));var Gu=Object.defineProperty,Kt=Object.getOwnPropertySymbols,Bu=Object.prototype.hasOwnProperty,qu=Object.prototype.propertyIsEnumerable,Jt=(n,a,t)=>a in n?Gu(n,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[a]=t,Nu=(n,a)=>{for(var t in a||(a={}))Bu.call(a,t)&&Jt(n,t,a[t]);if(Kt)for(var t of Kt(a))qu.call(a,t)&&Jt(n,t,a[t]);return n};const Hu={easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]};Nu({linear:Cu},Hu);const Fu=n=>{const a=ju("keydown",t=>{t.key==="k"&&(t.ctrlKey||t.metaKey)&&(t.preventDefault(),n(),a())})},Uu=n=>n.button===1||n.altKey||n.ctrlKey||n.metaKey||n.shiftKey,Wu=()=>{const n=Q();return{hitComponent:({hit:a,children:t})=>({type:"a",ref:void 0,constructor:void 0,key:void 0,props:{href:a.url,onClick:s=>{Uu(s)||(s.preventDefault(),n.push(Za(a.url,"/")))},children:t},__v:null}),navigator:{navigate:({itemUrl:a})=>{n.push(Za(a,"/"))}},transformSearchClient:a=>{const t=Ks(a.search,500);return{...a,search:async(...s)=>t(...s)}}}},Ku=(n=[],a)=>[`lang:${a}`,...Pe(n)?n:[n]],Ju=({buttonText:n="Search",buttonAriaLabel:a=n}={})=>`<button type="button" class="DocSearch DocSearch-Button" aria-label="${a}"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewBox="0 0 20 20"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">${n}</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"><svg width="15" height="15" class="DocSearch-Control-Key-Icon"><path d="M4.505 4.496h2M5.505 5.496v5M8.216 4.496l.055 5.993M10 7.5c.333.333.5.667.5 1v2M12.326 4.5v5.996M8.384 4.496c1.674 0 2.116 0 2.116 1.5s-.442 1.5-2.116 1.5M3.205 9.303c-.09.448-.277 1.21-1.241 1.203C1 10.5.5 9.513.5 8V7c0-1.57.5-2.5 1.464-2.494.964.006 1.134.598 1.24 1.342M12.553 10.5h1.953" stroke-width="1.2" stroke="currentColor" fill="none" stroke-linecap="square"></path></svg></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button>`,Qu=16,gi=()=>{if(document.querySelector(".DocSearch-Modal"))return;const n=new Event("keydown");n.key="k",n.metaKey=!0,window.dispatchEvent(n),setTimeout(gi,Qu)},Yu=n=>{const a="algolia-preconnect";(window.requestIdleCallback||setTimeout)(()=>{if(document.head.querySelector(`#${a}`))return;const s=document.createElement("link");s.id=a,s.rel="preconnect",s.href=`https://${n}-dsn.algolia.net`,s.crossOrigin="",document.head.appendChild(s)})},Zu={appId:"04APDU9UF5",apiKey:"1e7c2c638ce7c3a785efe3ed64918e6d",indexName:"dreamjzio"};e(()=>import("./style-e9220a04.js"),[]),e(()=>import("./docsearch-1d421ddb.js"),[]);const Xu=y({name:"Docsearch",props:{containerId:{type:String,required:!1,default:"docsearch-container"},options:{type:Object,required:!1,default:()=>Zu}},setup(n){const a=Wu(),t=se(),s=cn(),o=w(!1),l=w(!1),c=h(()=>{var d;return{...n.options,...(d=n.options.locales)==null?void 0:d[s.value]}}),p=async()=>{var v;const{default:d}=await e(()=>import("./index-b98b895d.js"),[]);d({...a,...c.value,container:`#${n.containerId}`,searchParameters:{...c.value.searchParameters,facetFilters:Ku((v=c.value.searchParameters)==null?void 0:v.facetFilters,t.value)}}),o.value=!0},u=()=>{l.value||o.value||(l.value=!0,p(),gi(),S(s,p))};return Fu(u),R(()=>Yu(c.value.appId)),()=>{var d;return[i("div",{id:n.containerId,style:{display:o.value?"block":"none"}}),o.value?null:i("div",{onClick:u,innerHTML:Ju((d=c.value.translations)==null?void 0:d.button)})]}}}),n0=an({enhance({app:n}){n.component("Docsearch",Xu)}}),we=[Wi,sc,pc,uc,gc,kc,Lc,Sc,Bc,Op,Gp,Du,Ou,n0],e0=[["v-8daa1a0e","/",{y:"h",t:"主页",i:"home"},["/index.html","/README.md"]],["v-fd0cf4b0","/about-me.html",{d:16383168e5,l:"2021年12月1日",e:`<ul>
<li>学校：<a href="https://zh.wikipedia.org/wiki/%E6%B9%96%E5%8C%97%E5%A4%A7%E5%AD%A6" target="_blank" rel="noopener noreferrer">湖北大学</a></li>
<li>专业：计算机科学与技术 &amp;  信息与计算科学 双学位</li>
<li>城市：深圳</li>
<li>E-mail：dreamjzwork@gmail.com / <a href="mailto:dreamjzwork@outlook.com">dreamjzwork@outlook.com</a></li>
</ul>`,r:{minutes:1.63,words:490},y:"a",t:"About"},["/about-me","/about-me.md"]],["v-145ac574","/blog/",{d:16406496e5,l:"2021年12月28日",r:{minutes:.03,words:10},y:"a",t:"Index"},["/blog/index.html","/blog/README.md"]],["v-2d0a870d","/en/",{y:"h",t:"Blog Home",i:"home"},["/en/index.html","/en/README.md"]],["v-5aa3d8ba","/en/intro.html",{v:"/assets/images/cover3.jpg",e:`<h1> Intro Page</h1>
<p>Place your introduction and profile here.</p>
`,r:{minutes:.04,words:12},y:"a",t:"Intro Page",i:"info"},["/en/intro","/en/intro.md"]],["v-367b840a","/en/slides.html",{e:`<!-- markdownlint-disable MD024 MD033 MD051 -->
`,r:{minutes:3.24,words:971},y:"s",t:"Slide page",i:"slides"},["/en/slides","/en/slides.md"]],["v-6beb5d16","/gallery/",{r:{minutes:.6,words:179},y:"a",t:"クトリ・ノタ・セニオリス"},["/gallery/index.html","/gallery/README.md"]],["v-14e2aca8","/lang/",{d:16406496e5,l:"2021年12月28日",e:`<div class="hint-container tip">
<p class="hint-container-title">(≧∇≦)ﾉ</p>
<p>今朝のブログへよこそう!ヾ(≧▽≦*)o</p>
</div>
<p>本页将会将把外语笔记记录再此~</p>
`,r:{minutes:.1,words:30},y:"a",t:"Welcome to Kesa's blog"},["/lang/index.html","/lang/README.md"]],["v-15054f24","/note/",{d:1634256e6,l:"2021年10月15日",e:`<div class="hint-container tip">
<p class="hint-container-title">(≧∇≦)ﾉ</p>
<p>今朝のブログへよこそう!ヾ(≧▽≦*)o</p>
</div>
<!-- ![a](http://localhost:3000/get/@a) -->
<h2> 目的</h2>
<p>以前遇到好的技术博客，开源书籍或教程，只是浏览一遍或者就直接丢进收藏夹再也没看过了（收藏从未停止，学习从未开始~）</p>
<p>现在将自己学习的过程记录下来，只有脚踏实地去实践一遍才知道自己理解是否到位，也能增加自己的熟悉程度</p>
<p>Talk is cheap, show me the code ！</p>`,r:{minutes:1.27,words:382},y:"a",t:"Welcome"},["/note/index.html","/note/README.md"]],["v-ba0625c8","/reading/",{d:16406496e5,l:"2021年12月28日",e:`<div class="hint-container tip">
<p class="hint-container-title">(≧∇≦)ﾉ</p>
<p>今朝のブログへよこそう!ヾ(≧▽≦*)o</p>
</div>
<p>本页将会将把读书笔记记录再此~</p>
`,r:{minutes:.11,words:32},y:"a",t:"Welcome to Kesa's blog"},["/reading/index.html","/reading/README.md"]],["v-1559a150","/todo/",{e:`<h2> 搭建网站</h2>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 从Vuepress v1 迁移</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 引入自定义看板娘</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> Vuepress 存在重复加载 head 标签中的资源，待更新（见 <a href="https://github.com/vuepress/vuepress-next/issues/1268" target="_blank" rel="noopener noreferrer">issue#1268</a> )</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 引入 moe-counter, 部署至 Glitch</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> <s>设置定时任务，防止 Glitch 休眠</s> (Glitch 无法通过免费在线唤醒服务防止休眠了，需迁移至Replit)</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 添加搜索栏</label></li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 添加评论</label></li>
</ul>`,r:{minutes:.57,words:171},y:"a",t:""},["/todo/index.html","/todo/README.md"]],["v-29289036","/tool/bookmark.html",{d:168264e7,l:"2023年4月28日",c:["tool"],u:10,e:`<h2> 在线工具</h2>
<ul>
<li><a href="https://regex101.com/" target="_blank" rel="noopener noreferrer">regexp101</a> Regexp 生成/测试/代码生成</li>
<li><a href="https://wangchujiang.com/linux-command/" target="_blank" rel="noopener noreferrer">Linux 命令搜索</a></li>
</ul>
<h3> 绘图</h3>
<p>Mindmap</p>
<ul>
<li><a href="https://www.mindmaps.app/" target="_blank" rel="noopener noreferrer">mindmaps</a></li>
<li><a href="https://markmap.js.org/repl" target="_blank" rel="noopener noreferrer">markmap</a></li>
</ul>`,r:{minutes:.53,words:158},y:"a",t:"网站收藏"},["/tool/bookmark","/tool/bookmark.md"]],["v-6beeb8fc","/blog/golang/bytes_to_string_quickly.html",{d:16945632e5,l:"2023年9月13日",c:["golang"],e:`<p>Using <strong><code>unsafe</code></strong> package to convert <code>byte</code> slice to <code>string </code> is more efficient than <strong>type conversion</strong>.</p>
<h2> 1. <code>unsafe.Pointer</code> (Recommended)</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">BytesToStringUnsafePointer</span><span class="token punctuation">(</span>buf <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.12,words:335},y:"a",t:"Bytes to String Quickly"},["/blog/golang/bytes_to_string_quickly","/blog/golang/bytes_to_string_quickly.md"]],["v-53e31fe0","/blog/golang/natural_sort.html",{d:16840224e5,l:"2023年5月14日",c:["golang"],g:["sort"],u:9,e:`<h2> 1. Problem</h2>
<p>I recently wrote a tool <a href="https://github.com/dreamjz/gomdtoc" target="_blank" rel="noopener noreferrer">gomdtoc</a> to generate a Table of Contents for my notes directory. In order to sort the file names, I used the  <code>sort.Strings()</code>.</p>
<p>But it not working as I expected, the problem is: it sorts the names <strong>alphabetically</strong>.</p>`,r:{minutes:4.06,words:1218},y:"a",t:"How to sort file names naturally"},["/blog/golang/natural_sort","/blog/golang/natural_sort.md"]],["v-4b6696b8","/blog/raspberry-pi/clash-linux.html",{d:1635552e6,l:"2021年10月30日",c:["linux","raspberry pi"],g:["clash"],e:`<h2> 环境</h2>
<p>平常开发使用manjaro和windows，配置clash一直使用的GUI客户端，没有去折腾使用底层的clash（主要是懒...）</p>
<p>刚好最近入手了一个树莓派，这次就在树莓派上研究下clash的使用（主要是想整活）</p>
<p>本文环境：</p>
<ul>
<li>Raspi OS - 64bit</li>
</ul>
<h2> 安装</h2>
<p>在<a href="https://github.com/Dreamacro/clash" target="_blank" rel="noopener noreferrer">clash</a> github 仓库中选择 <a href="https://github.com/Dreamacro/clash/releases/download/v1.7.1/clash-linux-armv8-v1.7.1.gz" target="_blank" rel="noopener noreferrer">clash-linux-armv8-v1.7.1.gz</a> 下载（因为树莓派是ARM架构，本文使用的系统为64bit，需选择armv8）</p>`,r:{minutes:1.09,words:326},y:"a",t:"RspiOS 配置使用 Clash"},["/blog/raspberry-pi/clash-linux","/blog/raspberry-pi/clash-linux.md"]],["v-86290fc2","/blog/raspberry-pi/pi-docker-blog.html",{d:1635552e6,l:"2021年10月30日",c:["docker","nginx","raspberry pi"],e:`<p>之前仅在树莓派上安装nginx并部署了blog，但是如果nginx的配置有问题或者出现错误不方便解决（所有东西都在一台主机上）。</p>
<p>现在使用docker容器来部署nginx，如果配置错误可以删除容器推到重来，还可以部署多个服务，非常的便利</p>
<p>部署之前先停止已经运行的nginx</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> nginx <span class="token parameter variable">-s</span> stop  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:2.4,words:720},y:"a",t:"Raspberry Pi在docker nginx上部署blog"},["/blog/raspberry-pi/pi-docker-blog","/blog/raspberry-pi/pi-docker-blog.md"]],["v-99c27f88","/blog/raspberry-pi/pi-go.html",{d:1635552e6,l:"2021年10月30日",c:["linux","golang","raspberry pi"],e:`<p>​	本文主要介绍如何在树莓派搭建golang开发环境，涉及硬件及软件版本：</p>
<ul>
<li>Raspberry Pi : 4B+/8G</li>
<li>OS: Raspios-64bit</li>
<li>Golang: 1.15</li>
</ul>
<h2> 安装 Raspi OS</h2>
<p>首先为树莓派安装操作系统，树莓派可以采用官方OS或三方系统（ubuntu，manjaro，centos等），这里我们使用官方的<a href="https://downloads.raspberrypi.org/raspios_arm64/images/" target="_blank" rel="noopener noreferrer">Raspi OS 64-bit</a></p>`,r:{minutes:2.4,words:719},y:"a",t:"Raspberry Pi 搭建 golang 开发环境"},["/blog/raspberry-pi/pi-go","/blog/raspberry-pi/pi-go.md"]],["v-b5ed2b58","/blog/raspberry-pi/pi-nginx.html",{d:1635552e6,l:"2021年10月30日",c:["linux","nginx","raspberry pi"],e:`<p>入手了一个树莓派4B，想要将其变成小型服务器，同时也把自己的博客部署上去,环境：</p>
<ul>
<li>Raspberry Pi : 4B+/8G</li>
<li>OS: Raspios-64bit</li>
<li>Nginx</li>
</ul>
<h2> 配置静态IP</h2>
<p>由于树莓派连接家里的路由器，默认使用DHCP<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><a class="footnote-anchor" id="footnote-ref1">
<p>要做为服务器的话，设置静态方便配置连接</p>
<p>修改<code>cat /etc/dhcpcd.conf</code>:</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>interface wlan0
static ip_address=192.168.***.***/24 # IP地址
static routers=192.168.***.*** # 路由器地址
static domain_name=192.168.***.*** # dns解析地址
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></a>`,r:{minutes:2.76,words:827},y:"a",t:"Raspberry Pi 部署静态blog"},["/blog/raspberry-pi/pi-nginx","/blog/raspberry-pi/pi-nginx.md"]],["v-50e28978","/blog/vuepress/ghaction.html",{d:1682208e6,l:"2023年4月23日",c:["CI/CD"],g:["Github actions"],e:`<p>之前一直都是手动部署至 github pages 和云服务器，虽然有写脚本但是还不够方便，于是想到使用 Github Action 进行自动化部署，只需 Push 即可触发。</p>
<h2> 1. Github Action</h2>
<p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。 您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/overview-actions-simple.png" alt="触发运行器 1（它触发运行器 2 以运行作业 2 ）以运行作业 1 的事件的示意图。 每个作业都分为多个步骤。" tabindex="0" loading="lazy"><figcaption>触发运行器 1（它触发运行器 2 以运行作业 2 ）以运行作业 1 的事件的示意图。 每个作业都分为多个步骤。</figcaption></figure>`,r:{minutes:2.54,words:761},y:"a",t:"使用 Github Action 自动部署"},["/blog/vuepress/ghaction","/blog/vuepress/ghaction.md"]],["v-d113dcdc","/blog/vuepress/live2d_widget.html",{d:1682208e6,l:"2023年4月23日",c:["vuepress"],e:`<p>原项目地址：<a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener noreferrer">stevenjoezhang/live2d-widget/</a>。</p>
<h2> 1. 直接使用</h2>
<p>在配置文件中添加脚本, <code>config.ts</code>:</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>head<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span>
      <span class="token string">'script'</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        src<span class="token operator">:</span> <span class="token string">'https://fastly.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/autoload.js'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.3,words:90},y:"a",t:"添加自定义看板娘"},["/blog/vuepress/live2d_widget","/blog/vuepress/live2d_widget.md"]],["v-020997ea","/blog/vuepress/migrate_to_v2.html",{d:16821216e5,l:"2023年4月22日",c:["vuepress"],e:`<p>因 vuepress v1 即将停止更新且 v2 和 vitepress 有着更好的性能，故计划进行迁移。</p>
<p>现在的 vuepress-next (v2) 是社区项目，而 vitepress 为官方项目。但是 vuepress 的社区主题资源比较多，可以进行丰富的自定义，所以决定迁移至 vuepreess-next。</p>
<h2> 1. 安装 vuepress-theme-hope</h2>
<p>这里采用主题<a href="https://theme-hope.vuejs.press/" target="_blank" rel="noopener noreferrer">Vuepress-theme-hope</a>。</p>`,r:{minutes:1.85,words:556},y:"a",t:"将网站从 Vuepress v1 迁移至 v2"},["/blog/vuepress/migrate_to_v2","/blog/vuepress/migrate_to_v2.md"]],["v-17581545","/blog/vuepress/moe-counter.html",{d:1682208e6,l:"2023年4月23日",c:["vuepress"],e:`<p>原项目地址：<a href="https://github.com/journey-ad/Moe-Counter" target="_blank" rel="noopener noreferrer">journey-ad/Moe-Counter</a></p>
<h2> 1. 直接使用</h2>
<p>访问 <a href="https://count.getloli.com/" target="_blank" rel="noopener noreferrer">https://count.getloli.com</a>，获取自己的计数器图片地址即可。</p>
<h2> 2. 自定义</h2>`,r:{minutes:1.1,words:330},y:"a",t:"添加萌萌计数器"},["/blog/vuepress/moe-counter","/blog/vuepress/moe-counter.md"]],["v-0ae43aab","/blog/vuepress/ssl.html",{d:1682208e6,l:"2023年4月23日",c:["vuepress"],e:`<h2> 1. 获取证书</h2>
<p>这里采用阿里云的免费证书。</p>
<h3> 1.1 申请</h3>
<ul>
<li>访问 <a href="https://www.aliyun.com/product/cas" target="_blank" rel="noopener noreferrer">https://www.aliyun.com/product/cas</a>  选择免费 SSL 证书， 填写申请</li>
<li>DNS 验证：由于域名不是阿里云的，所以来到 <a href="https://www.namesilo.com/" target="_blank" rel="noopener noreferrer">https://www.namesilo.com/</a> 的控制台
<ul>
<li>在个人页面选择 <code>domain manager</code></li>
<li>在域名栏右侧点击蓝色小球 (Manage DNS for this domain)</li>
<li>选择 <code>TXT/SPF</code> 填入阿里云提供的信息
<img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/p540546.png" alt="验证信息" loading="lazy">
<img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/image-20230501174715884.png" alt="image-20230501174715884" loading="lazy"></li>
</ul>
</li>
</ul>`,r:{minutes:2.19,words:656},y:"a",t:"启用 HTTPS"},["/blog/vuepress/ssl","/blog/vuepress/ssl.md"]],["v-1c39fd42","/cheatsheet/git/rewrite_history.html",{d:16828128e5,l:"2023年4月30日",c:["git","cheatsheet"],e:`<p><a href="https://blog.gitguardian.com/rewriting-git-history-cheatsheet/" target="_blank" rel="noopener noreferrer">Original Article</a></p>
`,r:{minutes:.09,words:27},y:"a",t:"Rewrite Git History"},["/cheatsheet/git/rewrite_history","/cheatsheet/git/rewrite_history.md"]],["v-7a6ac2b6","/cheatsheet/golang/SliceTricks.html",{d:16828128e5,l:"2023年4月30日",c:["golang","cheatsheet"],g:["slice"],e:`<ul>
<li>Pic: <a href="https://ueokande.github.io/go-slice-tricks/" target="_blank" rel="noopener noreferrer">https://ueokande.github.io/go-slice-tricks/</a></li>
<li>Doc: <a href="https://github.com/golang/go/wiki/SliceTricks" target="_blank" rel="noopener noreferrer">https://github.com/golang/go/wiki/SliceTricks</a></li>
</ul>`,r:{minutes:4.33,words:1300},y:"a",t:"Slice Tricks"},["/cheatsheet/golang/SliceTricks","/cheatsheet/golang/SliceTricks.md"]],["v-c02a4b2e","/cheatsheet/linux/1.file_permission.html",{d:16966368e5,l:"2023年10月7日",c:["linux","cheatsheet"],e:`<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310082116508.jpeg" alt="图像" tabindex="0" loading="lazy"><figcaption>图像</figcaption></figure>
`,r:{minutes:.05,words:15},y:"a",t:"Linux File Permission"},["/cheatsheet/linux/1.file_permission","/cheatsheet/linux/1.file_permission.md"]],["v-2ebd7ecc","/cheatsheet/network/1.popular_protocols.html",{d:16966368e5,l:"2023年10月7日",c:["network","cheatsheet"],e:`<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310082122123.jpg" alt="document_page-0001" tabindex="0" loading="lazy"><figcaption>document_page-0001</figcaption></figure>
`,r:{minutes:.05,words:16},y:"a",t:"8 popular network protocols"},["/cheatsheet/network/1.popular_protocols","/cheatsheet/network/1.popular_protocols.md"]],["v-395cd082","/en/demo/",{c:["Guide"],e:`<h2> Catalog</h2>
<ul>
<li>
<p><a href="/en/demo/markdown.html" target="blank">Markdown Enhance</a></p>
</li>
<li>
<p><a href="/en/demo/page.html" target="blank">Page Config</a></p>
</li>
<li>
<p><a href="/en/demo/disable.html" target="blank">Function Disable</a></p>
</li>
<li>
<p><a href="/en/demo/encrypt.html" target="blank">Encryption Demo</a></p>
</li>
</ul>`,r:{minutes:.07,words:22},y:"a",t:"Features Demo",i:"discover",I:0},["/en/demo/index.html","/en/demo/README.md"]],["v-70eda030","/en/demo/disable.html",{c:["Guide"],g:["disable"],e:`<p>You can disable some function and layout on the page by setting the Frontmatter of the page.</p>
`,r:{minutes:.28,words:83},y:"a",t:"Disabling layout and features",i:"config",O:3},["/en/demo/disable","/en/demo/disable.md"]],["v-3777b6d3","/en/demo/encrypt.html",{c:["Guide"],g:["encryption"],n:!0,r:{minutes:.3,words:90},y:"a",t:"Encryption Article",i:"lock"},["/en/demo/encrypt","/en/demo/encrypt.md"]],["v-4a2a37eb","/en/demo/markdown.html",{c:["Guide"],g:["Markdown"],e:`<p>VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.</p>
<p>You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.</p>
`,r:{minutes:2.63,words:788},y:"a",t:"Markdown Enhance",i:"markdown",O:2},["/en/demo/markdown","/en/demo/markdown.md"]],["v-0e4acecb","/en/demo/page.html",{a:"Ms.Hope",d:15778368e5,l:"January 1, 2020",c:["Guide"],g:["Page config","Guide"],u:!0,v:"/assets/images/cover1.jpg",e:`<p>Content before <code>more</code> comment is regarded as page excerpt.</p>
`,r:{minutes:.92,words:275},y:"a",t:"Page Config",i:"page",O:1},["/en/demo/page","/en/demo/page.md"]],["v-fb852992","/en/posts/cherry.html",{d:16416864e5,l:"January 9, 2022",c:["Cherry"],g:["red","small","round"],e:`<h1> Cherry</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.08,words:25},y:"a",t:"Cherry",i:"edit"},["/en/posts/cherry","/en/posts/cherry.md"]],["v-4fd051a1","/en/posts/dragonfruit.html",{d:16417728e5,l:"January 10, 2022",c:["Dragon Fruit","Fruit"],g:["red","big"],e:`<h1> Dragon Fruit</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:27},y:"a",t:"Dragon Fruit",i:"edit"},["/en/posts/dragonfruit","/en/posts/dragonfruit.md"]],["v-57615dc1","/en/posts/strawberry.html",{d:16418592e5,l:"January 11, 2022",c:["Fruit","Strawberry"],g:["red","small"],e:`<h1> Strawberry</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.08,words:25},y:"a",t:"Strawberry",i:"edit"},["/en/posts/strawberry","/en/posts/strawberry.md"]],["v-285adf66","/en/posts/tomato.html",{d:16419456e5,l:"January 12, 2022",c:["Vegetable"],g:["red","round"],u:!0,v:"/assets/images/cover2.jpg",e:`<h1> Tomato</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.1,words:30},y:"a",t:"Tomato",i:"edit"},["/en/posts/tomato","/en/posts/tomato.md"]],["v-a747c65e","/interview/golang/golang.html",{d:16488576e5,l:"2022年4月2日",e:`<h2> 1. Goalng 安全读写共享变量方式</h2>
<ul>
<li>sync.Mutex 加锁</li>
<li>channel</li>
<li>atomic</li>
</ul>
<h2> 2. Channel 有无缓冲的区别</h2>
<ul>
<li>无缓冲：<code>make(chan T)</code>， 发送和接收是<strong>同步</strong>的
<ul>
<li>发送阻塞，直到数据被接收</li>
<li>接收阻塞，直到读取到数据</li>
</ul>
</li>
<li>有缓冲：<code>make(chan T, buf_size)</code>，发送和接收<strong>不同步</strong>
<ul>
<li>缓冲区<strong>满</strong>时，发送阻塞</li>
<li>缓冲区<strong>空</strong>时，接收阻塞</li>
</ul>
</li>
</ul>`,r:{minutes:12.88,words:3863},y:"a",t:"Golang"},["/interview/golang/golang","/interview/golang/golang.md"]],["v-57cc0d8b","/interview/mysql/mysql.html",{d:16488576e5,l:"2022年4月2日",e:`<h2> 1. 事务的四个特性</h2>
<p>ACID (Atomicity, Correspondence, Isolation, Durability)。</p>
<ol>
<li><strong>原子性</strong>（Atomicity)：事务中的操作，要么<strong>全部成功</strong>，要么<strong>全部失败</strong>。事务在执行过程中发生错误，就会回滚（Rollback）到事务开始前的状态，就像事务从未发生过一样。</li>
<li><strong>一致性</strong> (Correspondence)：事务开始前和结束后，必须使数据库从一个一致性状态变换到另一个一致性状态，数据库的完整性约束没有被破坏。
假设用户A和用户B两者的钱加起来一共是5000，那么不管A和B之间如何转账，转几次账，事务结束后两个用户的钱相加起来应该还得是5000，这就是事务的一致性。</li>
<li><strong>隔离性</strong> (Isolation)：多个用户并发访问数据库时，每个事务之间不能相互干扰，由此引申出<strong>隔离级别</strong>。</li>
<li><strong>持久性</strong> (Durability):  事务一旦被提交，对数据库的改动是永久性的。</li>
</ol>`,r:{minutes:4.48,words:1345},y:"a",t:"Mysql"},["/interview/mysql/mysql","/interview/mysql/mysql.md"]],["v-2916a324","/interview/net/network.html",{d:16488576e5,l:"2022年4月2日",e:`<h2> 1. TCP 三次握手和四次挥手</h2>
<h3> 三次握手</h3>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/format.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<ol>
<li>客户端发送<strong>连接请求报文（SYN = 1，seq = x）</strong>，客户端进入 SYN-SENT （<strong>同步已发送</strong>）状态。<mark>TCP 规定，SYN 报文（SYN = 1），不能携带数据，但需要消耗一个序列号。</mark></li>
<li>TCP 服务器收到请求报文后，若同意连接，则发出<strong>确认报文（SYN = 1，ACK = 1，ack = x+1，seq = y）</strong>， TCP 服务器进入 **SYN-RCVD （同步接收）**状态。<mark>此报文无法携带数据，需要消耗一个序列号。</mark></li>
<li>TCP 客户端收到后，向服务器发送<strong>确认报文（ACK = 1， ack = y+1，seq = x+1）</strong>。此时连接建立，客户端进入<strong>连接已建立 （ESTABLISHED）状态</strong>。<mark>此报文可携带数据，若无数据则不消耗序列号</mark>。</li>
<li>当服务器收到客户端的确认报文后，进入**连接已建立（ESTABLISHED）**状态。</li>
</ol>`,r:{minutes:2.69,words:807},y:"a",t:"Network"},["/interview/net/network","/interview/net/network.md"]],["v-822adc4e","/interview/redis/redis.html",{d:16488576e5,l:"2022年4月2日",e:`<h2> 1. 数据结构及使用场景</h2>
<ul>
<li>String 字符串
Key 都为字符串类型，Set key val 使用的是字符串；</li>
<li>Hash 哈希
键值对结构；</li>
<li>List 列表（双向链表）
存储多个有序的字符串；</li>
<li>Set 集合
集合中不允许有重复元素，元素是无序的。可以进行相关的集合计算（交并补等）；</li>
<li>Zset （Sorted Set，有序集合）
采用跳表实现，相较于 Set  多了 Score 从，元素可按照 Score 进行排列；</li>
</ul>
<h2> 2. 持久化方式</h2>
<ol>
<li>RDB ：快照形式将内存中的数据保存到一个 dump 文件中，定时保存；
当 Redis 需要持久化时，会 fork 一个子进程，子进程将数据写入磁盘上的临时 RDB 文件中。当子进程写完后，将原来的 RDB 替换掉。</li>
<li>AOF： 把所有的修改命令存到一个文件中；
使用 AOF 做持久化，每一个写命令都将追加到 <code>appendonly.aof</code> 文件中。AOF 的默认策略是每秒中同步一次。
缺点：AOF 文件体积大于 RDB，且相对较慢；</li>
</ol>`,r:{minutes:3.76,words:1129},y:"a",t:"Redis"},["/interview/redis/redis","/interview/redis/redis.md"]],["v-72954ae8","/leetcode/solution/1.twoSum.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/two-sum/" target="_blank" rel="noopener noreferrer">1. 两数之和</a></p>
<blockquote>
<p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请你在该数组中找出 <strong>和为目标值</strong> <em><code>target</code></em> 的那 <strong>两个</strong> 整数，并返回它们的数组下标。</p>
<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>
<p>你可以按任意顺序返回答案。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [2,7,11,15], target = 9
输出：[0,1]
解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [3,2,4], target = 6
输出：[1,2]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [3,3], target = 6
输出：[0,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>2 &lt;= nums.length &lt;= 10^4</code></li>
<li><code>-10^9 &lt;= nums[i] &lt;= 10^9</code></li>
<li><code>-10^9 &lt;= target &lt;= 10^9</code></li>
<li><strong>只会存在一个有效答案</strong></li>
</ul>
</blockquote>`,r:{minutes:1,words:301},y:"a",t:"1. TwoSum"},["/leetcode/solution/1.twoSum","/leetcode/solution/1.twoSum.md"]],["v-0894e1ba","/leetcode/solution/102.binary_tree_level_order_traversal.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/binary-tree-level-order-traversal/" target="_blank" rel="noopener noreferrer">102. 二叉树的层序遍历</a></p>
<blockquote>
<p>给你二叉树的根节点 <code>root</code> ，返回其节点值的 <strong>层序遍历</strong> 。 （即逐层地，从左到右访问所有节点）。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = [3,9,20,null,null,15,7]
输出：[[3],[9,20],[15,7]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = [1]
输出：[[1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>树中节点数目在范围 <code>[0, 2000]</code> 内</li>
<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>
</ul>
</blockquote>`,r:{minutes:2.84,words:853},y:"a",t:"102. Binary Tree Level Order Traversal"},["/leetcode/solution/102.binary_tree_level_order_traversal","/leetcode/solution/102.binary_tree_level_order_traversal.md"]],["v-535d9b4c","/leetcode/solution/103.binary_tree_zigzag_level_order_traversal.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/" target="_blank" rel="noopener noreferrer">103. 二叉树的锯齿形层序遍历</a></p>
<blockquote>
<p>给你二叉树的根节点 <code>root</code> ，返回其节点值的 <strong>锯齿形层序遍历</strong> 。（即先从左往右，再从右往左进行下一层遍历，以此类推，层与层之间交替进行）。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/tree1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = [3,9,20,null,null,15,7]
输出：[[3],[20,9],[15,7]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = [1]
输出：[[1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：root = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>树中节点数目在范围 <code>[0, 2000]</code> 内</li>
<li><code>-100 &lt;= Node.val &lt;= 100</code></li>
</ul>
</blockquote>`,r:{minutes:3.56,words:1069},y:"a",t:"103. Binary Tree Zigzag Level Order Traversal"},["/leetcode/solution/103.binary_tree_zigzag_level_order_traversal","/leetcode/solution/103.binary_tree_zigzag_level_order_traversal.md"]],["v-549fa92c","/leetcode/solution/121.122.123.188.309.714.stock_series.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p>股票系列一共有六个问题:</p>
<ul>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="noopener noreferrer">121. 买卖股票的最佳时机</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener noreferrer">122. 买卖股票的最佳时机 II</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/" target="_blank" rel="noopener noreferrer">123. 买卖股票的最佳时机 III</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/" target="_blank" rel="noopener noreferrer">188. 买卖股票的最佳时机 IV</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/" target="_blank" rel="noopener noreferrer">309. 最佳买卖股票时机含冷冻期</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/" target="_blank" rel="noopener noreferrer">714. 买卖股票的最佳时机含手续费</a></li>
</ul>`,r:{minutes:10,words:2999},y:"a",t:"121.122.123.188.309.714 股票问题通解"},["/leetcode/solution/121.122.123.188.309.714.stock_series","/leetcode/solution/121.122.123.188.309.714.stock_series.md"]],["v-3eb533c2","/leetcode/solution/141.142.linked_list_cycle.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p>d环形链表:</p>
<ul>
<li><a href="https://leetcode.cn/problems/linked-list-cycle/" target="_blank" rel="noopener noreferrer">141. 环形链表</a></li>
<li><a href="https://leetcode.cn/problems/linked-list-cycle-ii/" target="_blank" rel="noopener noreferrer">142. 环形链表 II</a></li>
</ul>
<h2> 1. 判断是否有环 (快慢指针)</h2>`,r:{minutes:3.4,words:1019},y:"a",t:"141.142. Linked List Cycle"},["/leetcode/solution/141.142.linked_list_cycle","/leetcode/solution/141.142.linked_list_cycle.md"]],["v-097e0892","/leetcode/solution/146.LRU_cache.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/lru-cache/" target="_blank" rel="noopener noreferrer">146. LRU 缓存</a></p>
<blockquote>
<p>请你设计并实现一个满足 <a href="https://baike.baidu.com/item/LRU" target="_blank" rel="noopener noreferrer">LRU (最近最少使用) 缓存</a> 约束的数据结构。</p>
<p>实现 <code>LRUCache</code> 类：</p>
<ul>
<li><code>LRUCache(int capacity)</code> 以 <strong>正整数</strong> 作为容量 <code>capacity</code> 初始化 LRU 缓存</li>
<li><code>int get(int key)</code> 如果关键字 <code>key</code> 存在于缓存中，则返回关键字的值，否则返回 <code>-1</code> 。</li>
<li><code>void put(int key, int value)</code> 如果关键字 <code>key</code> 已经存在，则变更其数据值 <code>value</code> ；如果不存在，则向缓存中插入该组 <code>key-value</code> 。如果插入操作导致关键字数量超过 <code>capacity</code> ，则应该 <strong>逐出</strong> 最久未使用的关键字。</li>
</ul>
<p>函数 <code>get</code> 和 <code>put</code> 必须以 <code>O(1)</code> 的平均时间复杂度运行。</p>
<p><strong>示例：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入
["LRUCache", "put", "put", "get", "put", "get", "put", "get", "get", "get"]
[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]
输出
[null, null, null, 1, null, -1, null, -1, 3, 4]

解释
LRUCache lRUCache = new LRUCache(2);
lRUCache.put(1, 1); // 缓存是 {1=1}
lRUCache.put(2, 2); // 缓存是 {1=1, 2=2}
lRUCache.get(1);    // 返回 1
lRUCache.put(3, 3); // 该操作会使得关键字 2 作废，缓存是 {1=1, 3=3}
lRUCache.get(2);    // 返回 -1 (未找到)
lRUCache.put(4, 4); // 该操作会使得关键字 1 作废，缓存是 {4=4, 3=3}
lRUCache.get(1);    // 返回 -1 (未找到)
lRUCache.get(3);    // 返回 3
lRUCache.get(4);    // 返回 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= capacity &lt;= 3000</code></li>
<li><code>0 &lt;= key &lt;= 10000</code></li>
<li><code>0 &lt;= value &lt;= 10^5</code></li>
<li>最多调用 <code>2 * 10^5</code> 次 <code>get</code> 和 <code>put</code></li>
</ul>
</blockquote>`,r:{minutes:2.36,words:707},y:"a",t:"146. LRU Cache"},["/leetcode/solution/146.LRU_cache","/leetcode/solution/146.LRU_cache.md"]],["v-9655c078","/leetcode/solution/15.three_sum.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/3sum/" target="_blank" rel="noopener noreferrer">15. 三数之和</a></p>
<blockquote>
<p>给你一个整数数组 <code>nums</code> ，判断是否存在三元组 <code>[nums[i], nums[j], nums[k]]</code> 满足 <code>i != j</code>、<code>i != k</code> 且 <code>j != k</code> ，同时还满足 <code>nums[i] + nums[j] + nums[k] == 0</code> 。请</p>
<p>你返回所有和为 <code>0</code> 且不重复的三元组。</p>
<p>**注意：**答案中不可以包含重复的三元组。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [-1,0,1,2,-1,-4]
输出：[[-1,-1,2],[-1,0,1]]
解释：
nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 。
nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 。
nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 。
不同的三元组是 [-1,0,1] 和 [-1,-1,2] 。
注意，输出的顺序和三元组的顺序并不重要。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [0,1,1]
输出：[]
解释：唯一可能的三元组和不为 0 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [0,0,0]
输出：[[0,0,0]]
解释：唯一可能的三元组和为 0 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>3 &lt;= nums.length &lt;= 3000</code></li>
<li><code>-10^5 &lt;= nums[i] &lt;= 10^5</code></li>
</ul>
</blockquote>`,r:{minutes:1.58,words:475},y:"a",t:"15. Three Sum"},["/leetcode/solution/15.three_sum","/leetcode/solution/15.three_sum.md"]],["v-5125b4c6","/leetcode/solution/20.valid_parentheses.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/valid-parentheses/" target="_blank" rel="noopener noreferrer">20. 有效的括号</a></p>
<blockquote>
<p>给定一个只包括 <code>'('</code>，<code>')'</code>，<code>'{'</code>，<code>'}'</code>，<code>'['</code>，<code>']'</code> 的字符串 <code>s</code> ，判断字符串是否有效。</p>
<p>有效字符串需满足：</p>
<ol>
<li>左括号必须用相同类型的右括号闭合。</li>
<li>左括号必须以正确的顺序闭合。</li>
<li>每个右括号都有一个对应的相同类型的左括号。</li>
</ol>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：s = "()"
输出：true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：s = "()[]{}"
输出：true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：s = "(]"
输出：false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= s.length &lt;= 10^4</code></li>
<li><code>s</code> 仅由括号 <code>'()[]{}'</code> 组成</li>
</ul>
</blockquote>`,r:{minutes:1.12,words:335},y:"a",t:"20. Valid Parentheses"},["/leetcode/solution/20.valid_parentheses","/leetcode/solution/20.valid_parentheses.md"]],["v-2037675e","/leetcode/solution/200.number_of_islands.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/number-of-islands/" target="_blank" rel="noopener noreferrer">200. 岛屿数量</a></p>
<blockquote>
<p>给你一个由 <code>'1'</code>（陆地）和 <code>'0'</code>（水）组成的的二维网格，请你计算网格中岛屿的数量。</p>
<p>岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。</p>
<p>此外，你可以假设该网格的四条边均被水包围。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
输出：1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
输出：3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>m == grid.length</code></li>
<li><code>n == grid[i].length</code></li>
<li><code>1 &lt;= m, n &lt;= 300</code></li>
<li><code>grid[i][j]</code> 的值为 <code>'0'</code> 或 <code>'1'</code></li>
</ul>
</blockquote>`,r:{minutes:5.21,words:1563},y:"a",t:"200. Number of Islands"},["/leetcode/solution/200.number_of_islands","/leetcode/solution/200.number_of_islands.md"]],["v-29f01add","/leetcode/solution/206.reverse_linked_list.html",{d:16950816e5,l:"2023年9月19日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/reverse-linked-list/" target="_blank" rel="noopener noreferrer">206. 反转链表</a></p>
<blockquote>
<p>给你单链表的头节点 <code>head</code> ，请你反转链表，并返回反转后的链表。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,3,4,5]
输出：[5,4,3,2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/rev1ex2.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2]
输出：[2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>链表中节点的数目范围是 <code>[0, 5000]</code></li>
<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>
</ul>
</blockquote>`,r:{minutes:1.04,words:313},y:"a",t:"206. Reverse Linked List"},["/leetcode/solution/206.reverse_linked_list","/leetcode/solution/206.reverse_linked_list.md"]],["v-a32a07dc","/leetcode/solution/21.merge_two_sorted_lists.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/merge-two-sorted-lists/" target="_blank" rel="noopener noreferrer">21. 合并两个有序链表</a></p>
<blockquote>
<p>将两个升序链表合并为一个新的 <strong>升序</strong> 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2020/10/03/merge_ex1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：l1 = [1,2,4], l2 = [1,3,4]
输出：[1,1,2,3,4,4]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：l1 = [], l2 = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：l1 = [], l2 = [0]
输出：[0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>两个链表的节点数目范围是 <code>[0, 50]</code></li>
<li><code>-100 &lt;= Node.val &lt;= 100</code></li>
<li><code>l1</code> 和 <code>l2</code> 均按 <strong>非递减顺序</strong> 排列</li>
</ul>
</blockquote>`,r:{minutes:1.4,words:419},y:"a",t:"21. Merge Two Sorted Lists"},["/leetcode/solution/21.merge_two_sorted_lists","/leetcode/solution/21.merge_two_sorted_lists.md"]],["v-6348cbb8","/leetcode/solution/215.kth_ele_in_arr.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/kth-largest-element-in-an-array/" target="_blank" rel="noopener noreferrer">215. 数组中的第K个最大元素</a></p>
<blockquote>
<p>给定整数数组 <code>nums</code> 和整数 <code>k</code>，请返回数组中第 <code>**k**</code> 个最大的元素。</p>
<p>请注意，你需要找的是数组排序后的第 <code>k</code> 个最大的元素，而不是第 <code>k</code> 个不同的元素。</p>
<p>你必须设计并实现时间复杂度为 <code>O(n)</code> 的算法解决此问题。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: [3,2,1,5,6,4], k = 2
输出: 5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: [3,2,3,1,2,4,5,5,6], k = 4
输出: 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= k &lt;= nums.length &lt;= 10^5</code></li>
<li><code>-104 &lt;= nums[i] &lt;= 10^4</code></li>
</ul>
</blockquote>`,r:{minutes:6.55,words:1964},y:"a",t:"215. Kth Largest Element in an Array"},["/leetcode/solution/215.kth_ele_in_arr","/leetcode/solution/215.kth_ele_in_arr.md"]],["v-dab163b2","/leetcode/solution/25.reverse_nodes_in_k_group.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/reverse-nodes-in-k-group/" target="_blank" rel="noopener noreferrer">25. K 个一组翻转链表</a></p>
<blockquote>
<p>给你链表的头节点 <code>head</code> ，每 <code>k</code> 个节点一组进行翻转，请你返回修改后的链表。</p>
<p><code>k</code> 是一个正整数，它的值小于或等于链表的长度。如果节点总数不是 <code>k</code> 的整数倍，那么请将最后剩余的节点保持原有顺序。</p>
<p>你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2020/10/03/reverse_ex1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,3,4,5], k = 2
输出：[2,1,4,3,5]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2020/10/03/reverse_ex2.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,3,4,5], k = 3
输出：[3,2,1,4,5]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>链表中的节点数目为 <code>n</code></li>
<li><code>1 &lt;= k &lt;= n &lt;= 5000</code></li>
<li><code>0 &lt;= Node.val &lt;= 1000</code></li>
</ul>
</blockquote>`,r:{minutes:1.58,words:473},y:"a",t:"25. Reverse Nodes in k-Group"},["/leetcode/solution/25.reverse_nodes_in_k_group","/leetcode/solution/25.reverse_nodes_in_k_group.md"]],["v-0aac4a8d","/leetcode/solution/3.longest_substring_without_repeating_characters.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noopener noreferrer">3. 无重复字符的最长子串</a></p>
<blockquote>
<p>给定一个字符串 <code>s</code> ，请你找出其中不含有重复字符的 <strong>最长子串</strong> 的长度。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>0 &lt;= s.length &lt;= 5 * 10^4</code></li>
<li><code>s</code> 由英文字母、数字、符号和空格组成</li>
</ul>
</blockquote>`,r:{minutes:1.93,words:580},y:"a",t:"3. Longest Substring Without Repeating Characters"},["/leetcode/solution/3.longest_substring_without_repeating_characters","/leetcode/solution/3.longest_substring_without_repeating_characters.md"]],["v-de9f1ca0","/leetcode/solution/33.search_in_rotated_sorted_array.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/search-in-rotated-sorted-array/" target="_blank" rel="noopener noreferrer">33. 搜索旋转排序数组</a></p>
<blockquote>
<p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p>
<p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p>
<p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code> 。</p>
<p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [4,5,6,7,0,1,2], target = 0
输出：4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [4,5,6,7,0,1,2], target = 3
输出：-1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1], target = 0
输出：-1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 5000</code></li>
<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>
<li><code>nums</code> 中的每个值都 <strong>独一无二</strong></li>
<li>题目数据保证 <code>nums</code> 在预先未知的某个下标上进行了旋转</li>
<li><code>-10^4 &lt;= target &lt;= 10^4</code></li>
</ul>
</blockquote>`,r:{minutes:1.47,words:441},y:"a",t:"33. Search in Rotated Sorted Array"},["/leetcode/solution/33.search_in_rotated_sorted_array","/leetcode/solution/33.search_in_rotated_sorted_array.md"]],["v-8355eb16","/leetcode/solution/46.permutations.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/permutations/" target="_blank" rel="noopener noreferrer">46. 全排列</a></p>
<blockquote>
<p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1,2,3]
输出：[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [0,1]
输出：[[0,1],[1,0]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1]
输出：[[1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 6</code></li>
<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>
<li><code>nums</code> 中的所有整数 <strong>互不相同</strong></li>
</ul>
</blockquote>`,r:{minutes:1.01,words:302},y:"a",t:"46. Permutations"},["/leetcode/solution/46.permutations","/leetcode/solution/46.permutations.md"]],["v-6b3e55f8","/leetcode/solution/5.longest_palindromic_substring.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/longest-palindromic-substring/" target="_blank" rel="noopener noreferrer">5. 最长回文子串</a></p>
<blockquote>
<p>给你一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。</p>
<p>如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：s = "babad"
输出："bab"
解释："aba" 同样是符合题意的答案。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：s = "cbbd"
输出："bb"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= s.length &lt;= 1000</code></li>
<li><code>s</code> 仅由数字和英文字母组成</li>
</ul>
</blockquote>`,r:{minutes:2.89,words:866},y:"a",t:"5. Longest Palindromic Substring"},["/leetcode/solution/5.longest_palindromic_substring","/leetcode/solution/5.longest_palindromic_substring.md"]],["v-2fe69306","/leetcode/solution/53.maximum_subarray.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/maximum-subarray/" target="_blank" rel="noopener noreferrer">53. 最大子数组和</a></p>
<blockquote>
<p>给你一个整数数组 <code>nums</code> ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p>
<p><strong>子数组</strong> 是数组中的一个连续部分。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [-2,1,-3,4,-1,2,1,-5,4]
输出：6
解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1]
输出：1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [5,4,-1,7,8]
输出：23
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>
<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>
</ul>
</blockquote>`,r:{minutes:1.52,words:456},y:"a",t:"53. Maximum Subarray"},["/leetcode/solution/53.maximum_subarray","/leetcode/solution/53.maximum_subarray.md"]],["v-1af74c42","/leetcode/solution/88.merge_sorted_array.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p><a href="https://leetcode.cn/problems/merge-sorted-array/" target="_blank" rel="noopener noreferrer">88. 合并两个有序数组</a></p>
<blockquote>
<p>给你两个按 <strong>非递减顺序</strong> 排列的整数数组 <code>nums1</code> 和 <code>nums2</code>，另有两个整数 <code>m</code> 和 <code>n</code> ，分别表示 <code>nums1</code> 和 <code>nums2</code> 中的元素数目。</p>
<p>请你 <strong>合并</strong> <code>nums2</code> 到 <code>nums1</code> 中，使合并后的数组同样按 <strong>非递减顺序</strong> 排列。</p>
<p>**注意：**最终，合并后数组不应由函数返回，而是存储在数组 <code>nums1</code> 中。为了应对这种情况，<code>nums1</code> 的初始长度为 <code>m + n</code>，其中前 <code>m</code> 个元素表示应合并的元素，后 <code>n</code> 个元素为 <code>0</code> ，应忽略。<code>nums2</code> 的长度为 <code>n</code> 。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
输出：[1,2,2,3,5,6]
解释：需要合并 [1,2,3] 和 [2,5,6] 。
合并结果是 [1,2,2,3,5,6] ，其中斜体加粗标注的为 nums1 中的元素。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums1 = [1], m = 1, nums2 = [], n = 0
输出：[1]
解释：需要合并 [1] 和 [] 。
合并结果是 [1] 。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums1 = [0], m = 0, nums2 = [1], n = 1
输出：[1]
解释：需要合并的数组是 [] 和 [1] 。
合并结果是 [1] 。
注意，因为 m = 0 ，所以 nums1 中没有元素。nums1 中仅存的 0 仅仅是为了确保合并结果可以顺利存放到 nums1 中。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>nums1.length == m + n</code></li>
<li><code>nums2.length == n</code></li>
<li><code>0 &lt;= m, n &lt;= 200</code></li>
<li><code>1 &lt;= m + n &lt;= 200</code></li>
<li><code>-10^9 &lt;= nums1[i], nums2[j] &lt;= 10^9</code></li>
</ul>
</blockquote>`,r:{minutes:2.1,words:630},y:"a",t:"88. Merge Sorted Array"},["/leetcode/solution/88.merge_sorted_array","/leetcode/solution/88.merge_sorted_array.md"]],["v-377f2ac8","/note/c-sharp/quick_start.html",{d:16803936e5,l:"2023年4月2日",c:["Note","C#"],g:["Tutorial"],e:`<p>C# is a programming language developed by Microsoft that runs on the .NET framework.</p>
<h2> 1. Syntax</h2>
<h3> 1.1 Hello World</h3>
<div class="language-c# line-numbers-mode" data-ext="c#"><pre class="language-c#"><code>using System;

namespace HelloWorld
{
   class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.72,words:2017},y:"a",t:"C# Quick Start",O:1},["/note/c-sharp/quick_start","/note/c-sharp/quick_start.md"]],["v-7991054c","/note/golang/endless.html",{d:16376256e5,l:"2021年11月23日",c:["golang","docker"],g:["endless","gin"],e:`<p>在学习 gin 时，官方文档介绍如何优雅地启动和停止服务</p>
<p>这里以 <a href="https://github.com/fvbock/endless" target="_blank" rel="noopener noreferrer">endless</a> 为例，开始学习</p>
<h2> 1. Introduction</h2>
<p>Zero downtime restarts for golang HTTP and HTTPS servers.</p>
<h3> 1.1 Features</h3>
<ul>
<li>Drop-in replacement for <code>http.ListenAndServe</code> and <code>http.ListenAndServeTLS</code></li>
<li>Signal hooks to execute your own code before or after the listened to signal (SIGHUP, SIGUSR1, SIGUER2, SIGINT, SIGTERM, SIGSTP)</li>
<li>You can start multiple servers from one binary and endless will take care of the different sockets/ports assignments when restarting</li>
</ul>`,r:{minutes:6.67,words:2002},y:"a",t:"Graceful Shutdown or Restart"},["/note/golang/endless","/note/golang/endless.md"]],["v-959407fc","/note/golang/gin.html",{d:16376256e5,l:"2021年11月23日",c:["golang"],g:["gin"],e:`<p>参考 Gin 官方文档，记录学习 Gin 的笔记</p>
<h2> 1. Introduction</h2>
<p>Gin is a web framework written in GO. It features a martini-like API with performance that is up to 40 times faster thanks to <a href="https://github.com/julienschmidt/httprouter" target="_blank" rel="noopener noreferrer">httprouter</a>.</p>`,r:{minutes:30.7,words:9210},y:"a",t:"Gin Web Framework"},["/note/golang/gin","/note/golang/gin.md"]],["v-385e0822","/note/golang/go-jwt.html",{d:16384896e5,l:"2021年12月3日",c:["golang","docker"],g:["go-jwt","jwt"],e:`<h2> 1 跨域认证问题</h2>
<p>传统的 session 的认证流程如下:</p>
<ol>
<li>用户向服务器发送用户名和密码</li>
<li>服务器验证通过后,将相关信息保存至 session 中</li>
<li>服务器将 session ID 返回给客户端并存储至 cookie 中</li>
<li>用户请求时会附上 session ID,服务器会根据 session ID 来得知用户身份</li>
</ol>
<h3> 1.1 传统 session 认证的问题</h3>
<p><strong>Session</strong>: 每个用户经过服务认证之后,会将 session 信息保存至内存中,当用户的数量增加时服务器的负荷会增大</p>`,r:{minutes:17.8,words:5339},y:"a",t:"Go jwt"},["/note/golang/go-jwt","/note/golang/go-jwt.md"]],["v-18c55e38","/note/nginx/nginx.html",{d:16356384e5,l:"2021年10月31日",c:["nginx"],e:`<h2> Introduction 简介</h2>
<p>Nginx(engine x)是一款轻量级的web服务器，反向代理服务器及电子邮件(IMAP/POP3)代理服务器</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/nginx.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 反向代理</h3>
<p>反向代理(Reverse proxy)方式是指以代理服务器来接受 internet 上的连接请求，然后将请求发给内部网络上的服务器，并将服务器上得到的结果返回给 internet 上请求连接的客户端，此时代理服务器就表现为一个反向代理服务器</p>`,r:{minutes:9.36,words:2809},y:"a",t:"Nginx 极简教程"},["/note/nginx/nginx","/note/nginx/nginx.md"]],["v-5208c422","/note/typescript/quick_start.html",{d:16841088e5,l:"2023年5月15日",c:["Note","Frontend","TypeScript"],g:["Tutorial"],e:`<h2> 1. Introduction</h2>
<p>TypeScript is a syntactic superset of JavaScript that adds <strong>static typing</strong>.</p>
<p>TypeScript uses <strong>compile time type checking</strong>, which means it checks if the specified types match before running the code, not while running the code.</p>
<h2> 2. Compiler</h2>`,r:{minutes:12.62,words:3786},y:"a",t:"Typescript Quick Start",O:1},["/note/typescript/quick_start","/note/typescript/quick_start.md"]],["v-72b977ca","/tool/golang/",{e:`<h1> Golang Resources</h1>
<h2> Open source books</h2>
<ul>
<li><a href="https://chai2010.cn/advanced-go-programming-book/#go%E8%AF%AD%E8%A8%80%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8Badvanced-go-programming" target="_blank" rel="noopener noreferrer">go语言高级编程</a></li>
<li><a href="https://www.topgoer.com/" target="_blank" rel="noopener noreferrer">topgoer</a></li>
<li><a href="https://gfw.go101.org/article/101.html" target="_blank" rel="noopener noreferrer">Go语言101</a></li>
<li><a href="https://draveness.me/golang/" target="_blank" rel="noopener noreferrer">Go 语言设计与实现</a></li>
<li><a href="https://geektutu.com/post/high-performance-go.html" target="_blank" rel="noopener noreferrer">Go 语言高性能编程</a></li>
<li><a href="https://books.studygolang.com/The-Golang-Standard-Library-by-Example/" target="_blank" rel="noopener noreferrer">Go语言标准库</a></li>
</ul>`,r:{minutes:.31,words:94},y:"a",t:"Golang Resources"},["/tool/golang/index.html","/tool/golang/README.md"]],["v-27637179","/tool/linux/",{e:`<h1> Linux Resources</h1>
<h2> Open source books</h2>
<ul>
<li><a href="https://wizardforcel.gitbooks.io/daxueba-kali-linux-tutorial/content/0.html" target="_blank" rel="noopener noreferrer">大学霸 Kali Linux 安全渗透教程</a></li>
</ul>
`,r:{minutes:.07,words:21},y:"a",t:"Linux Resources"},["/tool/linux/index.html","/tool/linux/README.md"]],["v-810fe0d8","/blog/algorithm/dynamic-programming/01.dp_sc_optimization_summary.html",{d:16948224e5,l:"2023年9月16日",c:["algorithm"],e:`<p>使用动态规划解决问题时, 若使用从下至上的迭代法, 可能需要使用二维数组来缓存计算结果.</p>
<p>二维数组的空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>,  那么需要优化缓存的大小以提高效率.</p>`,r:{minutes:5.56,words:1668},y:"a",t:"动态规划空间复杂度优化总结"},["/blog/algorithm/dynamic-programming/01.dp_sc_optimization_summary","/blog/algorithm/dynamic-programming/01.dp_sc_optimization_summary.md"]],["v-570e4ea8","/blog/algorithm/dynamic-programming/02.general_solution_of_stock_series_problem.html",{d:1695168e6,l:"2023年9月20日",c:["algorithm"],e:`<p>股票系列一共有六个问题:</p>
<ul>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/" target="_blank" rel="noopener noreferrer">121. 买卖股票的最佳时机</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener noreferrer">122. 买卖股票的最佳时机 II</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iii/" target="_blank" rel="noopener noreferrer">123. 买卖股票的最佳时机 III</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-iv/" target="_blank" rel="noopener noreferrer">188. 买卖股票的最佳时机 IV</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/" target="_blank" rel="noopener noreferrer">309. 最佳买卖股票时机含冷冻期</a></li>
<li><a href="https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/" target="_blank" rel="noopener noreferrer">714. 买卖股票的最佳时机含手续费</a></li>
</ul>`,r:{minutes:9.99,words:2998},y:"a",t:"股票问题通解"},["/blog/algorithm/dynamic-programming/02.general_solution_of_stock_series_problem","/blog/algorithm/dynamic-programming/02.general_solution_of_stock_series_problem.md"]],["v-e16459c4","/blog/algorithm/sort/01.QuickSort.html",{d:16946496e5,l:"2023年9月14日",c:["algorithm"],e:`<h2> 1. Quick Sort</h2>
<blockquote>
<p>Quicksort is a <a href="https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm" target="_blank" rel="noopener noreferrer">divide-and-conquer algorithm</a>. It works by selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. For this reason, it is sometimes called <strong>partition-exchange sort</strong>.</p>
</blockquote>`,r:{minutes:5.36,words:1608},y:"a",t:"Quick Sort 快速排序"},["/blog/algorithm/sort/01.QuickSort","/blog/algorithm/sort/01.QuickSort.md"]],["v-3f5dd1dc","/blog/algorithm/sort/02.MergeSort.html",{d:16946496e5,l:"2023年9月14日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, <strong>merge sort</strong> (also commonly spelled as <strong>mergesort</strong>) is an efficient, general-purpose, and <a href="https://en.wikipedia.org/wiki/Comparison_sort" target="_blank" rel="noopener noreferrer">comparison-based</a> <a href="https://en.wikipedia.org/wiki/Sorting_algorithm" target="_blank" rel="noopener noreferrer">sorting algorithm</a>.</p>
<p>Conceptually, a merge sort works as follows:</p>
<ol>
<li>Divide the unsorted list into <em>n</em> sublists, each containing one element (a list of one element is considered sorted).</li>
<li>Repeatedly <a href="https://en.wikipedia.org/wiki/Merge_algorithm" target="_blank" rel="noopener noreferrer">merge</a> sublists to produce new sorted sublists until there is only one sublist remaining. This will be the sorted list.</li>
</ol>
</blockquote>`,r:{minutes:2.14,words:642},y:"a",t:"Merge Sort 归并排序"},["/blog/algorithm/sort/02.MergeSort","/blog/algorithm/sort/02.MergeSort.md"]],["v-025d7b61","/blog/algorithm/sort/03.HeapSort.html",{d:16955136e5,l:"2023年9月24日",c:["algorithm"],e:`<h2> 1. 堆的定义</h2>
<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>heap</strong> is a specialized <a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" target="_blank" rel="noopener noreferrer">tree</a>-based <a href="https://en.wikipedia.org/wiki/Data_structure" target="_blank" rel="noopener noreferrer">data structure</a> that satisfies the <strong>heap property</strong>: In a <em>max heap</em>, for any given <a href="https://en.wikipedia.org/wiki/Node_(computer_science)" target="_blank" rel="noopener noreferrer">node</a> C, if P is a parent node of C, then the <em>key</em> (the <em>value</em>) of P is greater than or equal to the key of C. In a <em>min heap</em>, the key of P is less than or equal to the key of C.</p>
</blockquote>`,r:{minutes:2.86,words:858},y:"a",t:"Heap Sort  堆排序"},["/blog/algorithm/sort/03.HeapSort","/blog/algorithm/sort/03.HeapSort.md"]],["v-7ee1bb0f","/blog/golang/go-gin-blog/0.00.html",{d:16363296e5,l:"2021年11月8日",e:`<p>在学习了后端的 Gin 和 Gorm 和前端的 Vuex 和 Vue Router之后，是时候实践和巩固已学习的知识点了</p>
<p>接下来将创建一个简单的 blog application，将实现以下功能：</p>
<ul>
<li>登录验证</li>
<li>路由鉴权</li>
<li>文章的添加，删除，修改和查询</li>
<li>Markdown 格式文章的展示</li>
</ul>
<p>开发环境：</p>
<ul>
<li>OS: 5.10.79-1-MANJARO</li>
<li>Database: 10.6.5-MariaDB Arch Linux</li>
<li>Golang: 1.17</li>
<li>Node: 16.11.1</li>
</ul>`,r:{minutes:1.32,words:397},y:"a",t:"Gin blog"},["/blog/golang/go-gin-blog/0.00","/blog/golang/go-gin-blog/0.00.md"]],["v-4e6da3c9","/blog/golang/go-gin-blog/01.1.html",{d:1639008e6,l:"2021年12月9日",c:["Frontend","vue"],g:["go-gin-blog"],e:`<p>本节将实现前端页面的如下功能：</p>
<ul>
<li>文章列表</li>
<li>文章添加, 修改和删除</li>
<li>文章内容展示</li>
</ul>
<h2> 1. 初始化</h2>
<h3> 1.1 采用模板</h3>
<p>以 <a href="https://github.com/PanJiaChen/vue-admin-template" target="_blank" rel="noopener noreferrer">vue-admin-template</a> 为模板创建仓库 <a href="https://github.com/dreamjz/gin-blog" target="_blank" rel="noopener noreferrer">gin-blog</a> ， clone 到本地</p>`,r:{minutes:4.3,words:1289},y:"a",t:"Gin blog I"},["/blog/golang/go-gin-blog/01.1","/blog/golang/go-gin-blog/01.1.md"]],["v-50227c68","/blog/golang/go-gin-blog/01.2.html",{d:16383168e5,l:"2021年12月1日",c:["golang"],g:["gin","viper","gorm"],e:`<p>本节将完成 blog application 后端功能的实现：</p>
<ul>
<li>文章列表查询</li>
<li>文章的新增，修改和删除</li>
<li>用户名查询</li>
</ul>
<h2> 1. 初始化</h2>
<p>​	创建新的 github 仓库 <a href="https://github.com/dreamjz/gin-blog-server" target="_blank" rel="noopener noreferrer">gin-blog-server</a> ，clone 至本地</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gh repo clone dreamjz/gin-blog-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:15.28,words:4583},y:"a",t:"Gin blog II"},["/blog/golang/go-gin-blog/01.2","/blog/golang/go-gin-blog/01.2.md"]],["v-51d75507","/blog/golang/go-gin-blog/01.3.html",{d:16393536e5,l:"2021年12月13日",c:["golang","docker","mysql","nginx"],e:`<p>在之前的步骤中，我们完成了基本的文章增删改查功能，接下来就将其部署到 Docker 上</p>
<p>之前已经在 nginx 上部署了一个 vuepress 项目，这次就在另一个 nginx 上部署本项目</p>
<p>前端项目通过反向代理实现在同一域名下不同路径访问不同的应用：</p>
<ul>
<li><code>localhost/</code>:  为 vuepress blog</li>
<li><code>localhost/app/</code>: 为本应用</li>
</ul>
<p>后端项目通过创建一个负载均衡 nginx 来转发前端的请求</p>
<h2> 1. Fontend deploy</h2>`,r:{minutes:11.34,words:3402},y:"a",t:"Gin Blog III"},["/blog/golang/go-gin-blog/01.3","/blog/golang/go-gin-blog/01.3.md"]],["v-1f30217a","/blog/golang/how/1.impl_of_heap.html",{d:16957728e5,l:"2023年9月27日",c:["golang"],g:["why"],e:`<p>最近在练习leetcode题目时，需要用到堆，发现 Golang 标准库已经有<code>heap</code>包，在使用的同时也看看源码的写法。</p>
<h2> 1. 堆的定义</h2>
<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>heap</strong> is a specialized <a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" target="_blank" rel="noopener noreferrer">tree</a>-based <a href="https://en.wikipedia.org/wiki/Data_structure" target="_blank" rel="noopener noreferrer">data structure</a> that satisfies the <strong>heap property</strong>: In a <em>max heap</em>, for any given <a href="https://en.wikipedia.org/wiki/Node_(computer_science)" target="_blank" rel="noopener noreferrer">node</a> C, if P is a parent node of C, then the <em>key</em> (the <em>value</em>) of P is greater than or equal to the key of C. In a <em>min heap</em>, the key of P is less than or equal to the key of C.</p>
</blockquote>`,r:{minutes:5.12,words:1535},y:"a",t:"heap 包源码阅读"},["/blog/golang/how/1.impl_of_heap","/blog/golang/how/1.impl_of_heap.md"]],["v-2b556b2e","/blog/golang/why/01.1.why_is_this_slicegrow_formula.html",{d:16955136e5,l:"2023年9月24日",c:["golang"],g:["why"],e:`<p><s>原标题：为什么Golang切片扩容基准是1024 以及 为什么v1.18之后改变了扩容公式，发现标题太长可以改成轻小说</s></p>
<p>在阅读了<a href="https://draveness.me/golang" target="_blank" rel="noopener noreferrer">Go 语言设计与实现</a>的<a href="https://draveness.me/golang/docs/part2-foundation/ch03-datastructure/golang-array-and-slice/" target="_blank" rel="noopener noreferrer">3.2 切片实现原理</a>之后，了解到切片的扩容机制和扩容公式，但是不明白为什么要选择这个公式，所以查找了资料并做下总结。</p>`,r:{minutes:2.7,words:811},y:"a",t:"《关于golang切片扩容基准选择1024而v1.18之后公式发生改变了这件事》"},["/blog/golang/why/01.1.why_is_this_slicegrow_formula","/blog/golang/why/01.1.why_is_this_slicegrow_formula.md"]],["v-57baa4bc","/blog/golang/why/01.2.why_hmap_overflowthreshold_loadfactory.html",{d:16955136e5,l:"2023年9月24日",c:["golang"],g:["why"],e:`<p>在阅读了<a href="https://draveness.me/golang" target="_blank" rel="noopener noreferrer">Go 语言设计与实现</a>的<a href="https://draveness.me/golang/docs/part2-foundation/ch03-datastructure/golang-hashmap/" target="_blank" rel="noopener noreferrer">3.3 哈希表实现原理</a>之后，了解到哈希表的扩容有两个触发条件：</p>
<ol>
<li>装载因子达到 6.5</li>
<li>溢出桶过多</li>
</ol>`,r:{minutes:4.69,words:1406},y:"a",t:"《关于golang哈希表触发扩容条件是装载因子为6.5或溢出桶数量过多这件事》"},["/blog/golang/why/01.2.why_hmap_overflowthreshold_loadfactory","/blog/golang/why/01.2.why_hmap_overflowthreshold_loadfactory.md"]],["v-e0a4562c","/blog/golang/why/3.why_cannot_value_using_pointerinterfacemethods.html",{d:16955136e5,l:"2023年9月24日",c:["golang"],g:["why"],e:`<p>为何值类型的变量转换成接口变量之后无法调用接收者为指针的接口方法？</p>
<h2> 1. 接口和方法集</h2>
<p>对于变量的类型和其接口方法的接收者类型，当其转换成接口后的方法调用情况如下:</p>
<table>
<thead>
<tr>
<th>变量类型\\接口方法接收者类型</th>
<th>值</th>
<th>指针</th>
</tr>
</thead>
<tbody>
<tr>
<td>值</td>
<td>可</td>
<td>不可</td>
</tr>
<tr>
<td>指针</td>
<td>可</td>
<td>可</td>
</tr>
</tbody>
</table>`,r:{minutes:6.25,words:1875},y:"a",t:"《关于golang值类型变量转换成接口类型之后无法调用接收者为指针的接口方法这件事》"},["/blog/golang/why/3.why_cannot_value_using_pointerinterfacemethods","/blog/golang/why/3.why_cannot_value_using_pointerinterfacemethods.md"]],["v-040284a4","/blog/golang/why/4.why_iterate_map_randomly.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:'<p>在阅读<a href="https://draveness.me/golang" target="_blank" rel="noopener noreferrer">Go设计与实现</a>的<a href="https://draveness.me/golang/docs/part2-foundation/ch05-keyword/golang-for-range/" target="_blank" rel="noopener noreferrer">for-range</a>章节时，了解到使用<code>for-range</code>循环遍历map时，获取的值是乱序的，并非按照存入顺序。</p>',r:{minutes:3.08,words:923},y:"a",t:"为何使用for-range遍历map时是乱序的"},["/blog/golang/why/4.why_iterate_map_randomly","/blog/golang/why/4.why_iterate_map_randomly.md"]],["v-58aa03b4","/en/posts/apple/1.html",{d:16409952e5,l:"January 1, 2022",c:["Apple"],g:["red","big","round"],e:`<h1> Apple 1</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:26},y:"a",t:"Apple 1",i:"edit"},["/en/posts/apple/1","/en/posts/apple/1.md"]],["v-55405276","/en/posts/apple/2.html",{d:16410816e5,l:"January 2, 2022",c:["Apple"],g:["red","big","round"],e:`<h1> Apple 2</h1>
<p>A apple article being stared.</p>
`,r:{minutes:.11,words:34},y:"a",t:"Apple 2",i:"edit"},["/en/posts/apple/2","/en/posts/apple/2.md"]],["v-51d6a138","/en/posts/apple/3.html",{d:1641168e6,l:"January 3, 2022",c:["Apple","Fruit"],g:["red","big","round"],e:`<h1> Apple 3</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:27},y:"a",t:"Apple 3",i:"edit"},["/en/posts/apple/3","/en/posts/apple/3.md"]],["v-4e6ceffa","/en/posts/apple/4.html",{d:16412544e5,l:"January 4, 2022",c:["Apple","Fruit"],g:["red","big","round"],e:`<h1> Apple 4</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:27},y:"a",t:"Apple 4",i:"edit"},["/en/posts/apple/4","/en/posts/apple/4.md"]],["v-e748286e","/en/posts/banana/1.html",{d:16413408e5,l:"January 5, 2022",c:["Banana","Fruit"],g:["yellow","curly","long"],e:`<h1> Banana 1</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:27},y:"a",t:"Banana 1",i:"edit"},["/en/posts/banana/1","/en/posts/banana/1.md"]],["v-e3de7730","/en/posts/banana/2.html",{d:16414272e5,l:"January 6, 2022",c:["Banana","Fruit"],g:["yellow","curly","long"],e:`<h1> Banana 2</h1>
<p>A banana article being stared with number <code>10</code>.</p>
`,r:{minutes:.13,words:39},y:"a",t:"Banana 2",i:"edit"},["/en/posts/banana/2","/en/posts/banana/2.md"]],["v-e074c5f2","/en/posts/banana/3.html",{d:16415136e5,l:"January 7, 2022",c:["Banana"],g:["yellow","curly","long"],e:`<h1> Banana 3</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:26},y:"a",t:"Banana 3",i:"edit"},["/en/posts/banana/3","/en/posts/banana/3.md"]],["v-dd0b14b4","/en/posts/banana/4.html",{d:16416e8,l:"January 8, 2022",c:["Banana"],g:["yellow","curly","long"],e:`<h1> Banana 4</h1>
<h2> Heading 2</h2>
<p>Here is the content.</p>
<h3> Heading 3</h3>
<p>Here is the content.</p>
`,r:{minutes:.09,words:26},y:"a",t:"Banana 4",i:"edit"},["/en/posts/banana/4","/en/posts/banana/4.md"]],["v-62f769e2","/leetcode/category/array/118.pascals-triangle.html",{d:16479072e5,l:"2022年3月22日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给定一个非负整数 <code>numRows</code> ，生成 「杨辉三角」的前 <code>numRows</code> 行。</p>
<p>杨辉三角中，每个数是其左上方和右上方的数的和。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/1626927345-DZmfxB-PascalTriangleAnimated2.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.41,words:423},y:"a",t:"118. Pascals Triangle"},["/leetcode/category/array/118.pascals-triangle","/leetcode/category/array/118.pascals-triangle.md"]],["v-70286756","/leetcode/category/array/119.Pascals-Triangle-II.html",{d:16479072e5,l:"2022年3月22日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给定一个非负整数 <code>rowIndex</code> ，生成 「杨辉三角」的第 <code>rowIndex</code> 行。</p>
<p>杨辉三角中，每个数是其左上方和右上方的数的和。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/1626927345-DZmfxB-PascalTriangleAnimated2.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.75,words:526},y:"a",t:"119. Pascals Triangle II"},["/leetcode/category/array/119.Pascals-Triangle-II","/leetcode/category/array/119.Pascals-Triangle-II.md"]],["v-06561839","/leetcode/category/array/151_reverse_words_in_string.html",{d:16455744e5,l:"2022年2月23日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给你一个字符串 s ，逐个翻转字符串中的所有 单词 。</p>
<p>单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。</p>
<p>请你返回一个翻转 s 中单词顺序并用单个空格相连的字符串。</p>
<p>说明：</p>
<ul>
<li>输入字符串 s 可以在前面、后面或者单词间包含多余的空格。</li>
<li>翻转后单词间应当仅用一个空格分隔。</li>
<li>翻转后的字符串中不应包含额外的空格。</li>
</ul>
<p>Example：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>示例 1：
输入：s = "the sky is blue"
输出："blue is sky the"

示例 2：
输入：s = "  hello world  "
输出："world hello"
解释：输入字符串可以在前面或者后面包含多余的空格，但是翻转后的字符不能包括。

示例 3：
输入：s = "a good   example"
输出："example good a"
解释：如果两个单词间有多余的空格，将翻转后单词间的空格减少到只含一个。

示例 4：
输入：s = "  Bob    Loves  Alice   "
输出："Alice Loves Bob"

示例 5：
输入：s = "Alice does not even like bob"
输出："bob like even not does Alice"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.25,words:976},y:"a",t:"151. Reverse words in a string"},["/leetcode/category/array/151_reverse_words_in_string","/leetcode/category/array/151_reverse_words_in_string.md"]],["v-1e6f1d5c","/leetcode/category/array/153.Find-Minimum-In-Rotated-Sorted-Array.html",{d:16479936e5,l:"2022年3月23日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>已知一个长度为 n 的数组，预先按照升序排列，经由 1 到 n 次旋转之后，得到输入数组。</p>
<p>数组 <code>a[0], a[1], ..., a[n-1]</code> 旋转一次之后为 <code>a[n-1], a[0], ..., a[n-2]</code> 。</p>
<p>给一个元素值互不相同的数组 <code>nums</code>, 原来是一个升序排列的数组，并经过了若干次旋转，找出其中的最小元素。</p>
<p>必须设计一个时间复杂度为 <em>O(logn)</em> 的算法解决此问题。</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>示例 1：
输入：nums = [3,4,5,1,2]
输出：1
解释：原数组为 [1,2,3,4,5] ，旋转 3 次得到输入数组。

示例 2：
输入：nums = [4,5,6,7,0,1,2]
输出：0
解释：原数组为 [0,1,2,4,5,6,7] ，旋转 4 次得到输入数组。

示例 3：
输入：nums = [11,13,15,17]
输出：11
解释：原数组为 [11,13,15,17] ，旋转 4 次得到输入数组。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.64,words:792},y:"a",t:"153.Find Minimum In Rotated Sorted Array"},["/leetcode/category/array/153.Find-Minimum-In-Rotated-Sorted-Array","/leetcode/category/array/153.Find-Minimum-In-Rotated-Sorted-Array.md"]],["v-492efb38","/leetcode/category/array/167.Two-sum-ii-input-array-is-sorted.html",{d:16455744e5,l:"2022年2月23日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给你一个下标从 1 开始的整数数组 numbers ，该数组已按 非递减顺序排列  ，请你从数组中找出满足相加之和等于目标数 target 的两个数。如果设这两个数分别是 numbers[index1] 和 numbers[index2] ，则 1 &lt;= index1 &lt; index2 &lt;= numbers.length 。</p>
<p>以长度为 2 的整数数组 [index1, index2] 的形式返回这两个整数的下标 index1 和 index2。</p>
<p>你可以假设每个输入 只对应唯一的答案 ，而且你 不可以 重复使用相同的元素。</p>`,r:{minutes:3.61,words:1084},y:"a",t:"167. Two sum ii input array is sorted"},["/leetcode/category/array/167.Two-sum-ii-input-array-is-sorted","/leetcode/category/array/167.Two-sum-ii-input-array-is-sorted.md"]],["v-311bd816","/leetcode/category/array/1_Two_Sum.html",{d:16469568e5,l:"2022年3月11日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给定一个整数数组 <code>nums</code> 和一个整数目标值 <code>target</code>，请在该数组中找出 和为目标值 <code>target</code> 的 两个 整数，并返回其数组下标。</p>
<ul>
<li>每种输入只会对应一个答案</li>
<li>数组中同一元素不会在答案中重复出现</li>
<li>可按任意顺序返回答案</li>
</ul>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>示例 1：
输入：nums = [2,7,11,15], target = 9
输出：[0,1]
解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1]

示例 2：
输入：nums = [3,2,4], target = 6
输出：[1,2]

示例 3：
输入：nums = [3,3], target = 6
输出：[0,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.91,words:573},y:"a",t:"1. Two Sum"},["/leetcode/category/array/1_Two_Sum","/leetcode/category/array/1_Two_Sum.md"]],["v-5501cf2c","/leetcode/category/array/35_Search_insert_position.html",{d:1645488e6,l:"2022年2月22日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>
<p>请必须使用时间复杂度为 O(log n) 的算法。</p>
<h2> 2. 二分查找</h2>
<p>题中要求使用时间复杂度为 O(log n) 的算法，这里自然想到了二分查找。</p>
<p>在一组有序数组中，将数组一分为二，将要查询的元素和分割点进行比较，分为三种情况：</p>
<ul>
<li>相等直接返回</li>
<li>元素大于分割点，在分割点右侧继续查找</li>
<li>元素小于分割点，在分割点左侧继续查找</li>
</ul>`,r:{minutes:1.59,words:478},y:"a",t:"35 Search insert position"},["/leetcode/category/array/35_Search_insert_position","/leetcode/category/array/35_Search_insert_position.md"]],["v-ad253b78","/leetcode/category/array/557.Reverse-Words-In-a-String-III.html",{d:16479072e5,l:"2022年3月22日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给定一个字符串 s，翻转每个单词的字符顺序，同时仍保留空格和单词的初始顺序。</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>示例 1：
输入：s = "Let's take LeetCode contest"
输出："s'teL ekat edoCteeL tsetnoc"

示例 2:
输入： s = "God Ding"
输出："doG gniD"
 
提示：
1 &lt;= s.length &lt;= 5 * 104
s 包含可打印的 ASCII 字符。
s 不包含任何开头或结尾空格。
s 里 至少 有一个词。
s 中的所有单词都用一个空格隔开。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.93,words:278},y:"a",t:"557. Reverse Words In a String III"},["/leetcode/category/array/557.Reverse-Words-In-a-String-III","/leetcode/category/array/557.Reverse-Words-In-a-String-III.md"]],["v-821df360","/leetcode/category/array/724_Pivot_Index.html",{d:1645488e6,l:"2022年2月22日",c:["leetcode"],g:["array"],e:`<h2> 1. 题目描述</h2>
<p>给你一个整数数组 nums ，请计算数组的 中心下标 。</p>
<p>数组 中心下标 是数组的一个下标，其左侧所有元素相加的和等于右侧所有元素相加的和。</p>
<p>如果中心下标位于数组最左端，那么左侧数之和视为 0 ，因为在下标的左侧不存在元素。这一点对于中心下标位于数组最右端同样适用。</p>
<p>如果数组有多个中心下标，应该返回 最靠近左边 的那一个。如果数组不存在中心下标，返回 -1 。</p>
<h2> 2. 示例</h2>
<p>示例 1：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1, 7, 3, 6, 5, 6]
输出：3
解释：
中心下标是 3 。
左侧数之和 sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11 ，
右侧数之和 sum = nums[4] + nums[5] = 5 + 6 = 11 ，二者相等。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.77,words:530},y:"a",t:"724. Find Pivot Index"},["/leetcode/category/array/724_Pivot_Index","/leetcode/category/array/724_Pivot_Index.md"]],["v-04b56930","/leetcode/category/array/Concepts.html",{d:16455744e5,l:"2022年2月23日",c:["leetcode"],e:`<h2> 1. 集合、列表和数组</h2>
<h3> 1.1 集合</h3>
<p>定义：由一个或多个确定的元素所构成的整体</p>
<p>特性：</p>
<ul>
<li>集合中的元素类型不一定相同</li>
<li>集合中的元素没有顺序</li>
</ul>
<p>这样的集合并不直接存在于编程语言中，实际编程语言中的很多数据结构是在集合的基础上添加一些规则形成的。</p>
<h3> 1.2 列表</h3>
<p>列表（线性表）定义：是一种数据项构成的有限序列，即按照一定的线性顺序，排列而成的数据项的集合。</p>
<p>列表的概念是在集合的特征上形成的，它具有顺序，且长度可变。在编程语言中，列表常见的表现形式有数组和链表，还有两种特殊类型的列表栈和队列。</p>`,r:{minutes:12.44,words:3733},y:"a",t:"Array and String Concepts"},["/leetcode/category/array/Concepts","/leetcode/category/array/Concepts.md"]],["v-765b1aa3","/leetcode/category/hashtable/705.Design-HashSet.html",{d:1647216e6,l:"2022年3月14日",c:["leetcode"],e:`<h2> 1. 题目描述</h2>
<p>实现 <code>MyHashSet</code>:</p>
<ul>
<li><code>void add(key)</code> : 向哈希集合中插入值 <code>key</code></li>
<li><code>bool contains(key)</code>: 返回哈希集合中是否存在这个值 <code>key</code></li>
<li><code>void remove(key)</code>: 将给定值 <code>key</code> 从哈希集合中删除。如果哈希集合中没有这个值，什么也不做</li>
</ul>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：
["MyHashSet", "add", "add", "contains", "contains", "add", "contains", "remove", "contains"]
[[], [1], [2], [1], [3], [2], [2], [2], [2]]
输出：
[null, null, null, true, false, null, true, null, false]

解释：
MyHashSet myHashSet = new MyHashSet();
myHashSet.add(1);      // set = [1]
myHashSet.add(2);      // set = [1, 2]
myHashSet.contains(1); // 返回 True
myHashSet.contains(3); // 返回 False ，（未找到）
myHashSet.add(2);      // set = [1, 2]
myHashSet.contains(2); // 返回 True
myHashSet.remove(2);   // set = [1]
myHashSet.contains(2); // 返回 False ，（已移除）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.56,words:1368},y:"a",t:"705. Design HashSet"},["/leetcode/category/hashtable/705.Design-HashSet","/leetcode/category/hashtable/705.Design-HashSet.md"]],["v-3940b36a","/leetcode/category/hashtable/706.Design-HashMap.html",{d:16473888e5,l:"2022年3月16日",c:["leetcode"],e:`<h2> 1. 题目描述</h2>
<p>不使用内建的哈希表库设计哈希映射 (HashMap)。</p>
<p>实现 <code>MyHashMap</code> 类：</p>
<ul>
<li><code>MyHashMap()</code> ：空映射初始化对象</li>
<li><code>void put(int key, int value)</code>: 向 HashMap 插入一个键值对 <code>(key, value)</code>。如果 <code>key</code> 已经存在于映射中，更新对应的值 <code>value</code></li>
<li><code>int get(int key)</code>: 返回特定的 <code>key</code> 所映射的 <code>value</code>; 若映射中不包含 <code>key</code> 的映射则返回 -1</li>
<li><code>void remove(key)</code> : 如果映射中存在 <code>key</code> 的映射则移除对应的键值对</li>
</ul>`,r:{minutes:1.9,words:571},y:"a",t:"706. Design HashMap"},["/leetcode/category/hashtable/706.Design-HashMap","/leetcode/category/hashtable/706.Design-HashMap.md"]],["v-349a846f","/leetcode/category/hashtable/concepts.html",{d:1647216e6,l:"2022年3月14日",c:["leetcode"],e:`<p><strong>哈希表</strong>是一种使用<strong>哈希函数</strong>组织数据，以支持快速插入和搜索的数据结构。</p>
<p>哈希表有两种不同类型：</p>
<ul>
<li><strong>哈希集合</strong>： <strong>集合</strong>数据结构的实现之一，用于存储非重复值</li>
<li><strong>哈希映射</strong>： <strong>映射</strong>数据结构的实现之一，用于存储 K, V 键值对</li>
</ul>
<h2> 1. 哈希表原理</h2>
<p>哈希表的关键思想是<strong>将键映射到存储桶</strong>：</p>`,r:{minutes:2.91,words:874},y:"a",t:"Hash Table Concepts"},["/leetcode/category/hashtable/concepts","/leetcode/category/hashtable/concepts.md"]],["v-43f192d4","/note/docker/docker-compose/01.1.html",{d:16395264e5,l:"2021年12月15日",c:["docker"],g:["docker compose"],e:`<h1> Overview</h1>
<p>Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s service. Then, with a single command, you create and start all service from your configuration.</p>
<p>Compose works in all environments: production, staging, development, testing, as well as CI workflows.</p>`,r:{minutes:2.46,words:738},y:"a",t:"Overview"},["/note/docker/docker-compose/01.1","/note/docker/docker-compose/01.1.md"]],["v-4087e196","/note/docker/docker-compose/01.2.html",{d:16395264e5,l:"2021年12月15日",c:["docker"],g:["docker compose"],e:`<h1> Get Started</h1>
<p>本节代码参见<a href="">compose-test</a></p>
<h2> 1. Prerequisites</h2>
<p>首先安装 <code>Docker Compose</code> ,</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ pacman <span class="token parameter variable">-S</span> <span class="token function">docker-compose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:3.7,words:1109},y:"a",t:"Get Started"},["/note/docker/docker-compose/01.2","/note/docker/docker-compose/01.2.md"]],["v-3d1e3058","/note/docker/docker-compose/01.3.html",{d:16396128e5,l:"2021年12月16日",c:["docker"],g:["docker compose"],e:`<h1> Environment variables in Compose</h1>
<p>本节代码参见<a href="">compose-test</a></p>
<h2> 1. Substitute environment variables in Compose files</h2>
<p>It’s possible to use environment varibles in your shell to populate values inside a Compose file:</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">web</span><span class="token punctuation">:</span> 
  <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"webapp:\${TAG}"</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.35,words:706},y:"a",t:"Environment variables in Compose"},["/note/docker/docker-compose/01.3","/note/docker/docker-compose/01.3.md"]],["v-27edcf18","/note/docker/docker-compose/Preface.html",{d:16395264e5,l:"2021年12月15日",e:`<h1> Preface</h1>
<p>学习 docker compose 官方文档笔记</p>
<p>笔记中使用是 Compose V2 版本 <code>docker compse </code>， 操作系统为 <code>Manjaro</code></p>
`,r:{minutes:.12,words:37},y:"a",t:"Preface"},["/note/docker/docker-compose/Preface","/note/docker/docker-compose/Preface.md"]],["v-193915ab","/note/docker/docker-practice/preface.html",{d:16356384e5,l:"2021年10月31日",e:`<p>本文是自己学习开源书籍<a href="https://yeasy.gitbook.io/docker_practice/" target="_blank" rel="noopener noreferrer">Docker — 从入门到实践</a>的学习笔记，平常只会使用简单的docker指令，没有系统深入的去学习Docker相关知识</p>
<p>本文在学习书籍知识的同时，也会补充学习过程中的遇到问题和解决思路</p>
`,r:{minutes:.3,words:91},y:"a",t:"Preface"},["/note/docker/docker-practice/preface","/note/docker/docker-practice/preface.md"]],["v-799d9d9d","/note/docker/docker-tutorial/docker-nginx.html",{d:16356384e5,l:"2021年10月31日",c:["docker","nginx"],e:`<p>Nginx 是一款面向性能设计的 HTTP 服务器，能反向代理 HTTP，HTTPS 和邮件相关(SMTP，POP3，IMAP)的协议链接。并且提供了负载均衡以及 HTTP 缓存。它的设计充分使用异步事件模型，削减上下文调度的开销，提高服务器并发能力。采用了模块化设计，提供了丰富模块的第三方模块</p>
<p>本文介绍 docker 如何部署 nginx</p>
<h2> 快速开始</h2>
<p>在 docker hub 查找镜像</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> search nginx
NAME                              DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
nginx                             Official build of Nginx.                        <span class="token number">15728</span>     <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
jwilder/nginx-proxy               Automated Nginx reverse proxy <span class="token keyword">for</span> <span class="token function">docker</span> con…   <span class="token number">2088</span>                 <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
richarvey/nginx-php-fpm           Container running Nginx + PHP-FPM capable of…   <span class="token number">818</span>                  <span class="token punctuation">[</span>OK<span class="token punctuation">]</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.89,words:567},y:"a",t:"Dokcer 部署 Nginx"},["/note/docker/docker-tutorial/docker-nginx","/note/docker/docker-tutorial/docker-nginx.md"]],["v-4c02f4c4","/note/docker/docker-tutorial/get-started.html",{d:16356384e5,l:"2021年10月31日",c:["docker"],e:`<p>Docker是一个开源的应用容器引擎，容器是一个虚拟化的独立环境，开发者可以部署应用到一个可移植的容器中，然后发布到任何流行的linux机器上，也可以实现虚拟化</p>
<p>Docker 从 <code>1.13</code> 版本之后采用时间线的方式作为版本号，分为社区版 <code>CE</code> 和企业版 <code>EE</code>，社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等</p>
<p>社区版按照 <code>stable</code> 和 <code>edge</code> 两种方式发布，每个季度更新 <code>stable</code> 版本，如 <code>17.06</code>，<code>17.09</code>；每个月份更新 <code>edge</code> 版本，如<code>17.09</code>，<code>17.10</code></p>`,r:{minutes:5.85,words:1755},y:"a",t:"Docker 入门"},["/note/docker/docker-tutorial/get-started","/note/docker/docker-tutorial/get-started.md"]],["v-64cfc26e","/note/golang/concurrency/GMPModel.html",{d:16418592e5,l:"2022年1月11日",c:["golang"],g:["GMP"],e:`<h2> 1. Golang 调度器的由来</h2>
<h3> 1.1 单进程时代无需调度器</h3>
<p>在早期的操作系统中一个程序就是一个进程，只有一个进程运行完毕之后才能运行下一个进程，所有的进程只能串行发生。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/06IoYRyruP.png!large" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>早期的单进程操作系统，面临着两个问题：</p>`,r:{minutes:17.55,words:5266},y:"a",t:"GMP 原理分析"},["/note/golang/concurrency/GMPModel","/note/golang/concurrency/GMPModel.md"]],["v-344dc579","/note/golang/go-gin-blog/01.1.html",{d:1639008e6,l:"2021年12月9日",c:["Frontend","vue"],g:["go-gin-blog"],e:`<p>本节将实现前端页面的如下功能：</p>
<ul>
<li>文章列表</li>
<li>文章添加, 修改和删除</li>
<li>文章内容展示</li>
</ul>
<h2> 1. 初始化</h2>
<h3> 1.1 采用模板</h3>
<p>以 <a href="https://github.com/PanJiaChen/vue-admin-template" target="_blank" rel="noopener noreferrer">vue-admin-template</a> 为模板创建仓库 <a href="https://github.com/dreamjz/gin-blog" target="_blank" rel="noopener noreferrer">gin-blog</a> ， clone 到本地</p>`,r:{minutes:4.3,words:1289},y:"a",t:"Gin blog I"},["/note/golang/go-gin-blog/01.1","/note/golang/go-gin-blog/01.1.md"]],["v-36029e18","/note/golang/go-gin-blog/01.2.html",{d:16390944e5,l:"2021年12月10日",c:["golang"],g:["gin","viper","gorm"],e:`<p>本节将完成 blog application 后端功能的实现：</p>
<ul>
<li>文章列表查询</li>
<li>文章的新增，修改和删除</li>
<li>用户名查询</li>
</ul>
<h2> 1. 初始化</h2>
<p>​	创建新的 github 仓库 <a href="https://github.com/dreamjz/gin-blog-server" target="_blank" rel="noopener noreferrer">gin-blog-server</a> ，clone 至本地</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gh repo clone dreamjz/gin-blog-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:15.28,words:4583},y:"a",t:"Gin blog II"},["/note/golang/go-gin-blog/01.2","/note/golang/go-gin-blog/01.2.md"]],["v-37b776b7","/note/golang/go-gin-blog/01.3.html",{d:16393536e5,l:"2021年12月13日",c:["golang","docker","mysql","nginx"],e:`<p>在之前的步骤中，我们完成了基本的文章增删改查功能，接下来就将其部署到 Docker 上</p>
<p>之前已经在 nginx 上部署了一个 vuepress 项目，这次就在另一个 nginx 上部署本项目</p>
<p>前端项目通过反向代理实现在同一域名下不同路径访问不同的应用：</p>
<ul>
<li><code>localhost/</code>:  为 vuepress blog</li>
<li><code>localhost/app/</code>: 为本应用</li>
</ul>
<p>后端项目通过创建一个负载均衡 nginx 来转发前端的请求</p>
<h2> 1. Fontend deploy</h2>`,r:{minutes:11.34,words:3402},y:"a",t:"Gin Blog III"},["/note/golang/go-gin-blog/01.3","/note/golang/go-gin-blog/01.3.md"]],["v-24dbb155","/note/golang/go-gin-blog/Preface.html",{d:16363296e5,l:"2021年11月8日",e:`<p>在学习了后端的 Gin 和 Gorm 和前端的 Vuex 和 Vue Router之后，是时候实践和巩固已学习的知识点了</p>
<p>接下来将创建一个简单的 blog application，将实现以下功能：</p>
<ul>
<li>登录验证</li>
<li>路由鉴权</li>
<li>文章的添加，删除，修改和查询</li>
<li>Markdown 格式文章的展示</li>
</ul>
<p>开发环境：</p>
<ul>
<li>OS: 5.10.79-1-MANJARO</li>
<li>Database: 10.6.5-MariaDB Arch Linux</li>
<li>Golang: 1.17</li>
<li>Node: 16.11.1</li>
</ul>`,r:{minutes:1.32,words:396},y:"a",t:"Preface"},["/note/golang/go-gin-blog/Preface","/note/golang/go-gin-blog/Preface.md"]],["v-3b58180c","/note/golang/golang-daily-lib/cast.html",{d:16352064e5,l:"2021年10月26日",c:["golang"],g:["golang daily lib"],e:`<h2> Introduction 简介</h2>
<p><a href="https://github.com/spf13/cast" target="_blank" rel="noopener noreferrer">cast</a>是一个小巧使用的类型转换库，用于将一个类型转换成另一个类型，最初是用在<a href="https://github.com/gohugoio/hugo" target="_blank" rel="noopener noreferrer">hugo</a>中的</p>
<h2> Quick start 快速开始</h2>
<p>在go module中导入：</p>`,r:{minutes:7.91,words:2374},y:"a",t:"cast"},["/note/golang/golang-daily-lib/cast","/note/golang/golang-daily-lib/cast.md"]],["v-f00eb258","/note/golang/golang-daily-lib/cobra.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p>cobra是一个命令行程序库，可以用来编写命令行程序。同时也提供了一个脚手架，用于生成基于cobra的应用程序框架。非常多知名的开源项目使用了cobra库构建命令行，如Kubernetes,hugo,etcd等。</p>
<p>关于作者<a href="http://github.com/spf13" target="_blank" rel="noopener noreferrer">spf13</a>，这里多说两句。spf13 开源不少项目，而且他的开源项目质量都比较高。 相信使用过 vim 的都知道<a href="https://github.com/spf13/spf13-vim" target="_blank" rel="noopener noreferrer">spf13-vim</a>，号称 vim 终极配置。 可以一键配置，对于我这样的懒人来说绝对是福音。他的<a href="https://github.com/spf13/viper" target="_blank" rel="noopener noreferrer">viper</a>是一个完整的配置解决方案。 完美支持 JSON/TOML/YAML/HCL/envfile/Java properties 配置文件等格式，还有一些比较实用的特性，如配置热更新、多查找目录、配置保存等。 还有非常火的静态网站生成器<a href="https://gohugo.io/" target="_blank" rel="noopener noreferrer">hugo</a>也是他的作品。</p>`,r:{minutes:8.2,words:2459},y:"a",t:"cobra"},["/note/golang/golang-daily-lib/cobra","/note/golang/golang-daily-lib/cobra.md"]],["v-16ceb7bd","/note/golang/golang-daily-lib/email.html",{d:16361568e5,l:"2021年11月6日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p>程序中经常需要发邮件，比如用户完成一笔交易之后会发送一封通知邮件给用户，用户可以将邮件作为交易的凭证，还有邮件用于通知性的业务，比如通知管理员系统异常等</p>
<p>Golang中可以通过开源库<code>email</code>来发送邮件，<code>email</code>是一个易用的，健壮的，灵活的Golang库，目标是提供更加人性化的email接口</p>
<p>注意：当前<code>email</code>库不支持<code>STARTTLS</code>认证的邮箱（2021/11/06）,如<code>outlook</code>，可能后续会增加此特性(作者已经表示准备Merge相关的PR)</p>`,r:{minutes:6.63,words:1988},y:"a",t:"email"},["/note/golang/golang-daily-lib/email","/note/golang/golang-daily-lib/email.md"]],["v-476f03ed","/note/golang/golang-daily-lib/flag.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p><code>flag</code>用于解析命令行选项。例如在Unix系统中<code>la -al</code>列出当前所有的文件与目录信息，其中的<code>-al</code>就是命令行选项。</p>
<p>命令行选项在实际开发中很常用，特别实在写工具的时候。</p>
<ul>
<li>指定配置文件的路径，如<code>redis-server ./redis.conf</code>以当前目录下的配置文件<code>redis.conf</code>启动Redis服务器</li>
<li>自定义某些参数，如<code>python -m SimpleHTTPServer 8080</code>启动一个HTTP服务器，监听8080端口。若不指定，则默认监听8000端口</li>
</ul>`,r:{minutes:8.09,words:2426},y:"a",t:"flag"},["/note/golang/golang-daily-lib/flag","/note/golang/golang-daily-lib/flag.md"]],["v-9371a17a","/note/golang/golang-daily-lib/fsnotify.html",{d:16352064e5,l:"2021年10月26日",c:["golang"],g:["golang daily lib"],e:`<h2> Introduction 简介</h2>
<p>在上一篇介绍<a href="/note/golang/golang-daily-lib/viper">viper</a>的文章中，viper内部使用了<code>fsnotify</code>库实现监听文件修改并自动重新加载</p>
<p><code>fsnotify</code>是一个基于Go的跨平台文件系统通知库（Cross-platform file system notifications for Go）</p>
<h2> Quick start 快速开始</h2>
<p>在go module中导入：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go get -u github.com/fsnotify/fsnotify latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:3.86,words:1159},y:"a",t:"fsnotify"},["/note/golang/golang-daily-lib/fsnotify","/note/golang/golang-daily-lib/fsnotify.md"]],["v-6ad98bb7","/note/golang/golang-daily-lib/go-flags.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p><code>flag</code>库是用于解析命令行选项的。但是<code>flag</code>库有几个缺点：</p>
<ul>
<li>不显式支持短选项</li>
<li>选项变量的定义比较繁琐，每个选项均需要调用对应的<code>Type</code>或<code>TypeVar</code>函数</li>
<li>默认只支持有限的数据类型，当前只有基本类型<code>bool/int/uint/string</code>和<code>time.Duration</code></li>
</ul>
<p>为了解决这些问题，出现了不少第三方解析命令行选项的库，今天的主角<code>go-flags</code>是其中一个。</p>`,r:{minutes:6.85,words:2054},y:"a",t:"go-flags"},["/note/golang/golang-daily-lib/go-flags","/note/golang/golang-daily-lib/go-flags.md"]],["v-5bb14210","/note/golang/golang-daily-lib/go-homedir.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p><code>go-homedir</code>顾名思义用来获取用户的主目录。实际上使用<code>os/user</code>也可以获取这个信息</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">"fmt"</span>
	<span class="token string">"log"</span>
	<span class="token string">"os/user"</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	u<span class="token punctuation">,</span> err <span class="token operator">:=</span> user<span class="token punctuation">.</span><span class="token function">Current</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%#v"</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3,words:901},y:"a",t:"go-homedir"},["/note/golang/golang-daily-lib/go-homedir","/note/golang/golang-daily-lib/go-homedir.md"]],["v-fa7c9c8c","/note/golang/golang-daily-lib/go-ini.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p>ini是windows上常用的配置文件格式。MySQL的Windows版本就是使用ini格式存储配置的。<code>go-ini</code>是Golang中用于操作ini文件的三方库</p>
<h3> ini文件简介</h3>
<p>.ini 文件是Initialization File的缩写，即初始化文件 ，是windows的系统配置文件所采用的存储格式</p>
<h4> 文件格式</h4>
<p>ini文件由节、键、值组成,注释使用<code>;</code></p>
<div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment">; commnet line</span>
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">section</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">key1</span><span class="token punctuation">=</span><span class="token value attr-value">value1</span>
<span class="token key attr-name">key2</span><span class="token punctuation">=</span><span class="token value attr-value">value2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.19,words:1558},y:"a",t:"go-ini"},["/note/golang/golang-daily-lib/go-ini","/note/golang/golang-daily-lib/go-ini.md"]],["v-90b97d26","/note/golang/golang-daily-lib/godotenv.html",{d:16357248e5,l:"2021年11月1日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p><a href="https://12factor.net/" target="_blank" rel="noopener noreferrer">twelve-factor</a>应用提倡将配置存储在环境变量中，任何从开发环境切换到生产环境时需要修改的东西从代码抽取到环境变量中。但是在实际开发中，如果同一台机器运行多个项目，环境变量容易冲突。<a href="https://github.com/joho/godotenv" target="_blank" rel="noopener noreferrer">godotenv</a>库从<code>.env</code>文件中读取配置，然后存储到程序的环境变量中，在代码中读取非常方便。<code>godotenv</code>源于Ruby开源项目<a href="https://github.com/bkeepers/dotenv" target="_blank" rel="noopener noreferrer">dotenv</a></p>`,r:{minutes:4.85,words:1455},y:"a",t:"godotenv"},["/note/golang/golang-daily-lib/godotenv","/note/golang/golang-daily-lib/godotenv.md"]],["v-28002915","/note/golang/golang-daily-lib/log.html",{d:16352928e5,l:"2021年10月27日",c:["golang"],g:["golang daily lib"],e:`<h2> Introduction 简介</h2>
<p>在日常开发中，日志功能是必不可少的，虽然可以使用<code>fmt</code>库输出一些信息，但灵活性不够；golang提供了标准库<code>log</code>，可以实现基本的日志功能</p>
<h2> Quick Start 快速开始</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	user <span class="token operator">:=</span> User<span class="token punctuation">{</span>
		ID<span class="token punctuation">:</span>       <span class="token number">1</span><span class="token punctuation">,</span>
		Username<span class="token punctuation">:</span> <span class="token string">"Kesa"</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"User: %s login,ID:%d"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span> user<span class="token punctuation">.</span>ID<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">"Warning hacker %s detected"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">)</span>

	<span class="token comment">// do not execute</span>
	log<span class="token punctuation">.</span><span class="token function">Panicf</span><span class="token punctuation">(</span><span class="token string">"User:%s[ID:%d] login failed"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>Username<span class="token punctuation">,</span> user<span class="token punctuation">.</span>ID<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.46,words:1637},y:"a",t:"log"},["/note/golang/golang-daily-lib/log","/note/golang/golang-daily-lib/log.md"]],["v-2d00fe8d","/note/golang/golang-daily-lib/logrus.html",{d:16353792e5,l:"2021年10月28日",c:["golang"],g:["golang daily lib"],e:`<h2> Introduction 简介</h2>
<p>golang标准库<code>log</code>仅提供了三组接口，功能过于简单。本次将介绍一个开源log库--<code>logrus</code>,<a href="https://github.com/sirupsen/logrus" target="_blank" rel="noopener noreferrer">logrus</a>完全兼容标准<code>log</code>库，支持文本，JSON两种日志输出格式。有很多知名的开源项目如docker就使用了此库</p>
<h2> Quick Start 快速开始</h2>
<p>在 go module 中导入：</p>`,r:{minutes:6.7,words:2009},y:"a",t:"logrus"},["/note/golang/golang-daily-lib/logrus","/note/golang/golang-daily-lib/logrus.md"]],["v-63741259","/note/golang/golang-daily-lib/preface.html",{d:16347744e5,l:"2021年10月21日",c:["golang"],g:["golang daily lib"],e:`<p>在浏览<a href="https://hellogithub.com/" target="_blank" rel="noopener noreferrer">HelloGithub</a>的时候发现了开源项目<a href="https://github.com/darjun/go-daily-lib" target="_blank" rel="noopener noreferrer">Go 每日一库</a>，决定将自己学习的过程记录下来，一来是让自己保持一个好的学习状态，同时也将自己的知识记录下来以方便日后复习。</p>
<p>本主题的文章将包含：</p>
<ul>
<li>学习<a href="https://github.com/darjun/go-daily-lib" target="_blank" rel="noopener noreferrer">Go 每日一库</a>的笔记</li>
</ul>`,r:{minutes:.37,words:112},y:"a",t:"Preface"},["/note/golang/golang-daily-lib/preface","/note/golang/golang-daily-lib/preface.md"]],["v-4a26dc54","/note/golang/golang-daily-lib/uniplace-carbon.html",{d:16361568e5,l:"2021年11月6日",c:["golang"],g:["golang daily lib"],e:`<h1> 简介</h1>
<p><a href="https://github.com/uniplaces" target="_blank" rel="noopener noreferrer">uniplaces</a>/<a href="https://github.com/uniplaces/carbon" target="_blank" rel="noopener noreferrer">carbon</a>是<a href="https://pkg.go.dev/time#Time" target="_blank" rel="noopener noreferrer">Time</a>的简单扩展，基于PHP的<a href="http://carbon.nesbot.com/" target="_blank" rel="noopener noreferrer">Carbon</a>库，特性：</p>`,r:{minutes:9.17,words:2751},y:"a",t:"uniplaces/carbon"},["/note/golang/golang-daily-lib/uniplace-carbon","/note/golang/golang-daily-lib/uniplace-carbon.md"]],["v-4b73468f","/note/golang/golang-daily-lib/viper.html",{d:163512e7,l:"2021年10月25日",c:["golang"],g:["golang daily lib"],e:`<h2> 简介</h2>
<p><code>viper</code>是一个配置解决方案，拥有丰富的特性：</p>
<ul>
<li>支持 JOSN/TOML/YAML/HCL/envfile/properties 等多种格式配置文件</li>
<li>可以设置监听配置文件的修改，修改时自动加载新配置</li>
<li>从环境变量、命令行选项和<code>io.Reader</code>中读取配置</li>
<li>从远程配置系统中读取和监听修改，如 etcd/Consul</li>
<li>代码逻辑中显示设置建值</li>
</ul>
<h2> 快速开始 Quick Start</h2>
<p>在 go module 中引入：</p>`,r:{minutes:7.53,words:2258},y:"a",t:"viper"},["/note/golang/golang-daily-lib/viper","/note/golang/golang-daily-lib/viper.md"]],["v-06fc599e","/note/golang/gorm/01.1.html",{d:16377984e5,l:"2021年11月25日",c:["golang"],g:["gorm"],e:`<p>学习 ORM 框架 <code>gorm</code> 的笔记, 基于<code>GORM v1.22.4</code></p>
<p>相关代码在我的仓库找到<a href="https://github.com/dreamjz/golang-notes/tree/main/gorm-note" target="_blank" rel="noopener noreferrer">gorm-note</a></p>
<h2> 1. Introduction</h2>
<p>The fantastic ORM library for Golang, aims to be develpoer friendly.</p>`,r:{minutes:10.33,words:3098},y:"a",t:"Gorm"},["/note/golang/gorm/01.1","/note/golang/gorm/01.1.md"]],["v-08b1323d","/note/golang/gorm/01.2.html",{d:16379712e5,l:"2021年11月27日",c:["golang"],g:["gorm"],e:`<h2> 5. CRUD</h2>
<h3> 5.1 Create</h3>
<h4> 5.1.1 创建记录</h4>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">"fmt"</span>
	<span class="token string">"log"</span>
	<span class="token string">"time"</span>

	<span class="token string">"gorm.io/gorm/logger"</span>

	<span class="token string">"gorm.io/driver/sqlite"</span>
	<span class="token string">"gorm.io/gorm"</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	gorm<span class="token punctuation">.</span>Model
	Name     <span class="token builtin">string</span>
	Age      <span class="token builtin">int</span>
	Birthday time<span class="token punctuation">.</span>Time
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">(</span>
	timeFormat <span class="token operator">=</span> <span class="token string">"2006-01-02 15:04:05.000"</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>u User<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"ID: %d, Name: %s, Age: %d, Birthday: %s\\nCreatedAy: %s, UpadtedAt: %s, DeletedAt: %s"</span><span class="token punctuation">,</span>
		u<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>Age<span class="token punctuation">,</span> u<span class="token punctuation">.</span>Birthday<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>timeFormat<span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>timeFormat<span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>UpdatedAt<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>timeFormat<span class="token punctuation">)</span><span class="token punctuation">,</span>
		u<span class="token punctuation">.</span>DeletedAt<span class="token punctuation">.</span>Time<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>timeFormat<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>sqlite<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"create.db"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span>
		Logger<span class="token punctuation">:</span> logger<span class="token punctuation">.</span>Default<span class="token punctuation">.</span><span class="token function">LogMode</span><span class="token punctuation">(</span>logger<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"failed to connect database"</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	sqlDB<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">DB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> sqlDB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>User<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

	user <span class="token operator">:=</span> User<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">"kesa"</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> Birthday<span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
	result <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>user<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"New record ID: %d"</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span>ID<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Error %v"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>Error<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Rows affected: %d"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>RowsAffected<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:28.48,words:8544},y:"a",t:"CRUD"},["/note/golang/gorm/01.2","/note/golang/gorm/01.2.md"]],["v-0a660adc","/note/golang/gorm/01.3.html",{d:1638144e6,l:"2021年11月29日",c:["golang"],g:["gorm"],e:`<h2> 7. Associations</h2>
<h3> 7.1 Belongs To</h3>
<p>A  <code>Belongs To</code> association sets up a one-to-one connection with another model, such that each instance of  the declaring model "belongs to" one instance of the other model</p>
<p>For example, if your application includes users and companies, and each user can be assigned to exactly one company, the following types represent that relationship. Notice here that, on the <code>User</code> object, there is both a <code>CompanyID</code> as well as a <code>Company</code>. By default, the <code>CompanyID</code>  is implicity usesd to create a foreign key relationship between the <code>User</code> and <code>Company</code> tables, and thus must be included in the <code>User</code> struct in order to fill the <code>Company</code> inner strcut</p>`,r:{minutes:14.09,words:4227},y:"a",t:"Associations"},["/note/golang/gorm/01.3","/note/golang/gorm/01.3.md"]],["v-0c1ae37b","/note/golang/gorm/01.4.html",{d:16383168e5,l:"2021年12月1日",c:["golang"],g:["gorm"],e:`<h2> 8. Tutorials</h2>
<h3> 8.1 Context</h3>
<p>GORM provides Context support, you can use it with method <code>WithContext</code></p>
<h4> 8.1.1 Single Session Mode</h4>
<p>Single session mode usually used when you want to perform a single operation</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>users<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:20.98,words:6294},y:"a",t:"Tutorials"},["/note/golang/gorm/01.4","/note/golang/gorm/01.4.md"]],["v-0dcfbc1a","/note/golang/gorm/01.5.html",{d:16384896e5,l:"2021年12月3日",c:["golang"],g:["gorm"],e:`<h2> 9. Advanced Topics</h2>
<h3> 9.1 DBResolver</h3>
<p>DBResolver adds muliple databases support to GORM, the following features are supported</p>
<ul>
<li>
<p>Multiple sources, replicas</p>
</li>
<li>
<p>Read/Write Splitting</p>
</li>
<li>
<p>Automatic connection switching based on the working table/struct</p>
</li>
<li>
<p>Manual connection switching</p>
</li>
<li>
<p>Sources/Replicas load balancing</p>
</li>
<li>
<p>Works for RAW SQL</p>
<p><a href="https://github.com/go-gorm/dbresolver" target="_blank" rel="noopener noreferrer">https://github.com/go-gorm/dbresolver</a></p>
</li>
</ul>`,r:{minutes:8.86,words:2659},y:"a",t:"Advanced Topics"},["/note/golang/gorm/01.5","/note/golang/gorm/01.5.md"]],["v-7dc3935f","/note/golang/gorm/gorm.html",{d:16377984e5,l:"2021年11月25日",c:["golang"],g:["gorm"],e:`<p>学习 ORM 框架 <code>gorm</code> 的笔记, 基于<code>GORM v1.22.4</code></p>
<p>相关代码在我的仓库找到<a href="https://github.com/dreamjz/golang-notes/tree/main/gorm-note" target="_blank" rel="noopener noreferrer">gorm-note</a></p>
<h2> 1. Introduction</h2>
<p>The fantastic ORM library for Golang, aims to be develpoer friendly.</p>`,r:{minutes:81.75,words:24525},y:"a",t:"Total"},["/note/golang/gorm/gorm","/note/golang/gorm/gorm.md"]],["v-7d56e130","/note/golang/uber-go-zap/01.1.html",{d:16399584e5,l:"2021年12月20日",c:["golang"],g:["zap"],e:`<p>Blazing fast, structured, leveled logging in Go.</p>
<p>示例代码参见<a href="">zap</a></p>
<h2> 1. Quick Start</h2>
<h3> 1.1 Installation</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-u</span> go.uber.org/zap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:5.43,words:1628},y:"a",t:"Zap"},["/note/golang/uber-go-zap/01.1","/note/golang/uber-go-zap/01.1.md"]],["v-63a80d45","/note/javascript/tutorial/00_preface.html",{d:16841088e5,l:"2023年5月15日",c:["Note","Frontend","JavaScript"],g:["Tutorial"],e:`<p>TODO: // notes from <a href="https://www.typescripttutorial.net/" target="_blank" rel="noopener noreferrer">https://www.typescripttutorial.net/</a></p>
`,r:{minutes:.07,words:21},y:"a",t:"JavaScript Tutorial",O:1},["/note/javascript/tutorial/00_preface","/note/javascript/tutorial/00_preface.md"]],["v-8a2d5246","/note/linux/vim/spf13-vim-plugin.html",{d:16350336e5,l:"2021年10月24日",c:["linux"],g:["vim"],e:`<p>spf13-vim及插件安装记录，后续遇到好用的插件也会记录在此</p>
<p>本文安装环境：</p>
<ul>
<li>Manjaro</li>
<li>Linux 5.10</li>
</ul>
<h2> 安装 Installation</h2>
<p>安装需要 <em>Git 1.7+, Vim 1.3+</em>,复制以下命令以安装:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://j.mp/spf13-vim3 <span class="token parameter variable">-L</span> <span class="token operator">&gt;</span> spf13-vim.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> spf13-vim.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:2.04,words:613},y:"a",t:"spf13-vim 安装及配置"},["/note/linux/vim/spf13-vim-plugin","/note/linux/vim/spf13-vim-plugin.md"]],["v-ba0a5a48","/note/rpc/gRPC/atls.html",{d:16413408e5,l:"2022年1月5日",c:["golang","rpc"],g:["grpc"],e:`<p>// TODO: 2022-01-05</p>
`,r:{minutes:.06,words:18},y:"a",t:"ATLS"},["/note/rpc/gRPC/atls","/note/rpc/gRPC/atls.md"]],["v-809ed732","/note/rpc/gRPC/basic_tutorial.html",{d:16408224e5,l:"2021年12月30日",c:["golang","rpc"],g:["grpc"],e:`<h2> 1. Why use gRPC</h2>
<p>The example is a simple route mapping application that lets clients get information about features on their route, create a summary of their route, and exchange route information such as traffic updates with the server and other clients.</p>
<p>With gRPC we can define our service onec in a <code>.proto</code> file and generate clients and servers in any of gRPC’s supported languages, which in turn can be run in environments ranging from servers inside a large data center to your own tablet -- all the complexity of communication between different languages and environments is handled for you by gRPC. We also get all the advantages of working with protocol buffers, including efficient serialization, a simple IDL, and easy interface upadting.</p>`,r:{minutes:9.33,words:2800},y:"a",t:"Basics tutorial"},["/note/rpc/gRPC/basic_tutorial","/note/rpc/gRPC/basic_tutorial.md"]],["v-0852c2d9","/note/rpc/gRPC/generated_code.html",{d:16413408e5,l:"2022年1月5日",c:["golang","rpc"],g:["grpc"],e:"<p><strong>Thread-safety</strong>: note that client-side RPC invocations and server-side RPC handlers are <em>thread-safe</em> and are meant to be run on concurrent goroutines. But also note that for individual streams, incoming and outgoing data is bi-directional but serial; so e.g. <em>inidividual</em> streams do not support concurrent reads or concurrent writes (but reads are safely concurrent with writes).</p>",r:{minutes:3.52,words:1056},y:"a",t:"Generated code"},["/note/rpc/gRPC/generated_code","/note/rpc/gRPC/generated_code.md"]],["v-25febabc","/note/rpc/gRPC/introduction.html",{d:1640736e6,l:"2021年12月29日",c:["golang","rpc"],g:["grpc"],e:`<p>gRPC can use protocol buffers as both its <em>Interface Definition Language</em> (<strong>IDL</strong>) and as its underlying message interchange format.</p>
<h2> 1. Overview</h2>
<p>In gRPC, a client application can directly call a method on a server application on a different machine as if it were a local object, making it easier for you to create distributed applications and services. As in many RPC systems, gRPC is based around the idea of defining a service, specifying the methods that can be called remotely with their parameters and return types. On the server side, the server implements this interface and runs a gRPC server to handle client calls. On the client side, the client has a stub (referred to as just a client in some languages) that provides the same methods as the server.</p>`,r:{minutes:5.85,words:1754},y:"a",t:"Introduction to gRPC"},["/note/rpc/gRPC/introduction","/note/rpc/gRPC/introduction.md"]],["v-79e08508","/note/rpc/gRPC/preface.html",{d:16406496e5,l:"2021年12月28日",e:`<h1> Preface</h1>
<p>学习 gRPC 笔记，示例代码参见 []</p>
`,r:{minutes:.07,words:20},y:"a",t:"Preface"},["/note/rpc/gRPC/preface","/note/rpc/gRPC/preface.md"]],["v-64ab95ec","/note/rpc/gRPC/quick_start.html",{d:16406496e5,l:"2021年12月28日",c:["golang","rpc"],g:["grpc"],e:`<p>This guide gets you started with gRPC in Go with a simple working example.</p>
<h2> 1. Prerequisites</h2>
<ul>
<li>
<p>Go</p>
</li>
<li>
<p>Protocol buffer compiler</p>
</li>
<li>
<p>Go plugins for the protocol compiler:</p>
<ol>
<li>
<p>Install the protocol compiler plugins for Go using the following commands:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ go <span class="token function">install</span> google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
$ go <span class="token function">install</span> google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Update your <code>PATH</code> so that the <code>protoc</code> compiler can find the plugins:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"PATH:<span class="token variable"><span class="token variable">$(</span>go <span class="token function">env</span> GOPATH<span class="token variable">)</span></span>/bin"</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ol>
</li>
</ul>`,r:{minutes:1.92,words:575},y:"a",t:"Quick Start"},["/note/rpc/gRPC/quick_start","/note/rpc/gRPC/quick_start.md"]],["v-34935b8c","/note/rpc/protocol-buffers/basics-go.html",{d:16401312e5,l:"2021年12月22日",c:["golang","protocol buffers"],e:`<h1> Protocol Buffer Basics: Go</h1>
<p>This tutorial provides a basic Go programmer’s introduction to working with protocol buffers, using the <code>proto3</code> version of the protocol buffers language. By walking through creating a simple example application, it shows you how to</p>
<ul>
<li>Define message formats in a <code>.proto</code> file</li>
<li>Use the protocol buffer compiler</li>
<li>Use the Go protocol buffer API to write and read message</li>
</ul>`,r:{minutes:5.83,words:1748},y:"a",t:"Protocol Buffer Basics: Go"},["/note/rpc/protocol-buffers/basics-go","/note/rpc/protocol-buffers/basics-go.md"]],["v-4d2d1dcb","/note/rpc/protocol-buffers/language-guide-proto3.html",{d:16401312e5,l:"2021年12月22日",c:["golang","protocol buffers"],r:{minutes:.05,words:14},y:"a",t:"Language Guide proto3"},["/note/rpc/protocol-buffers/language-guide-proto3","/note/rpc/protocol-buffers/language-guide-proto3.md"]],["v-f15d7708","/note/rpc/protocol-buffers/preface.html",{d:16401312e5,l:"2021年12月22日",e:`<h1> Preface</h1>
<p>学习 Protocol Buffers 笔记</p>
`,r:{minutes:.05,words:15},y:"a",t:"Preface"},["/note/rpc/protocol-buffers/preface","/note/rpc/protocol-buffers/preface.md"]],["v-50cc852d","/note/typescript/tutorial/00_preface.html",{d:16841088e5,l:"2023年5月15日",c:["Note","Frontend","TypeScript"],g:["Tutorial"],e:`<p>TODO: // notes from <a href="https://www.javascripttutorial.net/" target="_blank" rel="noopener noreferrer">https://www.javascripttutorial.net/</a></p>
`,r:{minutes:.07,words:21},y:"a",t:"TypeScript Tutorial",O:1},["/note/typescript/tutorial/00_preface","/note/typescript/tutorial/00_preface.md"]],["v-601a5951","/note/vue/vue-2/vue-cli.html",{d:16387488e5,l:"2021年12月6日",c:["Frontend","vue"],g:["vue-cli"],e:`<h2> 1. 简介</h2>
<p>Vue CLI 是一个基于 Vue.js 进行快速开发的完整系统，提供：</p>
<ul>
<li>
<p>通过 <code>@vue/cli</code> 实现的交互式的项目脚手架。</p>
</li>
<li>
<p>通过 <code>@vue/cli</code> + <code>@vue/cli-service-global</code> 实现的零配置原型开发。</p>
</li>
<li>
<p>一个运行时依赖 (<code>@vue/cli-service</code>)，该依赖：</p>
<ul>
<li>可升级；</li>
<li>基于 webpack 构建，并带有合理的默认配置；</li>
<li>可以通过项目内的配置文件进行配置；</li>
<li>可以通过插件进行扩展。</li>
</ul>
</li>
<li>
<p>一个丰富的官方插件集合，集成了前端生态中最好的工具。</p>
</li>
<li>
<p>一套完全图形化的创建和管理 Vue.js 项目的用户界面</p>
</li>
</ul>`,r:{minutes:45.62,words:13685},y:"a",t:"Vue-cli"},["/note/vue/vue-2/vue-cli","/note/vue/vue-2/vue-cli.md"]],["v-34943ad0","/note/vue/vue-2/vue-router.html",{d:16388352e5,l:"2021年12月7日",c:["Frontend","vue"],g:["vue router"],e:`<h2> 1. 安装</h2>
<h3> 1.1 直接下载 / CDN</h3>
<p><a href="https://unpkg.com/vue-router/dist/vue-router.js" target="_blank" rel="noopener noreferrer">https://unpkg.com/vue-router/dist/vue-router.js(opens new window)</a></p>
<p><a href="https://unpkg.com/" target="_blank" rel="noopener noreferrer">Unpkg.com (opens new window)</a>提供了基于 NPM 的 CDN 链接。上面的链接会一直指向在 NPM 发布的最新版本。你也可以像 <code>https://unpkg.com/vue-router@2.0.0/dist/vue-router.js</code> 这样指定 版本号 或者 Tag。</p>`,r:{minutes:28.29,words:8486},y:"a",t:"Vue Router"},["/note/vue/vue-2/vue-router","/note/vue/vue-2/vue-router.md"]],["v-33bd0e54","/note/vue/vue-2/vuex.html",{d:16389216e5,l:"2021年12月8日",c:["Frontend","vue"],g:["vuex"],e:`<h2> 1. 介绍</h2>
<p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 <a href="https://github.com/vuejs/vue-devtools" target="_blank" rel="noopener noreferrer">devtools extension (opens new window)</a>，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能</p>`,r:{minutes:30.66,words:9198},y:"a",t:"Vuex"},["/note/vue/vue-2/vuex","/note/vue/vue-2/vuex.md"]],["v-4242d329","/reading/golang/concurrency-in-go/01.overview.html",{d:16957728e5,l:"2023年9月27日",c:["golang"],e:`<h2> 1.1 竞争</h2>
<p>当两个或多个操作必须按正确的顺序执行，而程序未保证这个顺序，将会发生<strong>竞争</strong>。</p>
<p>例如：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">competition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> data <span class="token builtin">int</span>
	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		data<span class="token operator">++</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"the value is %v.\\n"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.37,words:1310},y:"a",t:"1. 并发概述"},["/reading/golang/concurrency-in-go/01.overview","/reading/golang/concurrency-in-go/01.overview.md"]],["v-8b53256e","/reading/golang/concurrency-in-go/03.sync.html",{d:16957728e5,l:"2023年9月27日",c:["golang"],e:`<h2> 3.1 WaitGroup</h2>
<p><code>WaitGroup</code>可以视作并发安全的计数器：</p>
<ul>
<li><code>Add()</code>：添加计数次数</li>
<li><code>Done()</code>：计数器减一</li>
<li><code>Wait()</code>：阻塞直到计数器归零</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">wg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	hello <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">,</span> id <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">defer</span> wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Hello from %d\\n"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	numGreeters <span class="token operator">:=</span> <span class="token number">5</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>numGreeters<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numGreeters<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">go</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.59,words:1977},y:"a",t:"3. sync"},["/reading/golang/concurrency-in-go/03.sync","/reading/golang/concurrency-in-go/03.sync.md"]],["v-0bddc6dd","/reading/golang/concurrency-in-go/04.pattern.html",{d:16958592e5,l:"2023年9月28日",c:["golang"],e:`<h2> 4.1 for-select</h2>
<p><code>for-select</code>模式常见的有两种：</p>
<ol>
<li>向channel中发送迭代变量</li>
<li>循环等待停止</li>
</ol>
<h3> 向channel中发送迭代变量</h3>
<p>将迭代的内容持续的发送到通道中。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>strs <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> str <span class="token operator">:=</span> <span class="token keyword">range</span> strs <span class="token punctuation">{</span>
    <span class="token keyword">select</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token operator">&lt;-</span>done<span class="token punctuation">:</span>
        <span class="token keyword">return</span> 
    <span class="token keyword">case</span> ch <span class="token operator">&lt;-</span> str<span class="token punctuation">:</span>
    	<span class="token comment">// ...    </span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:14.9,words:4469},y:"a",t:"4. 并发模式"},["/reading/golang/concurrency-in-go/04.pattern","/reading/golang/concurrency-in-go/04.pattern.md"]],["v-d2b5c958","/reading/golang/concurrency-in-go/05.massive_concurrency.html",{d:16959456e5,l:"2023年9月29日",c:["golang"],e:`<h2> 5.1 异常传递</h2>
<p>出现异常通常表示系统进入了一个无法满足用户操作的状态，此时系统需要传达几个关键的信息：</p>
<ol>
<li><strong>发生了什么</strong>
包含对异常的描述；例如：磁盘已满，连接重置等</li>
<li><strong>发生在什么时间，什么位置</strong>
异常发生的完整<strong>调用栈</strong>信息以及异常<strong>发生的时间</strong></li>
<li><strong>对用户友好的信息</strong>
对发送给用户的信息进行自定义</li>
<li><strong>告诉用户如何获取更多信息</strong>
在发给用户的信息中应告知详细的异常信息在哪里可以获取</li>
</ol>`,r:{minutes:15.03,words:4508},y:"a",t:"5. 大规模并发"},["/reading/golang/concurrency-in-go/05.massive_concurrency","/reading/golang/concurrency-in-go/05.massive_concurrency.md"]],["v-3b40d3e9","/reading/nosql/The_Design_and_Implementation_of_Redis/01.1.html",{d:16465248e5,l:"2022年3月6日",c:["Redis"],g:["SDS"],e:`<p>Redis 中使用 SDS (Simple Dynamic String, 简单动态字符串) 作为 Redis 的默认字符串表示。</p>
<p>Redis 中 ，C 字符串只会作为 字符串字面量 (string literal) 用在无须对字符串进行修改的地方，如打印日志。</p>
<p>而 SDS 将会用作：</p>
<ul>
<li>字符串值</li>
<li>缓冲区 (buffer):
<ul>
<li>AOF 缓冲区</li>
<li>客户端状态中的输入缓冲区</li>
</ul>
</li>
</ul>
<h2> 1.1 SDS 的定义</h2>
<p>每个 <a href="https://github.com/redis/redis/blob/3.0-alpha0/src/sds.h" target="_blank" rel="noopener noreferrer">sds.h/sdshdr</a> 结构表示一个 SDS 值：</p>`,r:{minutes:7.07,words:2121},y:"a",t:"简单动态字符串"},["/reading/nosql/The_Design_and_Implementation_of_Redis/01.1","/reading/nosql/The_Design_and_Implementation_of_Redis/01.1.md"]],["v-3cf5ac88","/reading/nosql/The_Design_and_Implementation_of_Redis/01.2.html",{d:16465248e5,l:"2022年3月6日",c:["Redis"],g:["Linked List"],e:`<p>链表提供了高效的节点重排能力，顺序性的节点访问方式以及可以通过增删节点来灵活调整链表的长度。</p>
<p>当一个列表键包含了数量较多或元素都是长度较长的字符串时，Redis 会使用链表作为其底层实现。</p>
<p>除了列表键之外，发布与订阅、慢查询、监视器等功能也用到了链表，Redis 服务器本身还使用链表来保存多个客户端的状态信息，以及使用链表来构建客户端输出缓冲区 (output buffer)。</p>
<h2> 2.1 链表和链表节点的实现</h2>
<p>每个链表节点使用一个 <a href="https://github.com/redis/redis/blob/d96f47cf06b1cc24b82109e0e87ac5428517525a/src/adlist.h" target="_blank" rel="noopener noreferrer">adlist.h/listNode</a> 结构表示：</p>`,r:{minutes:2.5,words:751},y:"a",t:"链表"},["/reading/nosql/The_Design_and_Implementation_of_Redis/01.2","/reading/nosql/The_Design_and_Implementation_of_Redis/01.2.md"]],["v-3eaa8527","/reading/nosql/The_Design_and_Implementation_of_Redis/01.3.html",{d:16465248e5,l:"2022年3月6日",c:["Redis"],g:["dict"],r:{minutes:.04,words:13},y:"a",t:"字典"},["/reading/nosql/The_Design_and_Implementation_of_Redis/01.3","/reading/nosql/The_Design_and_Implementation_of_Redis/01.3.md"]],["v-dee84ee8","/reading/nosql/The_Design_and_Implementation_of_Redis/01.html",{d:16465248e5,l:"2022年3月6日",c:["Redis"],e:`<ul>
<li><a href="/reading/nosql/The_Design_and_Implementation_of_Redis/01.1.html" target="blank">简单动态字符串</a></li>
<li>链表</li>
<li>字典</li>
<li>跳跃表</li>
<li>整数集合</li>
<li>压缩列表</li>
<li>对象</li>
</ul>
`,r:{minutes:.14,words:41},y:"a",t:"数据结构与对象"},["/reading/nosql/The_Design_and_Implementation_of_Redis/01","/reading/nosql/The_Design_and_Implementation_of_Redis/01.md"]],["v-5c650e76","/reading/nosql/The_Design_and_Implementation_of_Redis/preface.html",{d:16465248e5,l:"2022年3月6日",e:`<p>阅读 <a href="https://book.douban.com/subject/25900156/" target="_blank" rel="noopener noreferrer">Redis设计与实现</a> 的读书笔记</p>
`,r:{minutes:.08,words:23},y:"a",t:"Preface"},["/reading/nosql/The_Design_and_Implementation_of_Redis/preface","/reading/nosql/The_Design_and_Implementation_of_Redis/preface.md"]],["v-0f79baa2","/note/golang/github-repos/7days-golang/gee-web.html",{d:16488576e5,l:"2022年4月2日",c:["golang"],e:`<h2> 1. Day0 - 设计框架</h2>
<p>Golang 中标准库 <code>net/http</code> 提供了基础的 Web 功能，即监听端口，映射静态路由，解析静态路由和 HTTP 报文。但是一些 Web 开发中的简单需求并不支持，需要手工实现：</p>
<ul>
<li>动态路由：例如<code>hello/:name</code>，<code>hello/*</code>这类的规则。</li>
<li>鉴权：没有分组/统一鉴权的能力，需要在每个路由映射的handler中实现。</li>
<li>模板：没有统一简化的HTML机制。</li>
<li>…</li>
</ul>`,r:{minutes:22.14,words:6643},y:"a",t:"Gee Web"},["/note/golang/github-repos/7days-golang/gee-web","/note/golang/github-repos/7days-golang/gee-web.md"]],["v-d4eae3a0","/note/golang/github-repos/7days-golang/preface.html",{d:16488576e5,l:"2022年4月2日",e:`<ul>
<li>
<p>学习 <a href="https://github.com/geektutu/7days-golang" target="_blank" rel="noopener noreferrer">geektutu/7days-golang</a> 笔记</p>
</li>
<li>
<p>笔记代码参见 <a href="https://github.com/dreamjz/golang-notes/tree/main/7days-golang" target="_blank" rel="noopener noreferrer">7day-golang-note</a></p>
</li>
</ul>`,r:{minutes:.1,words:30},y:"a",t:"Preface"},["/note/golang/github-repos/7days-golang/preface","/note/golang/github-repos/7days-golang/preface.md"]],["v-57168dca","/note/golang/github-repos/7days-golang/summary.html",{d:16496352e5,l:"2022年4月11日",c:["golang"],e:`<p>学习 <a href="https://github.com/geektutu/7days-golang" target="_blank" rel="noopener noreferrer">geektutu/7days-golang</a> 笔记的总结</p>
<h2> 1. Gee-Web</h2>
`,r:{minutes:.09,words:27},y:"a",t:"7Days Golang Summary"},["/note/golang/github-repos/7days-golang/summary","/note/golang/github-repos/7days-golang/summary.md"]],["v-b018f792","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/01.1.html",{d:16399584e5,l:"2021年12月20日",c:["golang"],e:`<h1> 预备知识</h1>
<h2> 1. 调试源代码</h2>
<p>Golang 有着复杂的项目结构和庞大的代码库， 使用 <code>cloc</code> (<a href="https://github.com/AlDanial/cloc" target="_blank" rel="noopener noreferrer">cloc</a> perl 编写的用于统计代码的工具) 查看项目中代码的行数</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ cloc src
	<span class="token number">6304</span> text files.
    <span class="token number">5006</span> unique files.                                          
    <span class="token number">1599</span> files ignored.
    github.com/AlDanial/cloc <span class="token function">v</span> <span class="token number">1.92</span>  <span class="token assign-left variable">T</span><span class="token operator">=</span><span class="token number">32.47</span> s <span class="token punctuation">(</span><span class="token number">154.2</span> files/s, <span class="token number">60680.2</span> lines/s<span class="token punctuation">)</span>
-----------------------------------------------------------------------------------
Language                         files          blank        comment           code
-----------------------------------------------------------------------------------
Go                                <span class="token number">4357</span>         <span class="token number">144152</span>         <span class="token number">252592</span>        <span class="token number">1416081</span>
Assembly                           <span class="token number">501</span>          <span class="token number">12956</span>          <span class="token number">18855</span>         <span class="token number">108986</span>
C                                   <span class="token number">68</span>            <span class="token number">763</span>            <span class="token number">599</span>           <span class="token number">4745</span>
CSV                                  <span class="token number">1</span>              <span class="token number">0</span>              <span class="token number">0</span>           <span class="token number">2119</span>
JSON                                <span class="token number">12</span>              <span class="token number">0</span>              <span class="token number">0</span>           <span class="token number">1712</span>
Perl                                <span class="token number">10</span>            <span class="token number">170</span>            <span class="token number">170</span>           <span class="token number">1098</span>
Bourne Shell                         <span class="token number">7</span>            <span class="token number">132</span>            <span class="token number">646</span>           <span class="token number">1064</span>
Markdown                             <span class="token number">6</span>            <span class="token number">230</span>              <span class="token number">0</span>            <span class="token number">715</span>
Bourne Again Shell                  <span class="token number">12</span>            <span class="token number">101</span>            <span class="token number">215</span>            <span class="token number">460</span>
Python                               <span class="token number">1</span>            <span class="token number">132</span>            <span class="token number">104</span>            <span class="token number">370</span>
DOS Batch                            <span class="token number">5</span>             <span class="token number">57</span>             <span class="token number">74</span>            <span class="token number">185</span>
C/C++ Header                        <span class="token number">10</span>             <span class="token number">57</span>            <span class="token number">168</span>            <span class="token number">148</span>
Windows Resource File                <span class="token number">4</span>             <span class="token number">23</span>              <span class="token number">0</span>            <span class="token number">139</span>
Logos                                <span class="token number">2</span>             <span class="token number">16</span>              <span class="token number">0</span>            <span class="token number">102</span>
C++                                  <span class="token number">1</span>              <span class="token number">8</span>              <span class="token number">9</span>             <span class="token number">17</span>
Objective-C                          <span class="token number">1</span>              <span class="token number">2</span>              <span class="token number">3</span>             <span class="token number">11</span>
<span class="token function">awk</span>                                  <span class="token number">1</span>              <span class="token number">1</span>              <span class="token number">6</span>              <span class="token number">7</span>
<span class="token function">make</span>                                 <span class="token number">4</span>              <span class="token number">3</span>              <span class="token number">7</span>              <span class="token number">7</span>
MATLAB                               <span class="token number">1</span>              <span class="token number">1</span>              <span class="token number">0</span>              <span class="token number">4</span>
CSS                                  <span class="token number">1</span>              <span class="token number">0</span>              <span class="token number">0</span>              <span class="token number">1</span>
HTML                                 <span class="token number">1</span>              <span class="token number">0</span>              <span class="token number">0</span>              <span class="token number">1</span>
-----------------------------------------------------------------------------------
SUM:                              <span class="token number">5006</span>         <span class="token number">158804</span>         <span class="token number">273448</span>        <span class="token number">1537972</span>
-----------------------------------------------------------------------------------
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.26,words:377},y:"a",t:"预备知识"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/01.1","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/01.1.md"]],["v-77b5ddf5","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.1.html",{d:164808e7,l:"2022年3月24日",c:["golang"],g:["array"],e:`<h2> 3.1.1 概述</h2>
<p>数组是由相同类型元素的集合组成的数据结构，计算机会为数组分配一块连续的内存来保存其中的元素，我们可以利用数组中的元素的索引快速访问特定元素，常见的数组多为一维线性数组，而多维数组在数值和图形计算领域有比较常见的应用。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/2019-02-20-3D-array.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:9.61,words:2882},y:"a",t:"3.1 Golang 数组实现原理"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.1","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.1.md"]],["v-796ab694","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.2.html",{d:16481664e5,l:"2022年3月25日",c:["golang"],g:["slice"],e:`<p>相较于数组，Go 语言中更常用的数据结构是切片，即动态数组，其长度并不固定，可以向切片中追加元素，它会在容量不足时自动扩容。</p>
<p>切片的声明和数组类似，因为切片的长度是动态的，所以声明时只需指定切片中元素类型：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.79,words:3838},y:"a",t:"3.2 Golang 切片实现原理"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.2","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.2.md"]],["v-7b1f8f33","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.3.html",{d:1648512e6,l:"2022年3月29日",c:["golang"],g:["slice"],e:`<h2> 3.3.1 设计原理</h2>
<p>哈希表是计算机科学中的最重要数据结构之一，不仅因其 <em>O(1)</em> 的读写性能优秀，还因为它提供了键值之间的映射。</p>
<p>要想实现一个性能优异的哈希表，需要注意两个关键点 -- <strong>哈希函数</strong>和<strong>哈希冲突</strong>的解决方法。</p>
<h3> 哈希函数</h3>
<p>实现哈希表的关键点在于哈希函数的选择，哈希函数的选择在很大程度上能够决定哈希表的读写性能。在理想的情况下哈希函数能够将不同键映射到不容的索引上，这要求哈希函数的<strong>输出范围大于输入范围</strong>，但是由于键的数量远远大于映射的范围，所以在实际使用中，理想的效果是无法实现的。</p>`,r:{minutes:20.15,words:6044},y:"a",t:"3.3 Golang 哈希表实现原理"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.3","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.3.md"]],["v-7cd467d2","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.4.html",{d:16487712e5,l:"2022年4月1日",c:["golang"],g:["string"],r:{minutes:.07,words:21},y:"a",t:"3.4 Golang 字符串的实现原理"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.4","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.4.md"]],["v-20003db7","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/preface.html",{d:16714944e5,l:"2022年12月20日",e:`<h1> Preface</h1>
<p>学习开源书籍 <a href="https://draveness.me/golang" target="_blank" rel="noopener noreferrer">Go 语言设计与实现</a> 的笔记</p>
<p>练习代码参见 <a href="">draveness-golang-note</a></p>
`,r:{minutes:.12,words:37},y:"a",t:"Preface"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/preface","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/preface.md"]],["v-3ce7855e","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/summary.html",{d:16484256e5,l:"2022年3月28日",c:["golang"],e:`<h2> 3.1 数组实现原理</h2>
<p><strong>数组</strong> 是 Go 语言基本数据类型之一，通常用<strong>元素类型</strong>和<strong>最大能存储的元素个数</strong>来描述。</p>
<h3> 初始化</h3>
<p>数组由两种初始化方式：</p>
<ol>
<li><strong>显式指定数组大小</strong>：<code>arr := [3]int{1, 2, 3}</code></li>
<li>使用 <strong><code>[...]T</code></strong> 在编译期推导数组大小：<code>arr := [...]int{1, 2, 3}</code>；此种方式将在编译器被转换成第一种形式；</li>
</ol>`,r:{minutes:5.9,words:1769},y:"a",t:"总结"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/summary","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/summary.md"]],["v-320e8b4e","/note/golang/open-source-books/advanced-go-programming/04.1.html",{d:16399584e5,l:"2021年12月20日",c:["golang","rpc"],e:`<h2> 4.1 RPC</h2>
<p>RPC( Remote Procedure Call ) 远程过程调用，是分布式系统中不同节点之间流行的通信方式。在互联时代 RPC 和 IPC (Inter-process communication, 进程间通讯) 成为了不可或缺的基础构件。</p>
<h3> 4.1.1 Hello World</h3>
<p>创建 <code>server</code> ：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> HelloService <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>h <span class="token operator">*</span>HelloService<span class="token punctuation">)</span> <span class="token function">Hello</span><span class="token punctuation">(</span>request <span class="token builtin">string</span><span class="token punctuation">,</span> reply <span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	<span class="token operator">*</span>reply <span class="token operator">=</span> <span class="token string">"hello "</span> <span class="token operator">+</span> request
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rpc<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token function">new</span><span class="token punctuation">(</span>HelloService<span class="token punctuation">)</span><span class="token punctuation">)</span>

	listener<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span><span class="token string">"tcp"</span><span class="token punctuation">,</span> <span class="token string">":9090"</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">"listen tcp error: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> listener<span class="token punctuation">.</span><span class="token function">Accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">"accept error: %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	rpc<span class="token punctuation">.</span><span class="token function">ServeConn</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.77,words:1732},y:"a",t:"04.1 RPC"},["/note/golang/open-source-books/advanced-go-programming/04.1","/note/golang/open-source-books/advanced-go-programming/04.1.md"]],["v-2ea4da10","/note/golang/open-source-books/advanced-go-programming/04.2.html",{d:16401312e5,l:"2021年12月22日",c:["golang","rpc"],e:`<h2> 4.2 Protobuf</h2>
<p>Protobuf ( Protocol Buffer ) 是 Google 开发的数据描述语言，可以作为跨语言的 RPC</p>
<p>序列化数据格式。</p>
<h3> 4.2.1 Protobuf 入门</h3>
<p>下面将 Protobuf 和 RPC 结合在一起使用，通过 Protobuf 确保 RPC 的接口安全和规范。</p>
<p>首先创建 <code>hello.proto</code> ，其中包装了 HelloService 服务中用到的字符串类型</p>
<div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">"proto3"</span><span class="token punctuation">;</span>

<span class="token keyword">package</span> main<span class="token punctuation">;</span>

<span class="token keyword">option</span> go_pacakge <span class="token operator">=</span> <span class="token string">"../protobuffers"</span><span class="token punctuation">;</span> <span class="token comment">// 需要指定 go package </span>

<span class="token keyword">message</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
	<span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.48,words:745},y:"a",t:"04.2 Protobuf"},["/note/golang/open-source-books/advanced-go-programming/04.2","/note/golang/open-source-books/advanced-go-programming/04.2.md"]],["v-2b3b28d2","/note/golang/open-source-books/advanced-go-programming/04.3.html",{d:1640304e6,l:"2021年12月24日",c:["golang","rpc"],e:`<h2> 4.3  玩转 RPC</h2>
<p>不同的场景中 RPC 有着不同的需求， 因此开源社区中诞生了各种 RPC 框架，本节将介绍 Go 内置的 RPC 框架在一些特殊场景的用法。</p>
<h3> 4.3.1 客户端 RPC 实现原理</h3>
<p>Go 语言的 RPC 库最简单的使用方式是通过 <code>Client.Call</code> 方法进行同步阻塞调用，方法实现如下：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// Call invokes the named function, waits for it to complete, and returns its error status.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>client <span class="token operator">*</span>Client<span class="token punctuation">)</span> <span class="token function">Call</span><span class="token punctuation">(</span>serviceMethod <span class="token builtin">string</span><span class="token punctuation">,</span> args <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> reply <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	call <span class="token operator">:=</span> <span class="token operator">&lt;-</span>client<span class="token punctuation">.</span><span class="token function">Go</span><span class="token punctuation">(</span>serviceMethod<span class="token punctuation">,</span> args<span class="token punctuation">,</span> reply<span class="token punctuation">,</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token operator">*</span>Call<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Done
	<span class="token keyword">return</span> call<span class="token punctuation">.</span>Error
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.19,words:1858},y:"a",t:"04.3 玩转 RPC"},["/note/golang/open-source-books/advanced-go-programming/04.3","/note/golang/open-source-books/advanced-go-programming/04.3.md"]],["v-27d17794","/note/golang/open-source-books/advanced-go-programming/04.4.html",{d:16406496e5,l:"2021年12月28日",c:["golang","rpc"],g:["grpc"],e:`<h2> 4.4 gRPC 入门</h2>
<p>gRPC 是 Google 基于 protocol buffers 开发的跨语言的开源 RPC 框架，基于 HTTP/2 协议设计，可以在一个 HTTP/2 链接上提供多个服务。</p>
<h3> 4.4.1  gRPC 技术栈</h3>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/ch4-1-grpc-go-stack.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:2.29,words:688},y:"a",t:"04.4 gRPC 入门"},["/note/golang/open-source-books/advanced-go-programming/04.4","/note/golang/open-source-books/advanced-go-programming/04.4.md"]],["v-2a93f832","/note/golang/open-source-books/advanced-go-programming/Preface.html",{d:16399584e5,l:"2021年12月20日",e:`<h1> Preface</h1>
<p>学习开源书籍 <a href="https://chai2010.cn/advanced-go-programming-book/" target="_blank" rel="noopener noreferrer">Go语言高级编程(Advanced Go Programming)</a> 笔记</p>
<p>笔记示例代码参见<a href="https://github.com/dreamjz/golang-notes/tree/main/OpenSourceBook/Advanced-Go-Programming" target="_blank" rel="noopener noreferrer">code</a></p>`,r:{minutes:.15,words:46},y:"a",t:"Preface"},["/note/golang/open-source-books/advanced-go-programming/Preface","/note/golang/open-source-books/advanced-go-programming/Preface.md"]],["v-805e4cfe","/note/golang/open-source-books/high-performance-go/preface.html",{d:16497216e5,l:"2022年4月12日",e:`<p>学习开源书籍 <a href="https://geektutu.com/post/high-performance-go.html" target="_blank" rel="noopener noreferrer">Go 语言高性能编程</a> 笔记。</p>
`,r:{minutes:.09,words:28},y:"a",t:"Preface"},["/note/golang/open-source-books/high-performance-go/preface","/note/golang/open-source-books/high-performance-go/preface.md"]],["v-fd464dca","/note/golang/open-source-books/high-performance-go/summary.html",{d:16497216e5,l:"2022年4月12日",e:`<p>总结</p>
`,r:{minutes:.04,words:13},y:"a",t:"High Performance Go Summary"},["/note/golang/open-source-books/high-performance-go/summary","/note/golang/open-source-books/high-performance-go/summary.md"]],["v-ac901672","/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.0.html",{d:16426368e5,l:"2022年1月20日",e:`<p>The objective of this book is to study a broad variety of important and useful <em>algorithms</em>: methods for solving problems that are suited for computer implementation.</p>
`,r:{minutes:.11,words:34},y:"a",t:"Introduction"},["/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.0","/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.0.md"]],["v-a9266534","/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.1.html",{d:16426368e5,l:"2022年1月20日",c:["algorithm","clang"],e:`<p>The term <em>Algorithm</em> is used in computer science to describe a problem-solving method suitable for implementation as a computer program. It is the method, rather than the computer program itself, that we must study to learn how the problem is being attacked.</p>
<p>Most algorithms of interest involve methods of organizing the data involved in the computation. Objects created in this way are called <em>data structures</em>, and they also are central objects of study in computer science. Thus, algorithms and data structures go hand in hand.</p>`,r:{minutes:.75,words:225},y:"a",t:"1.1 Algorithms"},["/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.1","/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/01.1.md"]],["v-09e51b69","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.0.html",{d:16426368e5,l:"2022年1月20日",c:["algorithm","data structure"],e:"<p><strong>Organizing the data</strong> for processing is an essential step in the development of a computer program. For many applications, the choice of the proper data structures is the only major decision involved in the implementation: once the choice has been made, the necessary algorithms are simple. For the same data, some data structures require more or less space than others; for the same operations on the data, some data structures lead to more or less efficient algorithms than others. The choices of algorithm and of data structures are closely intertwined, and we continually seek ways to save time or space by making the choice properly.</p>",r:{minutes:.63,words:190},y:"a",t:"Elementary Data Structure"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.0","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.0.md"]],["v-0b99f408","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.1.html",{d:16426368e5,l:"2022年1月20日",c:["algorithm","data structure"],e:"<p>All the data that we process on computer ultimately decompose into individual bits, but writing programs that exclusively process bits would be tiresome indeed. <em>Types</em> allow us to specify how we will use particular sets of bits and <em>functions</em> allow us to specify the operations that we will perform on the data. We use C <em>structures</em> to group together heterogeneous pieces of information, and we consider these basic C mechanisms, in the context of presenting a general approach to organizing our programs. Our primary goal is to lay the groundwork for the development, of the higher-level constructs that will serve as the basis for most of the algorithm in this book.</p>",r:{minutes:3.38,words:1014},y:"a",t:"Building Blocks"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.1","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.1.md"]],["v-0d4ecca7","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.2.html",{d:16427232e5,l:"2022年1月21日",c:["algorithm","data structure"],g:["array"],e:`<p>An array is a <em><strong>fixed</strong></em> collection of <em><strong>same-type</strong></em> data that are stroed <em><strong>contiguously</strong></em> and that are accessible by an <em><strong>index</strong></em>.</p>
<p>We refer to the <code>i</code>th element of an array <code>a</code> as <code>a[i]</code>. It is the responsibility of the programmer to strore something meaningful in an array position <code>a[i]</code> before referring to <code>a[i]</code>.</p>`,r:{minutes:5.89,words:1768},y:"a",t:"Arrays"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.2","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.2.md"]],["v-0f03a546","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.3.html",{d:16430688e5,l:"2022年1月25日",c:["algorithm","data structure"],g:["linked list"],e:"<p>When our primary interest is to go through a collection of items sequentially, one by one, we can organize the items as a <em>linked list</em>: a basic data structure where each item contains the information that we need to get to the next item. The primary advantage of linked lists over arrays is that the <mark>links provide us with the capability to  rearrange the items efficiently</mark>. This flexibility is gained at the expense of quick access to any arbitrary item in the list, because the only way to get to an item in the list is to follow links, one node to the next. There are a number of ways to organize linked lists, all starting with the following basic definition.</p>",r:{minutes:6.01,words:1804},y:"a",t:"Linked Lists"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.3","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.3.md"]],["v-10b87de5","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.4.html",{d:1643328e6,l:"2022年1月28日",c:["algorithm","data structure"],g:["linked list"],e:`<p>With arrays and structures, we save an item in memory and later refer to it by name (or by index); with linked lists, the manner in which we save information makes it more difficult to access but easier to rearrange.</p>
<p>Working with data that are organized in linked lists is called <em>list processing</em>.</p>`,r:{minutes:4.64,words:1393},y:"a",t:"Elementary List Processing"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.4","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.4.md"]],["v-126d5684","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.5.html",{d:16447968e5,l:"2022年2月14日",c:["algorithm","data structure"],g:["linked list"],e:"<p>When we are calling <code>malloc</code> directly in applications such as <code>Program-3.9</code> or <code>3.11</code>, all the calls request memory blocks of the same size. This case is typical, and an alternate method of keeping track of memory available for allocation immediately suggests itself: Simply use a linked list. All nodes that are not on any list that is in use can be kept together on a single linked list. We refer to this list as the <em>free</em> list. When we need to allocate space for a node, we get it by <em>deleting it</em> from the <em>free</em> list; when we remove a node from any of our lists, we dispose of it by <em>inserting</em> it onto the free list.</p>",r:{minutes:2.08,words:625},y:"a",t:"Memory Allocation for Lists"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.5","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.5.md"]],["v-14222f23","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.6.html",{d:16448832e5,l:"2022年2月15日",c:["algorithm","data structure"],g:["strings"],e:`<h2> 1. What is String</h2>
<p>We use the term <em>string</em> to refer to a variable-length array of characters, defined by a starting point and by a string-termination character marking the end.</p>
<p>Strings are valuable as low-level data structures for two basic reasons:</p>
<ul>
<li>Many computing applications involve processing textual data, which can be represented directly with strings.</li>
<li>Many computer systems provide direct and efficient access to <em>bytes</em> of memory, which correspond directly to characters in strings. In many situations, the string abstraction matches needs of the application to the capabilities of the machine.</li>
</ul>`,r:{minutes:3.67,words:1102},y:"a",t:"Strings"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.6","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.6.md"]],["v-15d707c2","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.7.html",{d:16449696e5,l:"2022年2月16日",c:["algorithm","data structure"],e:`<p>.<strong>Arrays</strong>, <strong>linked lists</strong>, and <strong>strings</strong> all provide simple ways to structure data sequentially. They provide a <strong>first level</strong> of abstraction that we can use to group in ways amenable to processing the objects efficiently.</p>
<p>Having settled on these abstractions, we can use them in a hierarchical fashion to build up more complex structures.</p>`,r:{minutes:1.74,words:522},y:"a",t:"Compound Data Structure"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.7","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.7.md"]],["v-bac7172a","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.html",{d:16426368e5,l:"2022年1月20日",r:{minutes:.03,words:9},y:"a",t:"Data Structures"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.md"]],["v-5e331da4","/reading/golang/7-days-golang/01-Gee-Web/00.0.preface.html",{d:16968096e5,l:"2023年10月9日",c:["golang"],e:`<h2> 1. 使用标准库处理 Web 请求</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":8000"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">handler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"URL.path = %s"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.51,words:154},y:"a",t:"0. 为何需要Web框架"},["/reading/golang/7-days-golang/01-Gee-Web/00.0.preface","/reading/golang/7-days-golang/01-Gee-Web/00.0.preface.md"]],["v-20d09562","/reading/golang/7-days-golang/01-Gee-Web/01.1.http_basic.html",{d:16968096e5,l:"2023年10月9日",c:["golang"],e:`<h2> 1. 使用标准库 <code>net/http</code></h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 注册路由</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> indexHandler<span class="token punctuation">)</span>
	http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">"/hello"</span><span class="token punctuation">,</span> helloHandler<span class="token punctuation">)</span>

	<span class="token comment">// 监听并启动 HTTP 服务</span>
	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":8000"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">indexHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"URL.path = %q\\n"</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">helloHandler</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 输出所有 http 请求头 request.Header</span>
	<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> req<span class="token punctuation">.</span>Header <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token string">"Header[%q] =  %q\\n"</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.95,words:884},y:"a",t:"1. HTTP "},["/reading/golang/7-days-golang/01-Gee-Web/01.1.http_basic","/reading/golang/7-days-golang/01-Gee-Web/01.1.http_basic.md"]],["v-15d3b17c","/reading/golang/7-days-golang/01-Gee-Web/01.2.context.html",{d:16968096e5,l:"2023年10月9日",c:["golang"],e:`<h2> 1. 为何需要 Context</h2>
<h4> 简化代码</h4>
<p>Web 服务的基本流程是根据请求(request)构建响应(response)。</p>
<p>每次构造 response 时，其 Header 中的状态码(StatusCode)和消息类型(ContentType)均需要手动设置。若不进行封装，每次均需要编写繁杂重复的代码，增加了出错的概率。</p>
<p>此时使用 Context 进行封装能够简化代码提升开发效率，以返回 JSON 数据为例：</p>
<p>封装之前</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>obj <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"geektutu"</span><span class="token punctuation">,</span>
    <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"1234"</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
w<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/json"</span><span class="token punctuation">)</span>
w<span class="token punctuation">.</span><span class="token function">WriteHeader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">)</span>
encoder <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">:=</span> encoder<span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    http<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.18,words:954},y:"a",t:"2. Context"},["/reading/golang/7-days-golang/01-Gee-Web/01.2.context","/reading/golang/7-days-golang/01-Gee-Web/01.2.context.md"]],["v-c8c456c8","/reading/golang/7-days-golang/01-Gee-Web/01.3.trie_router.html",{d:1696896e6,l:"2023年10月10日",c:["golang"],e:`<h2> 1. 前缀树 Trie</h2>
<p>使用哈希表的路由表，只能处理<strong>静态路由</strong>。</p>
<p>对于<strong>动态路由</strong>，例如：<code>/hello/:name</code>，可以使用前缀树的数据结构实现。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310100617550.jpeg" alt="trie tree" tabindex="0" loading="lazy"><figcaption>trie tree</figcaption></figure>`,r:{minutes:4.17,words:1250},y:"a",t:"3. 前缀树路由"},["/reading/golang/7-days-golang/01-Gee-Web/01.3.trie_router","/reading/golang/7-days-golang/01-Gee-Web/01.3.trie_router.md"]],["v-5800d1ea","/reading/golang/7-days-golang/01-Gee-Web/01.4.group.html",{d:1696896e6,l:"2023年10月10日",c:["golang"],e:`<h2> 1. 路由分组</h2>
<p>分组控制(Group Control)是 Web 框架应提供的基础功能之一。</p>
<p>若不进行路由分组，那么就需要针对每一个路由分别进行设置和操作。</p>
<p>对路由进行分组的好处：</p>
<ol>
<li>统一管理同一组的路由</li>
<li>实现路由组嵌套，不同的子路由可以使用单独的中间件，也可以共享父路由的中间件</li>
</ol>
<p>通过分组和中间件的组合，提高了系统的可扩展性。</p>
<h2> 2. 实现</h2>
<p><a href="https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day4-router-group" target="_blank" rel="noopener noreferrer">https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day4-router-group</a></p>`,r:{minutes:2.2,words:659},y:"a",t:"4. 路由分组"},["/reading/golang/7-days-golang/01-Gee-Web/01.4.group","/reading/golang/7-days-golang/01-Gee-Web/01.4.group.md"]],["v-92f80350","/reading/golang/7-days-golang/01-Gee-Web/01.5.middleware.html",{d:1696896e6,l:"2023年10月10日",c:["golang"],e:`<h2> 1. 中间件 Middleware</h2>
<p>中间件(middleware)，是非业务的技术类组件。</p>
<p>Web 框架无法实现所有的业务功能，因此可以提供一个插件，允许用户自定义功能，嵌入到框架之中。</p>
<p>设计一个中间件有两个关键点：</p>
<ol>
<li>插入点：若插入点过于底层，中间件逻辑将变得复杂；若插入点离用户接口太近，和用户直接在处理函数中直接调用相比优势不大</li>
<li>中间件的输入：输入的参数决定了系统的扩展能力，若参数太少，会降低可扩展性</li>
</ol>
<h3> 1.1 设计</h3>
<p>插入点和输入：</p>
<ol>
<li>输入：<code>Context</code>对象</li>
<li>插入点：<code>Context</code>初始化之后</li>
</ol>`,r:{minutes:2.75,words:825},y:"a",t:"5. Middleware"},["/reading/golang/7-days-golang/01-Gee-Web/01.5.middleware","/reading/golang/7-days-golang/01-Gee-Web/01.5.middleware.md"]],["v-1458e00e","/reading/golang/7-days-golang/01-Gee-Web/01.6.html_template.html",{d:1696896e6,l:"2023年10月10日",c:["golang"],e:`<p><a href="https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day6-html-template" target="_blank" rel="noopener noreferrer">https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day6-html-template</a></p>
<p>目录结构：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\\DAY6-HTML-TEMPLATE
│  go.mod
│  go.work
│  main.go
│
├─gee
│      context.go
│      gee.go
│      go.mod
│      logger.go
│      router.go
│      router_group.go
│      router_test.go
│      trie.go
│
├─static
│      tst.txt
│
└─tmpl
        tst.tmpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.18,words:355},y:"a",t:"6. 模板 HTML Template"},["/reading/golang/7-days-golang/01-Gee-Web/01.6.html_template","/reading/golang/7-days-golang/01-Gee-Web/01.6.html_template.md"]],["v-9acf99fc","/reading/golang/7-days-golang/01-Gee-Web/01.7.recover.html",{d:1696896e6,l:"2023年10月10日",c:["golang"],e:`<h2> 1. 错误处理</h2>
<p>当前系统中，若某个位置触发了 panic，将会导致系统停机，这是不可接收的，所以需要引入错误处理机制。</p>
<p>因为已经实现了中间件机制，可以将错误处理作为中间件引入。</p>
<p><a href="https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day7-recovery" target="_blank" rel="noopener noreferrer">https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day7-recovery</a></p>`,r:{minutes:.99,words:296},y:"a",t:"7. 错误恢复"},["/reading/golang/7-days-golang/01-Gee-Web/01.7.recover","/reading/golang/7-days-golang/01-Gee-Web/01.7.recover.md"]],["v-a9da6580","/reading/golang/high-performance-go/01-performance-analysis/01.1.benchmark.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. Benchmark 的使用</h2>
<h3> 1.1 示例：Fibonacci 数列</h3>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// fib.go</span>
<span class="token keyword">func</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token number">1</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.86,words:1159},y:"a",t:"1.1 Benchmark"},["/reading/golang/high-performance-go/01-performance-analysis/01.1.benchmark","/reading/golang/high-performance-go/01-performance-analysis/01.1.benchmark.md"]],["v-567da953","/reading/golang/high-performance-go/01-performance-analysis/01.2.pprof.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<p>Benchmark 可以用于测试某个函数的性能，若直到性能的瓶颈的位置，可以使用 benchmark 进行测试。</p>
<p>若面对未知的程序则需要使用 pprof 来分析性能的瓶颈，<a href="https://github.com/google/pprof" target="_blank" rel="noopener noreferrer">pprof</a>包含两个部分：</p>
<ol>
<li><code>runtime/pprof</code>包</li>
<li><code>go tool pprof</code> 工具</li>
</ol>
<h2> 1. 性能分析类型</h2>`,r:{minutes:4.35,words:1304},y:"a",t:"1.2 pporf 性能分析"},["/reading/golang/high-performance-go/01-performance-analysis/01.2.pprof","/reading/golang/high-performance-go/01-performance-analysis/01.2.pprof.md"]],["v-1244a7cb","/reading/golang/high-performance-go/02-datastructure/02.1.string_concat.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. String</h2>
<p>Goalang 中的 string 是只读类型，字符串的拼接实际上会创建新字符串再将内容进行拷贝，若存在大量的拼接操作，会对性能产生严重影响。</p>
<h3> 1.1 拼接方式</h3>
<p>首先定义一个随机生成字符串的函数：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> letterBytes <span class="token operator">=</span> <span class="token string">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>

<span class="token keyword">func</span> <span class="token function">randomString</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	b <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> b <span class="token punctuation">{</span>
		b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> letterBytes<span class="token punctuation">[</span>rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>letterBytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 备注：原书使用固定的 byte 数组</span>
<span class="token comment">// 我偏向于使用动态计算</span>

<span class="token keyword">func</span> <span class="token function">getLetter</span><span class="token punctuation">(</span>seed <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">byte</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> rand<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">NewSource</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token function">byte</span><span class="token punctuation">(</span><span class="token char">'a'</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">genStr</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> seed <span class="token builtin">int64</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		buf <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token function">getLetter</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.86,words:1159},y:"a",t:"2.1 字符串高效拼接"},["/reading/golang/high-performance-go/02-datastructure/02.1.string_concat","/reading/golang/high-performance-go/02-datastructure/02.1.string_concat.md"]],["v-681ca6cc","/reading/golang/high-performance-go/02-datastructure/02.2.slice.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 数组</h2>
<h3> 1.1 类型</h3>
<p>Golang 中的数组类型由两个因素确定：</p>
<ol>
<li>数组长度</li>
<li>元素类型</li>
</ol>
<p>只有两者均相同时，才是相同类型：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>
b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">}</span>
c <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.38,words:1014},y:"a",t:"2.2 Slice 性能及陷阱"},["/reading/golang/high-performance-go/02-datastructure/02.2.slice","/reading/golang/high-performance-go/02-datastructure/02.2.slice.md"]],["v-c4bbd09c","/reading/golang/high-performance-go/02-datastructure/02.3.for-range.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 遍历简单元素的切片</h2>
<p>以整型切片为例：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">iterUsingFor</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterUsingRangeIdx</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">iterUsingRangeVal</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> res <span class="token builtin">int</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		res <span class="token operator">=</span> v
	<span class="token punctuation">}</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> res
<span class="token punctuation">}</span>

<span class="token comment">// test funcs </span>

<span class="token keyword">func</span> <span class="token function">BenchmarkIterIntSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name <span class="token builtin">string</span>
		f    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">"UsingFor"</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingFor<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">"UsingRangeIdx"</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingRangeIdx<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">"UsingRangeVal"</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> iterUsingRangeVal<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">for</span> k <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> <span class="token number">100000</span><span class="token punctuation">;</span> k <span class="token operator">*=</span> <span class="token number">10</span> <span class="token punctuation">{</span>
		nums <span class="token operator">:=</span> <span class="token function">genSliceWithCap</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>

		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> tt <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
			b<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"%-20s_%.e"</span><span class="token punctuation">,</span> tt<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">float64</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
					tt<span class="token punctuation">.</span><span class="token function">f</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			k <span class="token operator">=</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.02,words:905},y:"a",t:"2.3 for 和 for-range 的性能比较"},["/reading/golang/high-performance-go/02-datastructure/02.3.for-range","/reading/golang/high-performance-go/02-datastructure/02.3.for-range.md"]],["v-c4551e66","/reading/golang/high-performance-go/02-datastructure/02.4.reflect.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 反射的用途</h2>
<p>标准库 <a href="https://golang.org/pkg/reflect/" target="_blank" rel="noopener noreferrer">reflect</a> 为 Go 语言提供了运行时动态获取对象的类型和值以及动态创建对象的能力。反射可以帮助抽象和简化代码，提高开发效率。</p>
<h2> 2. 反射如何简化代码</h2>
<p>假设有一个配置类 Config，每个字段是一个配置项。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Name    <span class="token builtin">string</span> <span class="token string">\`json:"server-name"\`</span>
	IP      <span class="token builtin">string</span> <span class="token string">\`json:"server-ip"\`</span>
	URL     <span class="token builtin">string</span> <span class="token string">\`json:"server-url"\`</span>
	Timeout <span class="token builtin">string</span> <span class="token string">\`json:"timeout"\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.5,words:1350},y:"a",t:"2.4 反射性能"},["/reading/golang/high-performance-go/02-datastructure/02.4.reflect","/reading/golang/high-performance-go/02-datastructure/02.4.reflect.md"]],["v-7b90e602","/reading/golang/high-performance-go/02-datastructure/02.5.empty_struct.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 空结构体的内存占用</h2>
<p>使用<code>unsafe.Sizeof</code>可以获取一个变量的内存占用（单位：字节）</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">emptyStructMemUsage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	es <span class="token operator">:=</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>es<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// </span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.72,words:515},y:"a",t:"2.5 利用空结构体节省内存"},["/reading/golang/high-performance-go/02-datastructure/02.5.empty_struct","/reading/golang/high-performance-go/02-datastructure/02.5.empty_struct.md"]],["v-2057ad0f","/reading/golang/high-performance-go/02-datastructure/02.6.mem_alignment.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 获取变量占用的内存大小</h2>
<p>Golang 中可以使用 <code>unsafe.Sizeof</code>获取变量的内存占用。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Args <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    num1 <span class="token builtin">int</span>
    num2 <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Flag <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    num1 <span class="token builtin">int16</span>
    num2 <span class="token builtin">int32</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>Args<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>Flag<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// output</span>
<span class="token number">16</span>
<span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.31,words:1294},y:"a",t:"2.7 内存对齐"},["/reading/golang/high-performance-go/02-datastructure/02.6.mem_alignment","/reading/golang/high-performance-go/02-datastructure/02.6.mem_alignment.md"]],["v-f6665750","/reading/golang/high-performance-go/03-concurrency/03.1.mutex.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. 互斥锁和读写锁</h2>
<h3> 1.1 互斥锁(sync.Mutex)</h3>
<p>互斥即不可同时运行。即使用了互斥锁的两个代码片段互相排斥，只有其中一个代码片段执行完成后，另一个才能执行。</p>
<p>Go 标准库中提供了 sync.Mutex 互斥锁类型及其两个方法：</p>
<ol>
<li>Lock 加锁</li>
<li>Unlock 释放锁</li>
</ol>
<p>通过在临界区前调用 Lock 方法，在代码后调用 Unlock 方法来保证一段代码的互斥执行，也可以用 defer 语句来保证互斥锁一定会被解锁。</p>
<p>在一个 Go 协程调用 Lock 方法获得锁后，其他请求锁的协程都会阻塞在 Lock 方法，直到锁被释放。</p>`,r:{minutes:4.48,words:1345},y:"a",t:"3.1 互斥锁和读写锁的性能"},["/reading/golang/high-performance-go/03-concurrency/03.1.mutex","/reading/golang/high-performance-go/03-concurrency/03.1.mutex.md"]],["v-e6d3b74a","/reading/golang/high-performance-go/03-concurrency/03.2.once.html",{d:16962912e5,l:"2023年10月3日",c:["golang"],e:`<h2> 1. sync.Once 的使用场景</h2>
<p><code>sync.Once</code> 是 Go 标准库提供的使函数只执行一次的实现，常应用于单例模式，例如初始化配置、保持数据库连接等。作用与 <code>init</code> 函数类似，但有区别。</p>
<ul>
<li>init 函数是当所在的 package 首次被加载时执行，若迟迟未被使用，则既浪费了内存，又延长了程序加载时间。</li>
<li>sync.Once 可以在代码的任意位置初始化和调用，因此可以延迟到使用时再执行，并发场景下是<strong>线程安全</strong>的。</li>
</ul>
<p>在多数情况下，<code>sync.Once</code> 被用于控制变量的初始化，这个变量的读写满足如下三个条件：</p>`,r:{minutes:3.06,words:919},y:"a",t:"3.2 sync.Once"},["/reading/golang/high-performance-go/03-concurrency/03.2.once","/reading/golang/high-performance-go/03-concurrency/03.2.once.md"]],["v-f23db260","/reading/golang/high-performance-go/04-compile/04.1.reduce_exe_size.html",{d:1696464e6,l:"2023年10月5日",c:["golang"],e:`<h2> 1. 直接编译</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Result <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Num<span class="token punctuation">,</span> Ans <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Calc <span class="token builtin">int</span>

<span class="token comment">// Square calculates the square of num</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>calc <span class="token operator">*</span>Calc<span class="token punctuation">)</span> <span class="token function">Square</span><span class="token punctuation">(</span>num <span class="token builtin">int</span><span class="token punctuation">,</span> result <span class="token operator">*</span>Result<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
	result<span class="token punctuation">.</span>Num <span class="token operator">=</span> num
	result<span class="token punctuation">.</span>Ans <span class="token operator">=</span> num <span class="token operator">*</span> num
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rpc<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span><span class="token function">new</span><span class="token punctuation">(</span>Calc<span class="token punctuation">)</span><span class="token punctuation">)</span>
	rpc<span class="token punctuation">.</span><span class="token function">HandleHTTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Serving RPC server on port %d"</span><span class="token punctuation">,</span> <span class="token number">1234</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">":1234"</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">"Error serving: "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.17,words:652},y:"a",t:"4.1 减小编译后的可执行文件体积"},["/reading/golang/high-performance-go/04-compile/04.1.reduce_exe_size","/reading/golang/high-performance-go/04-compile/04.1.reduce_exe_size.md"]],["v-6a293671","/reading/golang/high-performance-go/04-compile/04.2.mem_escape.html",{d:1696464e6,l:"2023年10月5日",c:["golang"],e:`<h2> 1. Stack and Heap</h2>
<p>Golang 程序会在两个区域为变量分配内存：</p>
<ol>
<li>栈(stack)，每个 goroutine 持有自身独有的栈空间</li>
<li>堆(heap)</li>
</ol>
<p>在栈上分配和回收内存开销很低，仅需两个CPU指令：<code>PUSH</code>和<code>POP</code>。</p>
<p>在堆上分配内存，很大的开销来自于 GC。</p>
<blockquote>
<p>标记清除收集器是跟踪式垃圾收集器，其执行过程可以分成标记（Mark）和清除（Sweep）两个阶段：</p>
<ul>
<li>标记阶段 — 从根对象出发查找并标记堆中所有存活的对象；</li>
<li>清除阶段 — 遍历堆中的全部对象，回收未被标记的垃圾对象并将回收的内存加入空闲链表。</li>
</ul>
<p>标记清除算法的一个典型耗时是在标记期间，需要暂停程序（Stop the world，STW），标记结束之后，用户程序才可以继续执行。</p>
<p>— <a href="https://geektutu.com/post/qa-golang-2.html#Q5-%E7%AE%80%E8%BF%B0-Go-%E8%AF%AD%E8%A8%80GC-%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6-%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86" target="_blank" rel="noopener noreferrer">垃圾回收(GC)的工作原理</a></p>
</blockquote>`,r:{minutes:3.66,words:1099},y:"a",t:"4.2 内存逃逸分析"},["/reading/golang/high-performance-go/04-compile/04.2.mem_escape","/reading/golang/high-performance-go/04-compile/04.2.mem_escape.md"]],["v-7fa49b0c","/reading/golang/high-performance-go/04-compile/04.3.deadcode.html",{d:16965504e5,l:"2023年10月6日",c:["golang"],e:`<h2> 1. Dead code</h2>
<blockquote>
<p>In compiler theory, dead code elimination (also known as DCE, dead code removal, dead code stripping, or dead code strip) is a compiler optimization to remove code which does not affect the program results.</p>
<p>Removing such code has several benefits: it shrinks program size, an important consideration in some contexts, and it allows the running program to avoid executing irrelevant operations, which reduces its running time.</p>
</blockquote>`,r:{minutes:3.47,words:1041},y:"a",t:"4.3 dead code 和调试模式"},["/reading/golang/high-performance-go/04-compile/04.3.deadcode","/reading/golang/high-performance-go/04-compile/04.3.deadcode.md"]],["v-350af4a0","/note/golang/github-repos/flower-corp/minidb/minidb.html",{d:164808e7,l:"2022年3月24日",c:["golang","NoSql"],g:["minidb"],e:`<h2> 1. 简介</h2>
<p>minidb 为 rosedb 的 mini 版本，用于理解 bitcask 存储模型以及 rosedb。</p>
<p>minidb 中没有实现 bitcask 模型的多个数据文件机制，为了简化只使用了一个数据文件进行读写，但不妨碍理解 bitcask 模型。</p>
<h2> 2. 存储模型</h2>
<p>存储，其核心问题是：如何存放数据以及如何取出数据。</p>
<p>计算机中有内存和磁盘，内存是易失性的，掉电之后数据全部丢失，所以想要在系统崩溃重启后依然正常使用，需要将数据存储在非易失介质中（如磁盘等）。</p>
<p>那么对于一个单机版的 k-v 存储引擎，我们需要设计数据在内存中应该如何存放，在磁盘中应该如何存放。根据优秀前辈的研究和总结，主要将数据存储模型分为两类：<mark>B+ 树</mark> 和 <mark>LSM 树</mark>。</p>`,r:{minutes:6.72,words:2015},y:"a",t:"Minidb"},["/note/golang/github-repos/flower-corp/minidb/minidb","/note/golang/github-repos/flower-corp/minidb/minidb.md"]],["v-7811b9c6","/note/golang/github-repos/flower-corp/minidb/preface.html",{d:164808e7,l:"2022年3月24日",e:`<p>学习开源项目 <a href="https://github.com/flower-corp/minidb" target="_blank" rel="noopener noreferrer">minidb</a> 笔记</p>
`,r:{minutes:.07,words:20},y:"a",t:"Preface"},["/note/golang/github-repos/flower-corp/minidb/preface","/note/golang/github-repos/flower-corp/minidb/preface.md"]],["v-40f6cc6c","/note/golang/open-source-books/high-performance-go/performance-analysis/benchmark.html",{d:16497216e5,l:"2022年4月12日",c:["golang"],e:`<h2> 1. Benchmark 基准测试</h2>
<p>Go 标准库的 <code>testing</code> 框架提供了基准测试 (benchmark) 的能力，可以很容易对某一段代码进行测试。</p>
<p>性能测试易受环境影响，所以需要保证测试环境的稳定。</p>
<h2> 2. Benchmark</h2>
<h3> 2.1 计算第 N 个斐波那契数</h3>
<p>新增 <code>fib.go</code> 实现函数 <code>fib</code> 用于计算第 N 个斐波那契数。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.66,words:1397},y:"a",t:"Benchmark"},["/note/golang/open-source-books/high-performance-go/performance-analysis/benchmark","/note/golang/open-source-books/high-performance-go/performance-analysis/benchmark.md"]],["v-4f5da57e","/note/golang/open-source-books/high-performance-go/performance-analysis/pprof.html",{d:16497216e5,l:"2022年4月12日",c:["golang"],e:`<p>Benchmark 可以度量某个函数的性能，前提是知道性能的瓶颈。对于未知程序，则需要 <code>pprof</code> 工具来进行分析，<a href="https://github.com/google/pprof" target="_blank" rel="noopener noreferrer">pprof</a> 分为两个部分：</p>
<ul>
<li><code>runtime/pprof</code> 包；</li>
<li><code>pprof</code> 性能分析工具；</li>
</ul>
<h2> 1. 性能分析类型</h2>
<p>记录性能数据会对程序的性能产生影响，建议一次只记录一类数据。</p>`,r:{minutes:5.28,words:1584},y:"a",t:"pprof"},["/note/golang/open-source-books/high-performance-go/performance-analysis/pprof","/note/golang/open-source-books/high-performance-go/performance-analysis/pprof.md"]],["v-3bd0497f","/note/golang/open-source-books/the-way-to-go/04/04.1.html",{e:`<h1> 4.1 文件名、关键字与标识符</h1>
<h2> 4.1.1 文件名</h2>
<p>Golang 源文件：</p>
<ul>
<li>以 <code>.go</code> 为后缀</li>
<li>文件名均由<strong>小写</strong>字母组成， <code>scanner.go</code></li>
<li>可用<strong>下划线</strong>进行分隔，<code>scanne_test.go</code></li>
</ul>
<h2> 4.1.2 标志符</h2>
<p>Golang 的标志符：</p>
<ul>
<li>区分<strong>大小写</strong></li>
<li>以<strong>字母</strong>开头，后接字符或数字</li>
<li>不能为<strong>关键字</strong></li>
<li><code>_</code> : 空白标识符，任何赋给此标识符的值将被抛弃</li>
</ul>`,r:{minutes:.43,words:128},y:"a",t:"4.1 文件名、关键字与标识符"},["/note/golang/open-source-books/the-way-to-go/04/04.1","/note/golang/open-source-books/the-way-to-go/04/04.1.md"]],["v-3d85221e","/note/golang/open-source-books/the-way-to-go/04/04.2.html",{e:`<h1> 4.2 Go 程序的基本结构和要素</h1>
<h2> 4.2.1 包的概念、导入与可见性</h2>
<h3> 包 Package</h3>
<p>包是结构化代码的一种方式： 每个程序由包(package)组成，可使用自身的包或者导入其他包的内容。</p>
<p>必须在源文件的非注释第一行指明文件属于哪个包，如：<code>package main </code>。</p>
<h3> 标准库</h3>
<p>Golang 中可直接使用的包。</p>
<h3> 编译</h3>
<p>若对一个包进行修改或重新编译，所有引用了的此包的程序必须重新编译。</p>
<p>Golang 中的包采用显示依赖达到快速编译的目的，编译器从后缀名为<code>.o</code>的对象文件中提取传递依赖类型的信息。</p>`,r:{minutes:1.64,words:492},y:"a",t:"4.2 Go 程序的基本结构和要素"},["/note/golang/open-source-books/the-way-to-go/04/04.2","/note/golang/open-source-books/the-way-to-go/04/04.2.md"]],["v-3f39fabd","/note/golang/open-source-books/the-way-to-go/04/04.3.html",{e:`<h1> 4.3 常量</h1>
<ul>
<li>
<p>使用 <code>const</code> 定义</p>
</li>
<li>
<p>存储不会改变的数据</p>
</li>
<li>
<p>数据类型只能为：布尔型、数字型、字符串</p>
</li>
<li>
<p>格式：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> indetifier <span class="token punctuation">[</span><span class="token keyword">type</span><span class="token punctuation">]</span> <span class="token operator">=</span> value
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>显式类型定义：<code>const str string = "A"</code></li>
<li>隐式类型定义：<code>const Pi = 3.14</code></li>
</ul>
</li>
<li>
<p>常量值必须是<strong>编译期</strong>可确定的</p>
</li>
</ul>`,r:{minutes:1.15,words:344},y:"a",t:"4.3 常量"},["/note/golang/open-source-books/the-way-to-go/04/04.3","/note/golang/open-source-books/the-way-to-go/04/04.3.md"]],["v-40eed35c","/note/golang/open-source-books/the-way-to-go/04/04.4.html",{e:`<h1> 4.4 变量</h1>
<ul>
<li>
<p>使用 <code>var</code> 声明：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> identifier <span class="token keyword">type</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 声明</span>
<span class="token keyword">var</span> a <span class="token builtin">int</span>
<span class="token keyword">var</span> b <span class="token builtin">string</span>
<span class="token keyword">var</span> <span class="token punctuation">(</span>
	c <span class="token builtin">bool</span>
    d <span class="token operator">*</span><span class="token builtin">int</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>采用驼峰命名法</p>
</li>
<li>
<p>赋值：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 声明并赋值</span>
<span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// 自动推断类型（编译期）</span>
<span class="token keyword">var</span> f <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">"f"</span>
<span class="token comment">// 并行赋值</span>
<span class="token keyword">var</span> g<span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
<span class="token comment">// 交换</span>
g<span class="token punctuation">,</span> h <span class="token operator">=</span> h<span class="token punctuation">,</span> g <span class="token comment">// g:2, h: 1</span>
<span class="token comment">// 抛弃值</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>全局变量</strong>： 可以声明，但不使用</p>
</li>
<li>
<p><strong>局部变量</strong>： 声明后必须使用，可使用 <code>:=</code> 进行简短声明并赋值</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>a <span class="token operator">:=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:1.17,words:352},y:"a",t:"4.4 变量"},["/note/golang/open-source-books/the-way-to-go/04/04.4","/note/golang/open-source-books/the-way-to-go/04/04.4.md"]],["v-42a3abfb","/note/golang/open-source-books/the-way-to-go/04/04.5.html",{e:`<h1> 4.5 基本类型和运算符</h1>
<h2> 4.5.1 布尔型 bool</h2>
<ul>
<li>值：<code>true</code> 或 <code>false</code></li>
</ul>
<h3> 逻辑运算符</h3>
<h4> <code>==</code> 和 <code>!=</code></h4>
<p>只有类型相同的值才能进行比较（若为 <code>interface</code> 则需要实现相同的接口)。</p>
<p>Golang 没有隐式类型转换，所有类型转换需要进行显示说明。</p>
<h4> <code>!</code> 逻辑 非</h4>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token operator">!</span>T <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">false</span>
<span class="token operator">!</span>F <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.84,words:853},y:"a",t:"4.5 基本类型和运算符"},["/note/golang/open-source-books/the-way-to-go/04/04.5","/note/golang/open-source-books/the-way-to-go/04/04.5.md"]],["v-4458849a","/note/golang/open-source-books/the-way-to-go/04/04.6.html",{e:`<h1> 4.7 字符串</h1>
<p><code>string</code>  为值类型，且值<strong>不可变</strong>，其本质为定长的字节数组。</p>
<p>支持两种字面值：</p>
<ul>
<li>
<p>解释字符串， 使用 <code>""</code> ， 转义字符将被替换：</p>
<ul>
<li><code>\\n</code>: 换行</li>
<li><code>\\r</code>: 回车</li>
<li><code>\\t</code>: tab</li>
<li><code>\\u</code>, <code>\\U</code>: Unicode</li>
<li><code>\\\\</code>：\\</li>
</ul>
</li>
<li>
<p>非解释字符串， 使用反引号，支持换行：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">\`
	This is a raw 
	string
\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.45,words:135},y:"a",t:"4.7 字符串"},["/note/golang/open-source-books/the-way-to-go/04/04.6","/note/golang/open-source-books/the-way-to-go/04/04.6.md"]],["v-460d5d39","/note/golang/open-source-books/the-way-to-go/04/04.7.html",{e:`<h1> 4.7 strings 和 strconv 包</h1>
<p><a href="https://pkg.go.dev/strings@go1.20.4" target="_blank" rel="noopener noreferrer">strings</a> 用于字符串操作</p>
<p><a href="https://pkg.go.dev/strconv@go1.20.4" target="_blank" rel="noopener noreferrer">strconv</a> 用于与字符串相关的类型转换</p>
`,r:{minutes:.1,words:31},y:"a",t:"4.7 strings 和 strconv 包"},["/note/golang/open-source-books/the-way-to-go/04/04.7","/note/golang/open-source-books/the-way-to-go/04/04.7.md"]],["v-47c235d8","/note/golang/open-source-books/the-way-to-go/04/04.8.html",{e:`<h1> 4.8 时间和日期</h1>
<p>详见 <a href="https://pkg.go.dev/time@go1.20.4" target="_blank" rel="noopener noreferrer">time</a></p>
`,r:{minutes:.04,words:11},y:"a",t:"4.8 时间和日期"},["/note/golang/open-source-books/the-way-to-go/04/04.8","/note/golang/open-source-books/the-way-to-go/04/04.8.md"]],["v-49770e77","/note/golang/open-source-books/the-way-to-go/04/04.9.html",{e:`<h1> 4.9 指针</h1>
<p>程序在内存存储其值，每个内存块（或字）有一个地址，通常使用十六进制数表示</p>
<p>Golang的<strong>取址符</strong>为<code>&amp;</code>,在变量前使用就会返回响应变量的内存地址,</p>
<p>内存地址可以存储在名为指针的特殊数据类型中，指针变量的缩写通常为ptr。</p>
<p>下面的例子中intP是一个int型指针：<code>*int</code>，intP存储了i1的内存地址；它指向了i1的位置，引用了变量i1</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> intP <span class="token operator">*</span><span class="token builtin">int</span>
<span class="token keyword">var</span> i1 <span class="token operator">=</span> <span class="token number">5</span>
<span class="token comment">//intP指向i1</span>
intP <span class="token operator">=</span> <span class="token operator">&amp;</span>i1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.26,words:678},y:"a",t:"4.9 指针"},["/note/golang/open-source-books/the-way-to-go/04/04.9","/note/golang/open-source-books/the-way-to-go/04/04.9.md"]],["v-36e15080","/note/golang/open-source-books/the-way-to-go/05/05.0.html",{e:`<h1> 5.0 控制结构</h1>
<ul>
<li><code>if-else</code></li>
<li><code>switch</code></li>
<li><code>select</code>: 用于 channel, 见 14 章节</li>
<li><code>for range</code></li>
</ul>
`,r:{minutes:.06,words:18},y:"a",t:"5.0 控制结构"},["/note/golang/open-source-books/the-way-to-go/05/05.0","/note/golang/open-source-books/the-way-to-go/05/05.0.md"]],["v-3896291f","/note/golang/open-source-books/the-way-to-go/05/05.1.html",{e:`<h1> 5.1 if-else 结构</h1>
<p><code>if</code></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> condition <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.26,words:78},y:"a",t:"5.1 if-else 结构"},["/note/golang/open-source-books/the-way-to-go/05/05.1","/note/golang/open-source-books/the-way-to-go/05/05.1.md"]],["v-3a4b01be","/note/golang/open-source-books/the-way-to-go/05/05.2.html",{e:`<h1> 5.2 测试多返回值函数的错误</h1>
<p>Go 函数通常通过返回两个返回值：</p>
<ul>
<li>返回值和  <code>error</code>
成功执行则<code>error</code>为<code>nil</code>， 否则就会包含相应的错误信息。</li>
<li>返回值和 <code>bool</code></li>
</ul>
<h2> 处理模式</h2>
<ul>
<li>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>val<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> val<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>comma, ok pattern</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> val<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.3,words:90},y:"a",t:"5.2 测试多返回值函数的错误"},["/note/golang/open-source-books/the-way-to-go/05/05.2","/note/golang/open-source-books/the-way-to-go/05/05.2.md"]],["v-3bffda5d","/note/golang/open-source-books/the-way-to-go/05/05.3.html",{e:`<h2> 5.3 switch 结构</h2>
<h2> 5.3.1 形式1</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">switch</span> var1 <span class="token punctuation">{</span>
<span class="token keyword">case</span> val1<span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token keyword">case</span> val2<span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.72,words:215},y:"a",t:""},["/note/golang/open-source-books/the-way-to-go/05/05.3","/note/golang/open-source-books/the-way-to-go/05/05.3.md"]],["v-3db4b2fc","/note/golang/open-source-books/the-way-to-go/05/05.4.html",{e:`<h1> 5.4 for 结构</h1>
<p>Go 中的循环只有 <code>for</code>。</p>
<h2> 5.4.1 基于计数器的迭代</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> 初始化语句；条件语句；修饰语句 <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.71,words:214},y:"a",t:"5.4 for 结构"},["/note/golang/open-source-books/the-way-to-go/05/05.4","/note/golang/open-source-books/the-way-to-go/05/05.4.md"]],["v-3f698b9b","/note/golang/open-source-books/the-way-to-go/05/05.5.html",{e:`<h1> 5.5 break 和 contiue</h1>
<h2> break</h2>
<p>可用于跳出循环</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">if</span> condition <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.31,words:94},y:"a",t:"5.5 break 和 contiue"},["/note/golang/open-source-books/the-way-to-go/05/05.5","/note/golang/open-source-books/the-way-to-go/05/05.5.md"]],["v-411e643a","/note/golang/open-source-books/the-way-to-go/05/05.6.html",{e:`<h1> 5.6 标签与 goto</h1>
<p><strong>特别注意</strong> 使用标签和 <code>goto</code> 语句是不被鼓励的：它们会很快导致非常糟糕的程序设计，而且总有更加可读的替代方案来实现相同的需求。</p>
<p><code>for</code>、<code>switch</code> 或 <code>select</code> 语句都可以配合标签 (label) 形式的标识符使用，即某一行第一个以冒号 (<code>:</code>) 结尾的单词（gofmt 会将后续代码自动移至下一行）。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">labelInFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
LABEL1<span class="token punctuation">:</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span>
				<span class="token keyword">continue</span> LABEL1
			<span class="token punctuation">}</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"i is: %d, and j is: %d\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:208},y:"a",t:"5.6 标签与 goto"},["/note/golang/open-source-books/the-way-to-go/05/05.6","/note/golang/open-source-books/the-way-to-go/05/05.6.md"]],["v-355c08bf","/note/golang/open-source-books/the-way-to-go/06/06.1.html",{e:`<h1> 6.1 介绍</h1>
<p>编写多个函数的主要目的是将一个需要很多行代码的复杂问题分解为一系列简单的任务（那就是函数）来解决。而且，同一个任务（函数）可以被调用多次，有助于代码重用。</p>
<p>好的程序是非常注意 DRY 原则的，即不要重复你自己 (Don't Repeat Yourself)，意思是执行特定任务的代码只能在程序里面出现一次。</p>
<p>Go 不允许函数重载，即同名函数。</p>
<h2> 6.1.1 类型</h2>
<ul>
<li>普通的带有名字的函数</li>
<li>匿名函数或lambda函数</li>
<li>方法(Methods)</li>
</ul>`,r:{minutes:.69,words:207},y:"a",t:"6.1 介绍"},["/note/golang/open-source-books/the-way-to-go/06/06.1","/note/golang/open-source-books/the-way-to-go/06/06.1.md"]],["v-76581383","/note/golang/open-source-books/the-way-to-go/06/06.10.html",{e:`<h1> 6.10 使用闭包调试</h1>
<p><a href="path/06_10_debug_func.go">06_10_debug_func.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">debugf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	where <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">Caller</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%s:%d"</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.28,words:85},y:"a",t:"6.10 使用闭包调试"},["/note/golang/open-source-books/the-way-to-go/06/06.10","/note/golang/open-source-books/the-way-to-go/06/06.10.md"]],["v-79c1c4c1","/note/golang/open-source-books/the-way-to-go/06/06.12.html",{e:`<h1> 6.12 通过内存缓存提升性能</h1>
<p>通过在内存中缓存和重复利用相同的计算结果，称之为内存缓存。</p>
<p>以 fibonacci 数列为例，计算第n个数字需要前两个数字，而前两个数字已经计算过了，将其缓存在内存中可提升速度。</p>
<p><a href="path/06_12_fibonacci_memorization.go">06_12_fibonacci_memorization.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> LIMIT <span class="token operator">=</span> <span class="token number">50</span>

<span class="token keyword">var</span> fibs <span class="token punctuation">[</span>LIMIT<span class="token punctuation">]</span><span class="token builtin">uint64</span>

<span class="token keyword">func</span> <span class="token function">fibF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">timeSpend</span><span class="token punctuation">(</span>fib<span class="token punctuation">,</span> printFibs<span class="token punctuation">)</span>
	<span class="token function">timeSpend</span><span class="token punctuation">(</span>fibMem<span class="token punctuation">,</span> printFibs<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token number">1</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	res <span class="token operator">=</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">fibMem</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> fibs<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> fibs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token number">1</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token function">fibMem</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibMem</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// save result</span>
	fibs<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> res
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">printFibs</span><span class="token punctuation">(</span>fib <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> LIMIT<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> <span class="token function">fib</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">timeSpend</span><span class="token punctuation">(</span>fib <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span><span class="token punctuation">,</span> p <span class="token keyword">func</span><span class="token punctuation">(</span>fib <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">uint64</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">p</span><span class="token punctuation">(</span>fib<span class="token punctuation">)</span>
	end <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Time: "</span><span class="token punctuation">,</span> end<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.99,words:298},y:"a",t:"6.12 通过内存缓存提升性能"},["/note/golang/open-source-books/the-way-to-go/06/06.12","/note/golang/open-source-books/the-way-to-go/06/06.12.md"]],["v-3710e15e","/note/golang/open-source-books/the-way-to-go/06/06.2.html",{e:`<h1> 6.2 函数参数与返回值</h1>
<h2> 6.2.1 参数传递</h2>
<p><strong>指针也是变量类型，有自己的地址和值，通常指针的值指向一个变量的地址。所以，按引用传递也是按值传递</strong>。</p>
<ul>
<li>按<strong>值传递</strong> (call by value)：调用函数时，实参会将其副本传递给函数的实参。对形参的修改不会影响到形参。</li>
<li>按<strong>引用传递</strong> (call by reference)：将实参的地址传给形参（指针类型），此时可以通过指针来对原参数进行修改。
<ul>
<li>传递指针（32位或64位）消耗一般小于副本</li>
<li>引用类型（slice, map, interface, channel) 默认使用引用传递（即使没有显式使用指针）</li>
</ul>
</li>
</ul>`,r:{minutes:1.78,words:534},y:"a",t:"6.2 函数参数与返回值"},["/note/golang/open-source-books/the-way-to-go/06/06.2","/note/golang/open-source-books/the-way-to-go/06/06.2.md"]],["v-38c5b9fd","/note/golang/open-source-books/the-way-to-go/06/06.3.html",{e:`<h1> 6.3 传递变长参数</h1>
<p>若函数最后一个参数为<code>...type</code> 的形式，那么函数可以处理<strong>变长参数</strong>，长度可以为0，这样的函数被称为<strong>变参函数</strong>。</p>
<h2> 相同参数类型</h2>
<p>当变长参数类型相同时，可以：</p>
<ul>
<li>直接传入多个参数：<code>f(p1, p2, p3)</code></li>
<li>参数放在切片中，以<code>slice...</code>的形式传入</li>
</ul>
<p>例：TODO: <a href="https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_3_varnumpar.go" target="_blank" rel="noopener noreferrer">06_3_varnumpar.go</a></p>`,r:{minutes:.86,words:259},y:"a",t:"6.3 传递变长参数"},["/note/golang/open-source-books/the-way-to-go/06/06.3","/note/golang/open-source-books/the-way-to-go/06/06.3.md"]],["v-3a7a929c","/note/golang/open-source-books/the-way-to-go/06/06.4.html",{e:`<h1> 6.4 defer 和追踪</h1>
<h2> defer</h2>
<p><code>defer</code> 允许推迟语句到函数返回之前的时候才执行。</p>
<p>例： <a href="https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_4_defer.go" target="_blank" rel="noopener noreferrer">06_4_defer.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">deferF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"f1 top"</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"f1 bottom"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"f2"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.04,words:313},y:"a",t:"6.4 defer 和追踪"},["/note/golang/open-source-books/the-way-to-go/06/06.4","/note/golang/open-source-books/the-way-to-go/06/06.4.md"]],["v-3c2f6b3b","/note/golang/open-source-books/the-way-to-go/06/06.5.html",{e:`<h1> 6.5 内置函数</h1>
<p>Go 中无需导入可直接使用的函数</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>close()</code></td>
<td>用于管道通信</td>
</tr>
<tr>
<td><code>len()</code>、<code>cap()</code></td>
<td><code>len()</code> 用于返回某个类型的长度或数量（字符串、数组、切片、<code>map</code> 和管道）；<code>cap()</code> 是容量的意思，用于返回某个类型的最大容量（只能用于数组、切片和管道，不能用于 <code>map</code>）</td>
</tr>
<tr>
<td><code>new()</code>、<code>make()</code></td>
<td><code>new()</code> 和 <code>make()</code> 均是用于分配内存：<code>new()</code> 用于值类型和用户定义的类型，如自定义结构，<code>make</code> 用于内置引用类型（切片、<code>map</code> 和管道）。它们的用法就像是函数，但是将类型作为参数：<code>new(type)</code>、<code>make(type)</code>。<code>new(T)</code> 分配类型 <code>T</code> 的零值并返回其地址，也就是指向类型 <code>T</code> 的指针。它也可以被用于基本类型：<code>v := new(int)</code>。<code>make(T)</code> 返回类型 <code>T</code> 的初始化之后的值，因此它比 <code>new()</code> 进行更多的工作d。<strong><code>new()</code> 是一个函数，不要忘记它的括号</strong>。</td>
</tr>
<tr>
<td><code>copy()</code>、<code>append()</code></td>
<td>用于复制和连接切片</td>
</tr>
<tr>
<td><code>panic()</code>、<code>recover()</code></td>
<td>两者均用于错误处理机制</td>
</tr>
<tr>
<td><code>print()</code>、<code>println()</code></td>
<td>底层打印函数，在部署环境中建议使用 <code>fmt</code> 包</td>
</tr>
<tr>
<td><code>complex()</code>、<code>real ()</code>、<code>imag()</code></td>
<td>用于创建和操作复数</td>
</tr>
</tbody>
</table>`,r:{minutes:1.01,words:304},y:"a",t:"6.5 内置函数"},["/note/golang/open-source-books/the-way-to-go/06/06.5","/note/golang/open-source-books/the-way-to-go/06/06.5.md"]],["v-3de443da","/note/golang/open-source-books/the-way-to-go/06/06.6.html",{e:`<h1> 6.6 递归函数</h1>
<p>函数在函数体内调用自身称之为递归。</p>
<p><a href="https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_6_fibonacci.go" target="_blank" rel="noopener noreferrer">06_6_fibonacci.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code> <span class="token function">printFib</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	res <span class="token operator">:=</span> <span class="token number">0</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token number">1</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		res <span class="token operator">=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.09,words:327},y:"a",t:"6.6 递归函数"},["/note/golang/open-source-books/the-way-to-go/06/06.6","/note/golang/open-source-books/the-way-to-go/06/06.6.md"]],["v-3f991c79","/note/golang/open-source-books/the-way-to-go/06/06.7.html",{e:`<h1> 6.7 函数作为参数</h1>
<p>函数可以作为其它函数的参数进行传递，然后在其它函数内调用执行，一般称之为回调。</p>
<p><a href="https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_7_function_param.go" target="_blank" rel="noopener noreferrer">06_7_function_param.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">funcParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">callBack</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> Add<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"%d + %d = %d\\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">callBack</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> f <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">f</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1 + 2 = 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.29,words:88},y:"a",t:"6.7 函数作为参数"},["/note/golang/open-source-books/the-way-to-go/06/06.7","/note/golang/open-source-books/the-way-to-go/06/06.7.md"]],["v-414df518","/note/golang/open-source-books/the-way-to-go/06/06.8.html",{e:`<h1> 6.8 闭包</h1>
<p>匿名函数同样被称之为闭包（函数式语言的术语）：它们被允许调用定义在其它环境下的变量。</p>
<p>闭包可使得某个函数捕捉到一些外部状态，例如：函数被创建时的状态。另一种表示方式为：一个闭包继承了函数所声明时的作用域。这种状态（作用域内的变量）都被共享到闭包的环境中，因此这些变量可以在闭包中被操作，直到被销毁。</p>
<ul>
<li>
<p>可直接调用</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>配合<code>defer</code>:</p>
</li>
<li>
<p>配合<code>go</code></p>
</li>
</ul>`,r:{minutes:.51,words:153},y:"a",t:"6.8 闭包"},["/note/golang/open-source-books/the-way-to-go/06/06.8","/note/golang/open-source-books/the-way-to-go/06/06.8.md"]],["v-4302cdb7","/note/golang/open-source-books/the-way-to-go/06/06.9.html",{e:`<h1> 6.9 应用闭包：将函数作为返回值</h1>
<p><a href="path/06_9_function_return.go">06_9_function_return.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">functionReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	p2 <span class="token operator">:=</span> <span class="token function">add2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"p2(3): %d \\n"</span><span class="token punctuation">,</span> <span class="token function">p2</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	twoAdder <span class="token operator">:=</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"twoAdder(3): %d\\n"</span><span class="token punctuation">,</span> <span class="token function">twoAdder</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">add2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> b <span class="token operator">+</span> <span class="token number">2</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">adder</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> a <span class="token operator">+</span> b
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.99,words:297},y:"a",t:"6.9 应用闭包：将函数作为返回值"},["/note/golang/open-source-books/the-way-to-go/06/06.9","/note/golang/open-source-books/the-way-to-go/06/06.9.md"]],["v-0e9fed90","/note/golang/open-source-books/the-way-to-go/06/6.11.html",{e:`<h1> 6.11 计算函数执行时间</h1>
<p>使用<code>time</code>包可以获取时间并进行计算。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>start <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//...</span>
end <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
delta <span class="token operator">:=</span> end<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.11,words:33},y:"a",t:"6.11 计算函数执行时间"},["/note/golang/open-source-books/the-way-to-go/06/6.11","/note/golang/open-source-books/the-way-to-go/06/6.11.md"]],["v-3221e85f","/note/golang/open-source-books/the-way-to-go/07/07.1.html",{e:`<h1> 7.1 数组</h1>
<h2> 7.1.1 概念</h2>
<ul>
<li>
<p><strong>数组</strong>是具有相同<strong>唯一类型</strong>的一组已编号且长度固定的数据项序列。</p>
</li>
<li>
<p>数组<strong>长度</strong>必须是常量表达式，且为非负整数。</p>
<ul>
<li>数组长度也是数组类型的一部分，故<code>[5]int</code> 和<code>[10]int</code>属于不同类型。</li>
<li>数组长度必须在声明时给出</li>
<li>数组最大为2GB</li>
</ul>
</li>
<li>
<p>数组元素可以通过<strong>索引</strong>获取，从0开始</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> arr <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token comment">// 可以改变元素值</span>
arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><strong>声明</strong>：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> identifier <span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">]</span><span class="token keyword">type</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> arr1 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>声明数组时，所有的数组元素将会为默认的零值。</p>
</li>
<li>
<p>内存中结构为：
<img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/image-20230503185401595.png" alt="image-20230503185401595" loading="lazy"></p>
</li>
</ul>`,r:{minutes:1.28,words:385},y:"a",t:"7.1 数组"},["/note/golang/open-source-books/the-way-to-go/07/07.1","/note/golang/open-source-books/the-way-to-go/07/07.1.md"]],["v-33d6c0fe","/note/golang/open-source-books/the-way-to-go/07/07.2.html",{e:`<h1> 7.2 切片</h1>
<h2> 7.2.1 概念</h2>
<ul>
<li>
<p><strong>切片</strong>(slice) 是对数组的一个连续片段的引用。</p>
</li>
<li>
<p><strong>长度</strong>：切片可索引的长度，可通过<code>len()</code> 获取</p>
</li>
<li>
<p><strong>容量</strong>：切片对应底层数组的长度，可通过<code>cap()</code>获取</p>
</li>
<li>
<p>长度和容量满足不等式: <code>0 &lt;= len(s) &lt;= cap()</code></p>
</li>
<li>
<p>多个切片若底层数组相同，则切片之间的数组是共享的</p>
</li>
<li>
<p><strong>声明</strong>：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> identifier <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>未初始化的切片值为<code>nil</code>, 长度为0</p>
</li>
<li>
<p><strong>初始化</strong>:</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 通过数组初始化</span>
<span class="token keyword">var</span> slice <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token punctuation">]</span>
<span class="token comment">// 通过数组常量, 例如</span>
<span class="token keyword">var</span> slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表示切片由数组的 <code>start</code> 到 <code>end-1</code> 之间的元素构成。
<code>[start:end]</code>为切片表达式：</p>
<ul>
<li><code>[:]</code>:  相当于<code>[0:len(arr)]</code></li>
<li><code>[n:]</code>: 相当于<code>[n:len(arr)]</code></li>
<li><code>[:m]</code>: 相当于<code>[0:m]</code></li>
</ul>
</li>
</ul>`,r:{minutes:1.79,words:536},y:"a",t:"7.2 切片"},["/note/golang/open-source-books/the-way-to-go/07/07.2","/note/golang/open-source-books/the-way-to-go/07/07.2.md"]],["v-358b999d","/note/golang/open-source-books/the-way-to-go/07/07.3.html",{e:`<h1> 7.3 for-range</h1>
<p>可用<code>for-range</code>遍历切片和数组</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> index<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> slice <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.3,words:89},y:"a",t:"7.3 for-range"},["/note/golang/open-source-books/the-way-to-go/07/07.3","/note/golang/open-source-books/the-way-to-go/07/07.3.md"]],["v-3740723c","/note/golang/open-source-books/the-way-to-go/07/07.4.html",{e:`<h1> 7.4 切片重组 reslice</h1>
<p>改变切片长度的过程称为<strong>切片重组</strong>。</p>
<p>扩展切片</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.17,words:51},y:"a",t:"7.4 切片重组 reslice"},["/note/golang/open-source-books/the-way-to-go/07/07.4","/note/golang/open-source-books/the-way-to-go/07/07.4.md"]],["v-38f54adb","/note/golang/open-source-books/the-way-to-go/07/07.5.html",{e:`<h1> 7.5 切片的复制和追加</h1>
<h2> 追加</h2>
<p><code>func append(s []T, x ...T) []T</code>  将0个或多个元素追加到切片后，返回新的切片：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>
s <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

s2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">}</span>
s <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> s2<span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.33,words:100},y:"a",t:"7.5 切片的复制和追加"},["/note/golang/open-source-books/the-way-to-go/07/07.5","/note/golang/open-source-books/the-way-to-go/07/07.5.md"]],["v-3aaa237a","/note/golang/open-source-books/the-way-to-go/07/07.6.html",{e:`<h1> 7.6  字符串、数组和切片的应用</h1>
<h2> 7.6.1 从字符串生成字节切片</h2>
<ul>
<li>
<p>类型转换：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>byteslice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p><code>copy()</code>：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token function">copy</span><span class="token punctuation">(</span>dst <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> src <span class="token builtin">string</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:1.96,words:587},y:"a",t:"7.6  字符串、数组和切片的应用"},["/note/golang/open-source-books/the-way-to-go/07/07.6","/note/golang/open-source-books/the-way-to-go/07/07.6.md"]],["v-2d32ef60","/note/golang/open-source-books/the-way-to-go/08/08.0.html",{e:`<h1> 8.0 Map</h1>
`,r:{minutes:.01,words:2},y:"a",t:"8.0 Map"},["/note/golang/open-source-books/the-way-to-go/08/08.0","/note/golang/open-source-books/the-way-to-go/08/08.0.md"]],["v-2ee7c7ff","/note/golang/open-source-books/the-way-to-go/08/08.1.html",{e:`<h1> 8.1 Map 声明、初始化和make</h1>
<p>Map ：数据结构，由元素对(pair, key : value) 组成的无序集合。</p>
<h2> 8.1.1 概念</h2>
<ul>
<li>
<p>声明：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> m <span class="token keyword">map</span><span class="token punctuation">[</span>keytype<span class="token punctuation">]</span>valuetype
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> m <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>key: 可以是使用<code>==</code>,<code>!=</code>操作符比较的类型</p>
<ul>
<li>数组和切片不能作为key</li>
<li>结构体可以提供<code>key()</code>和<code>hash()</code>方法来作为key</li>
</ul>
</li>
<li>
<p>value: 任意类型</p>
</li>
<li>
<p>map 的默认零值为：<code>nil</code></p>
</li>
<li>
<p>初始化：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>m <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span>keytype<span class="token punctuation">]</span>valuetype<span class="token punctuation">{</span>k1<span class="token punctuation">:</span> v1<span class="token punctuation">,</span> k2<span class="token punctuation">:</span> v2<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>make: 使用<code>make()</code> 来初始化map</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span>key_type<span class="token punctuation">]</span>val_type<span class="token punctuation">)</span>
<span class="token comment">// with capacity</span>
<span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span>key_type<span class="token punctuation">]</span>val_type<span class="token punctuation">,</span> capacity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.72,words:215},y:"a",t:"8.1 Map 声明、初始化和make"},["/note/golang/open-source-books/the-way-to-go/08/08.1","/note/golang/open-source-books/the-way-to-go/08/08.1.md"]],["v-309ca09e","/note/golang/open-source-books/the-way-to-go/08/08.2.html",{e:`<h1> 8.2 测试键值是否存在和删除元素</h1>
<h2> 测试键值是否存在</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>value<span class="token punctuation">,</span> isPresent <span class="token operator">=</span> <span class="token keyword">map</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.25,words:76},y:"a",t:"8.2 测试键值是否存在和删除元素"},["/note/golang/open-source-books/the-way-to-go/08/08.2","/note/golang/open-source-books/the-way-to-go/08/08.2.md"]],["v-3251793d","/note/golang/open-source-books/the-way-to-go/08/08.3.html",{e:`<h1> 8.3 for range</h1>
<p><code>for-range</code> 遍历map:</p>
<ul>
<li>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> key<span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> m <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> key <span class="token operator">:=</span> <span class="token keyword">range</span> m <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> m <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.1,words:31},y:"a",t:"8.3 for range"},["/note/golang/open-source-books/the-way-to-go/08/08.3","/note/golang/open-source-books/the-way-to-go/08/08.3.md"]],["v-340651dc","/note/golang/open-source-books/the-way-to-go/08/08.4.html",{e:`<h1> 8.4 map 类型的切片</h1>
<p>创建map类型的切片，需要使用两次<code>make</code>进行初始化：</p>
<ul>
<li>
<p>初始化切片:</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>maps <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span>key_type<span class="token punctuation">]</span>val_type<span class="token punctuation">,</span> length<span class="token punctuation">,</span> capacity<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
<li>
<p>初始化每个元素：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> index <span class="token operator">:=</span> <span class="token keyword">range</span> maps <span class="token punctuation">{</span>
    maps<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span>key_type<span class="token punctuation">]</span>val_type<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>访问元素：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>maps<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.22,words:66},y:"a",t:"8.4 map 类型的切片"},["/note/golang/open-source-books/the-way-to-go/08/08.4","/note/golang/open-source-books/the-way-to-go/08/08.4.md"]],["v-35bb2a7b","/note/golang/open-source-books/the-way-to-go/08/08.5.html",{e:`<h1> 8.5 map 的排序</h1>
<p>map 是<strong>无序</strong>的。</p>
<p>若需按顺序访问可以：</p>
<ul>
<li>将key进行排序</li>
<li>按照排序后的key获取val</li>
</ul>
<p>需要有序列表的形式，可以使用结构体切片：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> s <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    key <span class="token builtin">string</span>
    val <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> ss <span class="token punctuation">[</span><span class="token punctuation">]</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.21,words:64},y:"a",t:"8.5 map 的排序"},["/note/golang/open-source-books/the-way-to-go/08/08.5","/note/golang/open-source-books/the-way-to-go/08/08.5.md"]],["v-3770031a","/note/golang/open-source-books/the-way-to-go/08/08.6.html",{e:`<h1> 8.6 k，v 对调</h1>
<p>若map的val唯一，且k，v类型相同，可以进行简单对调</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token string">"A"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>
m1 <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> m <span class="token punctuation">{</span>
    m1<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> k
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.17,words:50},y:"a",t:"8.6 k，v 对调"},["/note/golang/open-source-books/the-way-to-go/08/08.6","/note/golang/open-source-books/the-way-to-go/08/08.6.md"]],["v-29f8cf00","/note/golang/open-source-books/the-way-to-go/09/09.0.html",{e:`<h1> 9.0 包 package</h1>
`,r:{minutes:.01,words:3},y:"a",t:"9.0 包 package"},["/note/golang/open-source-books/the-way-to-go/09/09.0","/note/golang/open-source-books/the-way-to-go/09/09.0.md"]],["v-2bada79f","/note/golang/open-source-books/the-way-to-go/09/09.1.html",{e:`<h1> 9.1 标准库</h1>
<p>详见 <a href="https://pkg.go.dev/std" target="_blank" rel="noopener noreferrer">标准库</a></p>
`,r:{minutes:.04,words:11},y:"a",t:"9.1 标准库"},["/note/golang/open-source-books/the-way-to-go/09/09.1","/note/golang/open-source-books/the-way-to-go/09/09.1.md"]],["v-3a0bf280","/note/golang/open-source-books/the-way-to-go/10/10.0.html",{e:`<h1> 10.0 结构 (struct) 与方法 (method)</h1>
`,r:{minutes:.03,words:8},y:"a",t:"10.0 结构 (struct) 与方法 (method)"},["/note/golang/open-source-books/the-way-to-go/10/10.0","/note/golang/open-source-books/the-way-to-go/10/10.0.md"]],["v-36a24142","/note/golang/open-source-books/the-way-to-go/10/10.1.html",{e:`<h1> 10.1 结构体</h1>
<ul>
<li>
<p><strong>定义</strong>：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> identifier <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    field1 type1
    field2 type2
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><code>new()</code>：为结构体变量分配内存并返回指针</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> t <span class="token operator">*</span>T
t <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结构体变量中的字段值为对应类型的零值</p>
</li>
<li>
<p><strong>声明</strong>：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> t T
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>声明也会为变量分配内存，结构体变量中的字段值为对应类型的零值</p>
</li>
<li>
<p><strong>初始化</strong>：可以使用字面量初始化
例如：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Interval <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    start <span class="token builtin">int</span>
    end   <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按顺序给出值：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>intr <span class="token operator">:=</span> Interval<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>指定字段</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>intr <span class="token operator">:=</span> Interval<span class="token punctuation">{</span>end<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span> start<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>忽略字段</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>intr <span class="token operator">:=</span> Interval<span class="token punctuation">{</span>end<span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:1.97,words:591},y:"a",t:"10.1 结构体"},["/note/golang/open-source-books/the-way-to-go/10/10.1","/note/golang/open-source-books/the-way-to-go/10/10.1.md"]],["v-33389004","/note/golang/open-source-books/the-way-to-go/10/10.2.html",{e:`<h1> 10.2 使用工厂方法创建结构体实例</h1>
<h2> 10.2.1 结构体工厂</h2>
<p>工厂函数名一般以<code>New/new</code>开头。</p>
<p>假设定义<code>File</code>:</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> File <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    fd <span class="token builtin">int</span> 		<span class="token comment">// 文件描述符</span>
    name <span class="token builtin">string</span> <span class="token comment">// 文件名 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.4,words:121},y:"a",t:"10.2 使用工厂方法创建结构体实例"},["/note/golang/open-source-books/the-way-to-go/10/10.2","/note/golang/open-source-books/the-way-to-go/10/10.2.md"]],["v-2fcedec6","/note/golang/open-source-books/the-way-to-go/10/10.3.html",{e:`<h1> 10.3 使用自定义包中的结构体</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> structPack

<span class="token keyword">type</span> ExpStruct <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Mi1 <span class="token builtin">int</span>
    Mf1 <span class="token builtin">float32</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.16,words:47},y:"a",t:"10.3 使用自定义包中的结构体"},["/note/golang/open-source-books/the-way-to-go/10/10.3","/note/golang/open-source-books/the-way-to-go/10/10.3.md"]],["v-2c652d88","/note/golang/open-source-books/the-way-to-go/10/10.4.html",{e:`<h1> 10.4 带标签的结构体</h1>
<p><strong>标签(tag)</strong>： 附属于字段的字符串，只能通过<code>reflect</code>包访问。</p>
<p>​	<a href="path/10_4_struct_tag.go">10_4_struct_tag.go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> TagType <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	f1 <span class="token builtin">int</span>  <span class="token string">"Field01"</span>
	f2 <span class="token builtin">bool</span> <span class="token string">"Field02"</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">structag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tt <span class="token operator">:=</span> TagType<span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token function">refTag</span><span class="token punctuation">(</span>tt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token function">refTag</span><span class="token punctuation">(</span>tt<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">refTag</span><span class="token punctuation">(</span>tt TagType<span class="token punctuation">,</span> i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	ttType <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>tt<span class="token punctuation">)</span>
	f <span class="token operator">:=</span> ttType<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>Tag<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.22,words:66},y:"a",t:"10.4 带标签的结构体"},["/note/golang/open-source-books/the-way-to-go/10/10.4","/note/golang/open-source-books/the-way-to-go/10/10.4.md"]],["v-28fb7c4a","/note/golang/open-source-books/the-way-to-go/10/10.5.html",{e:`<h1> 10.5 匿名字段和内嵌结构体</h1>
<h2> 10.5.1 定义</h2>
<ul>
<li><strong>匿名字段</strong>：只有类型的字段，字段名就是类型名</li>
<li><strong>内嵌结构体</strong>：匿名字段类型是结构体</li>
</ul>
<h2> 10.5.2 内嵌结构体</h2>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> A <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    ax<span class="token punctuation">,</span> ay <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> B <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    A
    bx<span class="token punctuation">,</span> by <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.51,words:153},y:"a",t:"10.5 匿名字段和内嵌结构体"},["/note/golang/open-source-books/the-way-to-go/10/10.5","/note/golang/open-source-books/the-way-to-go/10/10.5.md"]],["v-2591cb0c","/note/golang/open-source-books/the-way-to-go/10/10.6.html",{e:`<h1> 10.6 方法</h1>
<h2> 10.6.1 定义</h2>
<p><strong>方法</strong>：作用在**接受者(receiver)**上的函数，接收者是某种类型的变量。</p>
<p><strong>接收者类型</strong>：可以是任何类型，除了</p>
<ul>
<li>接口类型</li>
<li>指针类型（可以是其他类型的指针）</li>
</ul>
<p><strong>方法集(method set)</strong>：类型 <code>T</code>/ <code>*T</code> 上所有方法的合集</p>
<p><strong>定义</strong>：</p>`,r:{minutes:2.04,words:611},y:"a",t:"10.6 方法"},["/note/golang/open-source-books/the-way-to-go/10/10.6","/note/golang/open-source-books/the-way-to-go/10/10.6.md"]],["v-40803340","/note/golang/open-source-books/the-way-to-go/11/11.0.html",{e:`<h1> 11.0 接口 (interface)与反射(reflection)</h1>
`,r:{minutes:.03,words:8},y:"a",t:"11.0 接口 (interface)与反射(reflection)"},["/note/golang/open-source-books/the-way-to-go/11/11.0","/note/golang/open-source-books/the-way-to-go/11/11.0.md"]],["v-3d168202","/note/golang/open-source-books/the-way-to-go/11/11.1.html",{e:`<h1> 11.1 接口</h1>
<p>接口定义一组方法，方法不含实现代码。</p>
<p>接口中不能有变量。</p>
<p>定义接口：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Namer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Method1</span><span class="token punctuation">(</span>param_list<span class="token punctuation">)</span> return_type
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.03,words:308},y:"a",t:"11.1 接口"},["/note/golang/open-source-books/the-way-to-go/11/11.1","/note/golang/open-source-books/the-way-to-go/11/11.1.md"]],["v-39acd0c4","/note/golang/open-source-books/the-way-to-go/11/11.2.html",{e:`<h1> 11.2 接口嵌套接口</h1>
<p>一个接口可以包含一个或多个其他的接口，这相当于直接将这些内嵌接口的方法列举在外层接口中一样。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> ReadWrite <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Read</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
    <span class="token function">Write</span><span class="token punctuation">(</span>b Buffer<span class="token punctuation">)</span> <span class="token builtin">bool</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Lock <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> File <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    ReadWrite
    Lock
    <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.25,words:74},y:"a",t:"11.2 接口嵌套接口"},["/note/golang/open-source-books/the-way-to-go/11/11.2","/note/golang/open-source-books/the-way-to-go/11/11.2.md"]],["v-36431f86","/note/golang/open-source-books/the-way-to-go/11/11.3.html",{e:`<h1> 11.3 类型断言：如何检测和转换接口变量的类型</h1>
<p><strong>类型断言</strong>：测试某个时刻，变量<code>varI</code>是否包含类型<code>T</code>的值。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>v <span class="token operator">:=</span> varI<span class="token punctuation">.</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.29,words:86},y:"a",t:"11.3 类型断言：如何检测和转换接口变量的类型"},["/note/golang/open-source-books/the-way-to-go/11/11.3","/note/golang/open-source-books/the-way-to-go/11/11.3.md"]],["v-32d96e48","/note/golang/open-source-books/the-way-to-go/11/11.4.html",{e:`<h1> 11.4 类型判断：type-switch</h1>
<p><code>type-switch</code>用于运行时类型分析，不允许<code>fallthrough</code></p>
<p>例如类型分类函数：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">classifier</span><span class="token punctuation">(</span>items <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> x <span class="token operator">:=</span> <span class="token keyword">range</span> items <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> x<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is a bool\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token keyword">case</span> <span class="token builtin">float64</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is a float64\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int64</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is a int\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token keyword">case</span> <span class="token boolean">nil</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is a nil\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is a string\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Param #%d is unknown\\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:102},y:"a",t:"11.4 类型判断：type-switch"},["/note/golang/open-source-books/the-way-to-go/11/11.4","/note/golang/open-source-books/the-way-to-go/11/11.4.md"]],["v-2f6fbd0a","/note/golang/open-source-books/the-way-to-go/11/11.5.html",{e:`<h1> 11.5 测试一个值是否实现了某个接口</h1>
<p>可以通过类型断言判断是否实现了接口</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Stringer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> sv<span class="token punctuation">,</span> ok <span class="token operator">:=</span> v<span class="token punctuation">.</span><span class="token punctuation">(</span>Stringer<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"v implements String(): %s\\n"</span><span class="token punctuation">,</span> sv<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// note: sv, not v</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.19,words:56},y:"a",t:"11.5 测试一个值是否实现了某个接口"},["/note/golang/open-source-books/the-way-to-go/11/11.5","/note/golang/open-source-books/the-way-to-go/11/11.5.md"]],["v-2c060bcc","/note/golang/open-source-books/the-way-to-go/11/11.6.html",{e:`<h1> 11.6 使用方法集与接口</h1>
<p>在接口上调用方法时，必须有和方法定义时相同的接收者类型或者是可以根据具体类型 <code>P</code> 直接辨识的：</p>
<ul>
<li>指针方法可以通过指针调用</li>
<li>值方法可以通过值调用</li>
<li>接收者是值的方法可以通过指针调用，因为指针会首先被解引用</li>
<li>接收者是指针的方法不可以通过值调用，因为存储在接口中的值没有地址</li>
</ul>
<p>将一个值赋值给一个接口时，编译器会确保所有可能的接口方法都可以在此值上被调用，因此不正确的赋值在编译期就会失败。</p>
<p>Go 语言规范定义了<strong>接口方法集</strong>的调用规则：</p>`,r:{minutes:1.24,words:373},y:"a",t:"11.6 使用方法集与接口"},["/note/golang/open-source-books/the-way-to-go/11/11.6","/note/golang/open-source-books/the-way-to-go/11/11.6.md"]],["v-21c8f812","/note/golang/open-source-books/the-way-to-go/11/11.9.html",{e:`<h1> 11.9 空接口</h1>
<h2> 11.9.1 概念</h2>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>interface{}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>空接口或者最小接口</strong> 不包含任何方法，它对实现不做任何要求</p>
<p>可以给一个空接口类型的变量 <code>var val interface {}</code> 赋任何类型的值。</p>`,r:{minutes:1.34,words:401},y:"a",t:"11.9 空接口"},["/note/golang/open-source-books/the-way-to-go/11/11.9","/note/golang/open-source-books/the-way-to-go/11/11.9.md"]],["v-49ff0382","/note/golang/open-source-books/the-way-to-go/13/13.1.html",{e:`<h1> 13.1 错误处理</h1>
<p>Go 有预先定义的 <code>error</code> 接口类型</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.36,words:109},y:"a",t:"13.1 错误处理"},["/note/golang/open-source-books/the-way-to-go/13/13.1","/note/golang/open-source-books/the-way-to-go/13/13.1.md"]],["v-46955244","/note/golang/open-source-books/the-way-to-go/13/13.2.html",{e:`<h1> 13.2 运行时异常和 panic</h1>
<p>当触发运行时错误时，会触发 panic，抛出<code>runtime.Error</code>接口型的值。</p>
<p><code>panic()</code>可以直接从代码初始化，接受任意类型的参数（通常为字符串），在程序死亡时打印出来，Go 运行时负责终止程序并给出调试信息。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">"fmt"</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Starting the program"</span><span class="token punctuation">)</span>
	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"A severe error occurred: stopping the program!"</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Ending the program"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.52,words:157},y:"a",t:"13.2 运行时异常和 panic"},["/note/golang/open-source-books/the-way-to-go/13/13.2","/note/golang/open-source-books/the-way-to-go/13/13.2.md"]],["v-432ba106","/note/golang/open-source-books/the-way-to-go/13/13.3.html",{e:`<h1> 13.3 从 panic 中恢复(recover)</h1>
<p><code>recover()</code> 用于从错误场景中恢复，让程序从 Panicking 中获得控制权，停止终止过程恢复正常执行。</p>
<p><code>recover()</code>只能在<code>defer</code>修饰的函数中使用，用于取得<code>panic()</code>调用中传递的错误值；若正常执行，<code>recover()</code>返回<code>nil</code>。</p>
<p><strong><code>panic()</code> 会导致栈被展开知道<code>defer</code> 修饰的<code>recover()</code>被调用或者程序终止</strong>。</p>`,r:{minutes:.5,words:149},y:"a",t:"13.3 从 panic 中恢复(recover)"},["/note/golang/open-source-books/the-way-to-go/13/13.3","/note/golang/open-source-books/the-way-to-go/13/13.3.md"]],["v-3fc1efc8","/note/golang/open-source-books/the-way-to-go/13/13.4.html",{e:`<h1> 13.4 自定义包中的错误处理和 panicking</h1>
<p>自定义包实现者应该遵守的最佳实践：</p>
<ol>
<li>
<p><em>在包内部，总是应该从 panic 中 recover</em>：不允许显式的超出包范围的 <code>panic()</code></p>
</li>
<li>
<p><em>向包的调用者返回错误值（而不是 panic）。</em></p>
</li>
</ol>
`,r:{minutes:.24,words:71},y:"a",t:"13.4 自定义包中的错误处理和 panicking"},["/note/golang/open-source-books/the-way-to-go/13/13.4","/note/golang/open-source-books/the-way-to-go/13/13.4.md"]],["v-3c583e8a","/note/golang/open-source-books/the-way-to-go/13/13.5.html",{e:`<h1> 13.5 使用闭包进行错误处理</h1>
<p>当所有函数都是同一种签名时，可以使用闭包来进行错误处理。</p>
<p>假设函数：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>fType1 <span class="token operator">=</span> <span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>a type1<span class="token punctuation">,</span> b type2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.64,words:192},y:"a",t:"13.5 使用闭包进行错误处理"},["/note/golang/open-source-books/the-way-to-go/13/13.5","/note/golang/open-source-books/the-way-to-go/13/13.5.md"]],["v-38ee8d4c","/note/golang/open-source-books/the-way-to-go/13/13.6.html",{e:`<h1> 13.6 启动外部命令和程序</h1>
<p>使用下列方式可以启动外部程序：</p>
<ul>
<li><code>os</code>包</li>
</ul>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">StartProcess</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span> argv <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> attr <span class="token operator">*</span>ProcAttr<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>Process<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.41,words:124},y:"a",t:"13.6 启动外部命令和程序"},["/note/golang/open-source-books/the-way-to-go/13/13.6","/note/golang/open-source-books/the-way-to-go/13/13.6.md"]],["v-3584dc0e","/note/golang/open-source-books/the-way-to-go/13/13.7.html",{e:`<h1> 13.7  单元测试和基准测试</h1>
<p>测试文件名满足<code>*_test.go</code>的形式，如：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>helper.go
helper_test.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.65,words:194},y:"a",t:"13.7  单元测试和基准测试"},["/note/golang/open-source-books/the-way-to-go/13/13.7","/note/golang/open-source-books/the-way-to-go/13/13.7.md"]],["v-50734442","/note/golang/open-source-books/the-way-to-go/14/14.1.html",{e:`<h1> 14.1 协程</h1>
<p><strong>不要通过共享内存来通信，而通过通信来共享内存。</strong></p>
<p><strong>不要使用全局变量或者共享内存，它们会给你的代码在并发运算的时候带来危险</strong></p>
<p>协程详解见<a href="/note/golang/concurrency/GMPModel.html" target="blank">GMP模型</a></p>
`,r:{minutes:.22,words:67},y:"a",t:"14.1 协程"},["/note/golang/open-source-books/the-way-to-go/14/14.1","/note/golang/open-source-books/the-way-to-go/14/14.1.md"]],["v-24a213a1","/note/golang/open-source-books/the-way-to-go/14/14.12.html",{e:`<h1> 14.12 链式协程</h1>
<p><a href="path/14_12_chaning,go">14_12_chaning,go</a></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> chapter_14

<span class="token keyword">import</span> <span class="token string">"fmt"</span>

<span class="token keyword">const</span> N <span class="token operator">=</span> <span class="token number">100000</span>

<span class="token keyword">func</span> <span class="token function">mainChanning</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	leftmost <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> left<span class="token punctuation">,</span> right <span class="token keyword">chan</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> leftmost
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		left<span class="token punctuation">,</span> right <span class="token operator">=</span> right<span class="token punctuation">,</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token function">f</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	right <span class="token operator">&lt;-</span> <span class="token number">0</span>
	x <span class="token operator">:=</span> <span class="token operator">&lt;-</span>leftmost
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// 100000</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right <span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	left <span class="token operator">&lt;-</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token operator">&lt;-</span>right
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.43,words:128},y:"a",t:"14.12 链式协程"},["/note/golang/open-source-books/the-way-to-go/14/14.12","/note/golang/open-source-books/the-way-to-go/14/14.12.md"]],["v-2656ec40","/note/golang/open-source-books/the-way-to-go/14/14.13.html",{e:`<h1> 14.13 在多核心上并行计算</h1>
<p>假设有 <code>NCPU</code> 个 CPU 核心，想把计算量分成 <code>NCPU</code> 个部分，每一个部分都和其他部分并行运行。</p>
<p>这可以通过以下代码所示的方式完成</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">DoAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    sem <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> NCPU<span class="token punctuation">)</span> <span class="token comment">// Buffering optional but sensible</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NCPU<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">DoPart</span><span class="token punctuation">(</span>sem<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Drain the channel sem, waiting for NCPU tasks to complete</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NCPU<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token operator">&lt;-</span>sem <span class="token comment">// wait for one task to complete</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// All done.</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">DoPart</span><span class="token punctuation">(</span>sem <span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do the part of the computation</span>
    sem <span class="token operator">&lt;-</span><span class="token number">1</span> <span class="token comment">// signal that this piece is done</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    runtime<span class="token punctuation">.</span><span class="token function">GOMAXPROCS</span><span class="token punctuation">(</span>NCPU<span class="token punctuation">)</span> <span class="token comment">// runtime.GOMAXPROCS = NCPU</span>
    <span class="token function">DoAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.85,words:254},y:"a",t:"14.13 在多核心上并行计算"},["/note/golang/open-source-books/the-way-to-go/14/14.13","/note/golang/open-source-books/the-way-to-go/14/14.13.md"]],["v-280bc4df","/note/golang/open-source-books/the-way-to-go/14/14.14.html",{e:`<h1> 14.14 并行化大量数据的计算</h1>
<p>假设需要处理一些数量巨大且互不相关的数据项，它们从一个 <code>in</code> 通道被传递进来，当我们处理完以后又要将它们放入另一个 <code>out</code> 通道，就像一个工厂流水线一样。处理每个数据项也可能包含许多步骤：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Preprocess（预处理） / StepA（步骤A） / StepB（步骤B） / ... / PostProcess（后处理）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:1.32,words:395},y:"a",t:"14.14 并行化大量数据的计算"},["/note/golang/open-source-books/the-way-to-go/14/14.14","/note/golang/open-source-books/the-way-to-go/14/14.14.md"]],["v-2b75761d","/note/golang/open-source-books/the-way-to-go/14/14.16.html",{e:`<h1> 14.16 基准测试</h1>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> chapter_14

<span class="token keyword">func</span> <span class="token function">channelSync</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
			ch <span class="token operator">&lt;-</span> i
		<span class="token punctuation">}</span>
		<span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token keyword">range</span> ch <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">channelBuffered</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span>
	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
			ch <span class="token operator">&lt;-</span> i
		<span class="token punctuation">}</span>
		<span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token keyword">range</span> ch <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.31,words:92},y:"a",t:"14.16 基准测试"},["/note/golang/open-source-books/the-way-to-go/14/14.16","/note/golang/open-source-books/the-way-to-go/14/14.16.md"]],["v-2d2a4ebc","/note/golang/open-source-books/the-way-to-go/14/14.17.html",{e:`<h1> 14.17 通过通道并发访问对象</h1>
<p>为了保护对象被并发访问修改，我们可以使用协程在后台顺序执行匿名函数来替代使用同步互斥锁。</p>
<p>在下面的程序中我们有一个类型 <code>Person</code> 中包含一个字段 <code>chF</code> ，这是一个用于存放匿名函数的通道。</p>
<p>这个结构在构造函数 <code>NewPerson()</code> 中初始化的同时会启动一个后台协程 <code>backend()</code>。<code>backend()</code> 方法会在一个无限循环中执行 <code>chF</code> 中放置的所有函数，有效地将它们序列化从而提供了安全的并发访问。更改和读取 <code>salary</code> 的方法会通过将一个匿名函数写入 <code>chF</code> 通道中，然后让 <code>backend()</code> 按顺序执行以达到其目的。需注意的是 <code>Salary()</code> 方法创建的闭包函数是如何将 <code>fChan</code> 通道包含在其中的。</p>`,r:{minutes:1.34,words:403},y:"a",t:"14.17 通过通道并发访问对象"},["/note/golang/open-source-books/the-way-to-go/14/14.17","/note/golang/open-source-books/the-way-to-go/14/14.17.md"]],["v-4d099304","/note/golang/open-source-books/the-way-to-go/14/14.2.html",{e:`<h1> 14.2 Channel</h1>
<h2> 14.2.1 概念</h2>
<p>通道(Channel)：</p>
<ul>
<li>负责协程间的通讯；</li>
</ul>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/image-20230512232915346.png" alt="image-20230512232915346" tabindex="0" loading="lazy"><figcaption>image-20230512232915346</figcaption></figure>`,r:{minutes:4.01,words:1202},y:"a",t:"14.2 Channel"},["/note/golang/open-source-books/the-way-to-go/14/14.2","/note/golang/open-source-books/the-way-to-go/14/14.2.md"]],["v-499fe1c6","/note/golang/open-source-books/the-way-to-go/14/14.3.html",{e:`<h1> 14.3 关闭通道</h1>
<p>通道可以被<code>close()</code>显式关闭，且只有发送者需要关闭通道。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token function">close</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.3,words:90},y:"a",t:"14.3 关闭通道"},["/note/golang/open-source-books/the-way-to-go/14/14.3","/note/golang/open-source-books/the-way-to-go/14/14.3.md"]],["v-46363088","/note/golang/open-source-books/the-way-to-go/14/14.4.html",{e:`<h1> 14.4 select</h1>
<p><code>select</code>：选择处理列出的多个通道情况中的一个</p>
<ul>
<li>若都被阻塞，则会等到其中一个可以处理</li>
<li>若有多个可以处理，随机选择一个</li>
<li>若没有通道可操作并且存在<code>default</code>，则执行<code>default</code></li>
</ul>
<p>在case中执行<code>return</code>或<code>break</code>则会退出select</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">select</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> u <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch1<span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token keyword">case</span> v <span class="token operator">:=</span> <span class="token operator">&lt;-</span> ch2<span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:181},y:"a",t:"14.4 select"},["/note/golang/open-source-books/the-way-to-go/14/14.4","/note/golang/open-source-books/the-way-to-go/14/14.4.md"]],["v-42cc7f4a","/note/golang/open-source-books/the-way-to-go/14/14.5.html",{e:`<h1> 14.5 通道、超时和计时器(Ticker)</h1>
<h2> 14.5.1 计时器</h2>
<p><code>time.Ticker</code>, 可以指定时间间隔重复向通道<code>c</code>发送时间值：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Ticker <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    C <span class="token operator">&lt;-</span><span class="token keyword">chan</span> Time <span class="token comment">// the channel on which the ticks are delivered.</span>
    <span class="token comment">// contains filtered or unexported fields</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.62,words:187},y:"a",t:"14.5 通道、超时和计时器(Ticker)"},["/note/golang/open-source-books/the-way-to-go/14/14.5","/note/golang/open-source-books/the-way-to-go/14/14.5.md"]],["v-3f62ce0c","/note/golang/open-source-books/the-way-to-go/14/14.6.html",{e:`<h1> 14.6 协程和恢复(recover)</h1>
<p><strong>恢复是在 panicking 的协程内部的：不能被另外一个协程恢复</strong></p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">server</span><span class="token punctuation">(</span>workChan <span class="token operator">&lt;-</span><span class="token keyword">chan</span> <span class="token operator">*</span>Work<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> work <span class="token operator">:=</span> <span class="token keyword">range</span> workChan <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">safelyDo</span><span class="token punctuation">(</span>work<span class="token punctuation">)</span>   <span class="token comment">// start the goroutine for that work</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">safelyDo</span><span class="token punctuation">(</span>work <span class="token operator">*</span>Work<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">"Work failed with %s in %v"</span><span class="token punctuation">,</span> err<span class="token punctuation">,</span> work<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">do</span><span class="token punctuation">(</span>work<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:102},y:"a",t:"14.6 协程和恢复(recover)"},["/note/golang/open-source-books/the-way-to-go/14/14.6","/note/golang/open-source-books/the-way-to-go/14/14.6.md"]],["v-3bf91cce","/note/golang/open-source-books/the-way-to-go/14/14.7.html",{e:`<h1> 14.7 互斥锁和通道</h1>
<p>普遍的经验法则：</p>
<ul>
<li>
<p>使用锁的情景：</p>
<ul>
<li>访问共享数据结构中的缓存信息</li>
<li>保存应用程序上下文和状态信息数据</li>
</ul>
</li>
<li>
<p>使用通道的情景：</p>
<ul>
<li>与异步操作的结果进行交互</li>
<li>分发任务</li>
<li>传递数据所有权</li>
</ul>
</li>
</ul>
<p>当你发现你的锁使用规则变得很复杂时，可以反省使用通道会不会使问题变得简单些。</p>
`,r:{minutes:.39,words:116},y:"a",t:"14.7 互斥锁和通道"},["/note/golang/open-source-books/the-way-to-go/14/14.7","/note/golang/open-source-books/the-way-to-go/14/14.7.md"]],["v-388f6b90","/note/golang/open-source-books/the-way-to-go/14/14.8.html",{e:`<h1> 14.8 惰性生成器</h1>
<h2> 14.8.1 生成器</h2>
<p>指的是被调用时返回序列中的下一个值的函数：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    <span class="token function">generateInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0</span>
    <span class="token function">generateInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">1</span>
    <span class="token function">generateInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">2</span>
    <span class="token operator">...</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.58,words:473},y:"a",t:"14.8 惰性生成器"},["/note/golang/open-source-books/the-way-to-go/14/14.8","/note/golang/open-source-books/the-way-to-go/14/14.8.md"]],["v-3525ba52","/note/golang/open-source-books/the-way-to-go/14/14.9.html",{e:`<h1> 14.9 Future 模式</h1>
<p><strong>future模式</strong>： 在使用某值之前需要先对其进行计算。</p>
<p>Futures 模式通过闭包和通道可以很容易实现，类似于生成器，不同地方在于 Futures 需要返回一个值。</p>
<p>假设我们有一个矩阵类型，我们需要计算两个矩阵 A 和 B 乘积的逆，首先我们通过函数 <code>Inverse(M)</code> 分别对其进行求逆运算，再将结果相乘。如下函数 <code>InverseProduct()</code> 实现了如上过程：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">InverseProduct</span><span class="token punctuation">(</span>a Matrix<span class="token punctuation">,</span> b Matrix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a_inv <span class="token operator">:=</span> <span class="token function">Inverse</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    b_inv <span class="token operator">:=</span> <span class="token function">Inverse</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">Product</span><span class="token punctuation">(</span>a_inv<span class="token punctuation">,</span> b_inv<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.11,words:333},y:"a",t:"14.9 Future 模式"},["/note/golang/open-source-books/the-way-to-go/14/14.9","/note/golang/open-source-books/the-way-to-go/14/14.9.md"]],["v-4ce10d7f","/note/vue/vue-3/fundamentals/01-fundamentals/00.start.html",{d:16841952e5,l:"2023年5月16日",c:["Note","Frontend","Vue"],g:["Tutorial"],e:`<h2> 1. 简介</h2>
<p>Vue( /vjuː/), 是一款用于构建用户界面的 JavaScript 框架, 提供了一套声明式的、组件化的编程模型。</p>
<p>Vue 的两个核心功能：</p>
<ul>
<li><strong>声明式渲染</strong>：Vue 基于标准 HTML 拓展了一套模板语法，使得我们可以声明式地描述最终输出的 HTML 和 JavaScript 状态之间的关系。</li>
<li><strong>响应性</strong>：Vue 会自动跟踪 JavaScript 状态并在其发生变化时响应式地更新 DOM。</li>
</ul>
<h3> 1.1 单文件组件</h3>`,r:{minutes:2.94,words:881},y:"a",t:"Vue-3 Note"},["/note/vue/vue-3/fundamentals/01-fundamentals/00.start","/note/vue/vue-3/fundamentals/01-fundamentals/00.start.md"]],["v-30f72877","/note/vue/vue-3/fundamentals/01-fundamentals/01.1.create_app.html",{e:`<h1> 3. 创建一个 Vue 应用</h1>
<h2> 3.1 应用实例</h2>
<p>每个 Vue 应用都是通过 <a href="https://cn.vuejs.org/api/application.html#createapp" target="_blank" rel="noopener noreferrer"><code>createApp</code></a> 函数创建一个新的 <strong>应用实例</strong>：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* 根组件选项 */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.31,words:692},y:"a",t:"3. 创建一个 Vue 应用"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.1.create_app","/note/vue/vue-3/fundamentals/01-fundamentals/01.1.create_app.md"]],["v-519865c6","/note/vue/vue-3/fundamentals/01-fundamentals/01.10.lifecycle_hooks.html",{e:`<h1> 12. 生命周期钩子</h1>
<p>每个 Vue 组件实例在创建时都需要经历一系列的初始化步骤，在此过程中，它会运行被称为生命周期钩子的函数，让开发者有机会在特定阶段运行自己的代码。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/lifecycle.16e4c08e.png" alt="组件生命周期图示" tabindex="0" loading="lazy"><figcaption>组件生命周期图示</figcaption></figure>
<h2> 12.1 注册周期钩子</h2>`,r:{minutes:1.19,words:356},y:"a",t:"12. 生命周期钩子"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.10.lifecycle_hooks","/note/vue/vue-3/fundamentals/01-fundamentals/01.10.lifecycle_hooks.md"]],["v-424c459b","/note/vue/vue-3/fundamentals/01-fundamentals/01.11.watchers.html",{e:`<h1> 13. 侦听器</h1>
<h2> 13.1 基本示例</h2>
<p>计算属性允许声明性地计算衍生值。</p>
<p>然而在有些情况下需要在状态变化时执行一些“副作用”：例如更改 DOM，或是根据异步操作的结果去修改另一处的状态。</p>
<p>在组合式 API 中，可以使用 <a href="https://cn.vuejs.org/api/reactivity-core.html#watch" target="_blank" rel="noopener noreferrer"><code>watch</code> 函数</a>在每次响应式状态发生变化时触发回调函数：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> watch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>

<span class="token keyword">const</span> question <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">'Questions usually contain a question mark. ;-)'</span><span class="token punctuation">)</span>

<span class="token comment">// 可以直接侦听一个 ref</span>
<span class="token function">watch</span><span class="token punctuation">(</span>question<span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">newQuestion<span class="token punctuation">,</span> oldQuestion</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newQuestion<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    answer<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'Thinking...'</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://yesno.wtf/api'</span><span class="token punctuation">)</span>
      answer<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>answer
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      answer<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'Error! Could not reach the API. '</span> <span class="token operator">+</span> error
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    Ask a yes/no question:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>question<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ answer }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.1,words:1831},y:"a",t:"13. 侦听器"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.11.watchers","/note/vue/vue-3/fundamentals/01-fundamentals/01.11.watchers.md"]],["v-21067a7a","/note/vue/vue-3/fundamentals/01-fundamentals/01.12.template_refs.html",{e:`<h1> 14. 模板引用</h1>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:2.96,words:889},y:"a",t:"14. 模板引用"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.12.template_refs","/note/vue/vue-3/fundamentals/01-fundamentals/01.12.template_refs.md"]],["v-224593cd","/note/vue/vue-3/fundamentals/01-fundamentals/01.13.component_basics.html",{e:`<h1> 15. 组件基础</h1>
<p>组件允许我们将 UI 划分为独立的、可重用的部分，并且可以对每个部分进行单独的思考。在实际应用中，组件常常被组织成层层嵌套的树状结构：</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/components.7fbb3771.png" alt="组件树" tabindex="0" loading="lazy"><figcaption>组件树</figcaption></figure>
<h2> 15.1 定义一个组件</h2>
<p>当使用构建步骤时，我们一般会将 Vue 组件定义在一个单独的 <code>.vue</code> 文件中，这被叫做<a href="https://cn.vuejs.org/guide/scaling-up/sfc.html" target="_blank" rel="noopener noreferrer">单文件组件</a> (简称 SFC)：</p>`,r:{minutes:7.43,words:2229},y:"a",t:"15. 组件基础"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.13.component_basics","/note/vue/vue-3/fundamentals/01-fundamentals/01.13.component_basics.md"]],["v-37c3b518","/note/vue/vue-3/fundamentals/01-fundamentals/01.2.template_syntax.html",{e:`<h1> 4. 模板语法</h1>
<p>Vue 使用一种基于 HTML 的模板语法，可以被符合规范的浏览器和 HTML 解析器解析。</p>
<p>底层机制中，Vue 会将模板编译成高度优化的 JavaScript 代码。</p>
<p>结合响应式系统，当应用状态变更时，Vue 能够智能地推导出需要重新渲染的组件的最少数量，并应用最少的 DOM 操作。</p>
<h2> 4.1 文本插值</h2>
<p>使用“Mustache”语法 (双大括号)：</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>Message: {{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:4.54,words:1362},y:"a",t:"4. 模板语法"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.2.template_syntax","/note/vue/vue-3/fundamentals/01-fundamentals/01.2.template_syntax.md"]],["v-cff5dd62","/note/vue/vue-3/fundamentals/01-fundamentals/01.3.reactivity_fundamental.html",{e:`<h1> 5. 响应式基础</h1>
<h2> 5.1 声明响应式状态</h2>
<p>使用 <a href="https://cn.vuejs.org/api/reactivity-core.html#reactive" target="_blank" rel="noopener noreferrer"><code>reactive()</code></a> 函数创建一个响应式对象或数组：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>
<span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.3,words:1890},y:"a",t:"5. 响应式基础"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.3.reactivity_fundamental","/note/vue/vue-3/fundamentals/01-fundamentals/01.3.reactivity_fundamental.md"]],["v-7a32e59a","/note/vue/vue-3/fundamentals/01-fundamentals/01.4.computed_props.html",{e:`<h1> 6. 计算属性</h1>
<h2> 6.1 示例</h2>
<p>如果在模板中写太多逻辑，会让模板变得臃肿，难以维护。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> author <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Doe'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">books</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">'Vue 2 - Advanced Guide'</span><span class="token punctuation">,</span>
    <span class="token string">'Vue 3 - Basic Guide'</span><span class="token punctuation">,</span>
    <span class="token string">'Vue 4 - The Mystery'</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.38,words:715},y:"a",t:"6. 计算属性"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.4.computed_props","/note/vue/vue-3/fundamentals/01-fundamentals/01.4.computed_props.md"]],["v-56c1d229","/note/vue/vue-3/fundamentals/01-fundamentals/01.5.class_style_binding.html",{e:`<h1> 7. Class 与 Style 绑定</h1>
<p>因为 <code>class</code> 和 <code>style</code> 都是 attribute，可以使用 <code>v-bind</code> 将它们和动态的字符串绑定。</p>
<p>在处理比较复杂的绑定时，通过拼接生成字符串是麻烦且易出错。</p>
<p>因此，Vue 专门为 <code>class</code> 和 <code>style</code> 的 <code>v-bind</code> 用法提供了特殊的功能增强。除了<strong>字符串</strong>外，表达式的值也可以是<strong>对象</strong>或<strong>数组</strong>。</p>`,r:{minutes:3.11,words:934},y:"a",t:"7. Class 与 Style 绑定"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.5.class_style_binding","/note/vue/vue-3/fundamentals/01-fundamentals/01.5.class_style_binding.md"]],["v-7db8c2c5","/note/vue/vue-3/fundamentals/01-fundamentals/01.6.conditional_rendering.html",{e:`<h1> 8. 条件渲染</h1>
<h2> 8.1 <code>v-if</code></h2>
<p><code>v-if</code> 指令用于条件性地渲染一块内容, 这块内容只会在指令的表达式返回真值时才被渲染:</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>awesome<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>Vue is awesome!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:1.89,words:566},y:"a",t:"8. 条件渲染"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.6.conditional_rendering","/note/vue/vue-3/fundamentals/01-fundamentals/01.6.conditional_rendering.md"]],["v-14236860","/note/vue/vue-3/fundamentals/01-fundamentals/01.7.list_rendering.html",{e:`<h1> 9. 列表渲染</h1>
<h2> 9.1 <code>v-for</code></h2>
<p>使用 <code>v-for</code> 指令基于一个数组来渲染一个列表。</p>
<p><code>v-for</code> 指令的值需要使用 <code>item in items</code> 形式的特殊语法，其中 <code>items</code> 是源数据的数组，而 <code>item</code> 是迭代项的<strong>别名</strong>：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> items <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Foo'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Bar'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:4.52,words:1357},y:"a",t:"9. 列表渲染"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.7.list_rendering","/note/vue/vue-3/fundamentals/01-fundamentals/01.7.list_rendering.md"]],["v-11aa17f2","/note/vue/vue-3/fundamentals/01-fundamentals/01.8.event_handling.html",{e:`<h1> 10. 事件处理</h1>
<h2> 10.1 监听事件</h2>
<p>可以使用 <code>v-on</code> 指令 (简写为 <code>@</code>) 来监听 DOM 事件，并在事件触发时执行对应的 JavaScript。用法：</p>
<ul>
<li><code>v-on:click="handler"</code></li>
<li><code>@click="handler"</code></li>
</ul>
<p>事件处理器 (handler) 的值可以是：</p>
<ol>
<li><strong>内联事件处理器</strong>：事件被触发时执行的内联 JavaScript 语句</li>
<li><strong>方法事件处理器</strong>：一个指向组件上定义的方法的属性名或是路径</li>
</ol>`,r:{minutes:4.79,words:1437},y:"a",t:"10. 事件处理"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.8.event_handling","/note/vue/vue-3/fundamentals/01-fundamentals/01.8.event_handling.md"]],["v-a2e20f30","/note/vue/vue-3/fundamentals/01-fundamentals/01.9.form_input_binding.html",{e:`<h1> 11. 表单输入绑定</h1>
<p>处理表单时，需要将表单输入框的内容同步给 JavaScript 中相应的变量。</p>
<p>手动连接值绑定和更改事件监听器可能会很麻烦：</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
  <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>
  <span class="token attr-name">@input</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>event =&gt; text = event.target.value<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.6,words:1381},y:"a",t:"11. 表单输入绑定"},["/note/vue/vue-3/fundamentals/01-fundamentals/01.9.form_input_binding","/note/vue/vue-3/fundamentals/01-fundamentals/01.9.form_input_binding.md"]],["v-1018c823","/note/vue/vue-3/fundamentals/02-component/02.1.registration.html",{e:`<h1> 17. 组件注册</h1>
<p>组件注册有两种方式：</p>
<ul>
<li>全局注册</li>
<li>局部注册</li>
</ul>
<h2> 17.1 全局注册</h2>
<p>使用 <a href="https://cn.vuejs.org/guide/essentials/application.html" target="_blank" rel="noopener noreferrer">Vue 应用实例</a>的 <code>app.component()</code> 方法，让组件在当前 Vue 应用中全局可用。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>
  <span class="token comment">// 注册的名字</span>
  <span class="token string">'MyComponent'</span><span class="token punctuation">,</span>
  <span class="token comment">// 组件的实现</span>
  <span class="token punctuation">{</span>
    <span class="token comment">/* ... */</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.29,words:686},y:"a",t:"17. 组件注册"},["/note/vue/vue-3/fundamentals/02-component/02.1.registration","/note/vue/vue-3/fundamentals/02-component/02.1.registration.md"]],["v-a7271076","/note/vue/vue-3/fundamentals/02-component/02.2.props.html",{e:`<h1> 18. Props</h1>
<h2> 18.1 Props 声明</h2>
<p>一个组件需要显式声明它所接受的 props。</p>
<p>在使用 <code>&lt;script setup&gt;</code> 的单文件组件中，props 可以使用 <code>defineProps()</code> 宏来声明：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'foo'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>foo<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.94,words:2081},y:"a",t:"18. Props"},["/note/vue/vue-3/fundamentals/02-component/02.2.props","/note/vue/vue-3/fundamentals/02-component/02.2.props.md"]],["v-47f6df05","/note/vue/vue-3/fundamentals/02-component/02.3.events.html",{e:`<h1> 19. 组件事件</h1>
<h2> 19.1 触发与监听事件</h2>
<p>在组件的模板表达式中，可以直接使用 <code>$emit</code> 方法触发自定义事件 (例如：在 <code>v-on</code> 的处理函数中)：</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- MyComponent --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$emit('someEvent')<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>click me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.57,words:772},y:"a",t:"19. 组件事件"},["/note/vue/vue-3/fundamentals/02-component/02.3.events","/note/vue/vue-3/fundamentals/02-component/02.3.events.md"]],["v-1503255a","/note/vue/vue-3/fundamentals/02-component/02.4.v_model.html",{e:`<h1> 20. 组件 v-model</h1>
<p><code>v-model</code> 可以在组件上使用以实现双向绑定。</p>
<p><code>v-model</code> 在原生元素上的用法：</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>searchText<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:2.97,words:891},y:"a",t:"20. 组件 v-model"},["/note/vue/vue-3/fundamentals/02-component/02.4.v_model","/note/vue/vue-3/fundamentals/02-component/02.4.v_model.md"]],["v-997ddd98","/note/vue/vue-3/fundamentals/02-component/02.5.fallthrough_attributes.html",{e:`<h1> 21. 透传 Attributes</h1>
<h2> 21.1 Attributes 继承</h2>
<p>指的是传递给一个组件，却没有被该组件声明为 <a href="https://cn.vuejs.org/guide/components/props.html" target="_blank" rel="noopener noreferrer">props</a> 或 <a href="https://cn.vuejs.org/guide/components/events.html#defining-custom-events" target="_blank" rel="noopener noreferrer">emits</a> 的 attribute 或者 <code>v-on</code> 事件监听器。</p>`,r:{minutes:4.37,words:1310},y:"a",t:"21. 透传 Attributes"},["/note/vue/vue-3/fundamentals/02-component/02.5.fallthrough_attributes","/note/vue/vue-3/fundamentals/02-component/02.5.fallthrough_attributes.md"]],["v-020db39c","/note/vue/vue-3/fundamentals/02-component/02.6.slots.html",{e:`<h1> 22. 插槽 Slots</h1>
<h2> 22.1 插槽内容与出口</h2>
<p>在某些场景中，可能想要为子组件传递一些模板片段，让子组件在它们的组件中渲染这些片段。</p>
<p>例如，有一个 <code>&lt;FancyButton&gt;</code> 组件，可以像这样使用：</p>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FancyButton</span><span class="token punctuation">&gt;</span></span>
  Click me! <span class="token comment">&lt;!-- 插槽内容 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FancyButton</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.37,words:1612},y:"a",t:"22. 插槽 Slots"},["/note/vue/vue-3/fundamentals/02-component/02.6.slots","/note/vue/vue-3/fundamentals/02-component/02.6.slots.md"]],["v-1d9145f3","/note/vue/vue-3/fundamentals/02-component/02.7.provide_inject.html",{e:`<h1> 23. 依赖注入</h1>
<h2> 23.1 Prop 逐级透传问题</h2>
<p>通常情况下，当需要从父组件向子组件传递数据时，会使用 <a href="https://cn.vuejs.org/guide/components/props.html" target="_blank" rel="noopener noreferrer">props</a>。</p>
<p>有一些多层级嵌套的组件，形成了一颗巨大的组件树，而某个深层的子组件需要一个较远的祖先组件中的部分数据。在这种情况下，如果仅使用 props 则必须将其沿着组件链逐级传递下去，这会非常麻烦：</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/prop-drilling.11201220.png" alt="Prop 逐级透传的过程图示" tabindex="0" loading="lazy"><figcaption>Prop 逐级透传的过程图示</figcaption></figure>`,r:{minutes:4.68,words:1405},y:"a",t:"23. 依赖注入"},["/note/vue/vue-3/fundamentals/02-component/02.7.provide_inject","/note/vue/vue-3/fundamentals/02-component/02.7.provide_inject.md"]],["v-391dd596","/note/vue/vue-3/fundamentals/02-component/02.8.async_component.html",{e:`<h1> 24. 异步组件</h1>
<h2> 24.1 基本用法</h2>
<p>在大型项目中，我们可能需要拆分应用为更小的块，并仅在需要时再从服务器加载相关组件。</p>
<p>Vue 提供了 <a href="https://cn.vuejs.org/api/general.html#defineasynccomponent" target="_blank" rel="noopener noreferrer"><code>defineAsyncComponent</code></a> 方法来实现此功能：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineAsyncComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span>

<span class="token keyword">const</span> AsyncComp <span class="token operator">=</span> <span class="token function">defineAsyncComponent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...从服务器获取组件</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token comment">/* 获取到的组件 */</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// ... 像使用其他一般组件一样使用 \`AsyncComp\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.39,words:716},y:"a",t:"24. 异步组件"},["/note/vue/vue-3/fundamentals/02-component/02.8.async_component","/note/vue/vue-3/fundamentals/02-component/02.8.async_component.md"]],["v-290b5eff","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.0.html",{e:`<iframe :src="$withBase('/assets/markmap/OODSAL01.html')" width="100%" height="1000" frameborder="0" scrolling="No" leftmargin="0" topmargin="0">
</iframe>`,r:{minutes:.06,words:19},y:"a",t:"Mindmap"},["/reading/algorithm/offer_oriented/AL_DS/01_integer/01.0","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.0.md"]],["v-2ac0379e","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.1.html",{d:16933536e5,l:"2023年8月30日",c:["algorithm"],e:`<p>整数分为:</p>
<ul>
<li>无符号数：所有位用于表示数字</li>
<li>有符号数：最高位表示符号，1(负)0(正)</li>
</ul>
<p>n 位二进制表示的整数范围：</p>
<ul>
<li>无符号：[0, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>]</li>
<li>有符号: [<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">-2^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{n-1}-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>]，整数在计算机中采用补码表示</li>
</ul>`,r:{minutes:2.05,words:615},y:"a",t:"1.1 整数的基础"},["/reading/algorithm/offer_oriented/AL_DS/01_integer/01.1","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.1.md"]],["v-2c75103d","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.2.html",{d:16933536e5,l:"2023年8月30日",c:["algorithm"],e:`<h3> 1.2.1 问题02： 二进制加法</h3>
<p>输入两个表示二进制的字符串，计算其和并以二进制字符串形式输出。</p>
<p>如，“11” 和 “01”，则输出“101”。</p>
<h4> 1.2.1.1 分析</h4>
<p>若直接将字符串转换成数字类型，因为没有确定字符串的长度，所以会导致溢出。</p>
<p>可将字符按位对齐，以逢二进一的规则计算。</p>
<h4> 1.2.1.2 题解</h4>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> soint

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">"unsafe"</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">addBinary</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    lenA<span class="token punctuation">,</span> lenB <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>lenA<span class="token punctuation">,</span> lenB<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>

    carry <span class="token operator">:=</span> <span class="token number">0</span>
    <span class="token comment">// 从最低位开始</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token operator">:=</span> lenA<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> lenB<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">||</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">{</span>
       digitA<span class="token punctuation">,</span> digitB <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>
       <span class="token keyword">if</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
          digitA <span class="token operator">=</span> <span class="token function">toDigit</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">if</span> j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
          digitB <span class="token operator">=</span> <span class="token function">toDigit</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
       <span class="token comment">// 按位计算</span>
       digitSum <span class="token operator">:=</span> digitA <span class="token operator">+</span> digitB <span class="token operator">+</span> carry

       <span class="token keyword">var</span> charSum <span class="token builtin">byte</span> <span class="token operator">=</span> <span class="token char">'0'</span>
       <span class="token keyword">if</span> digitSum <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token punctuation">{</span>
          carry <span class="token operator">=</span> <span class="token number">1</span>
          <span class="token keyword">if</span> digitSum <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token punctuation">{</span>
             charSum <span class="token operator">=</span> <span class="token char">'1'</span>
          <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">if</span> digitSum <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
          charSum <span class="token operator">=</span> <span class="token char">'1'</span>
          carry <span class="token operator">=</span> <span class="token number">0</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">if</span> digitSum <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
          carry <span class="token operator">=</span> <span class="token number">0</span>
       <span class="token punctuation">}</span>
       <span class="token comment">// 存入结果</span>
       buf<span class="token punctuation">[</span><span class="token function">max</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> charSum

       i<span class="token operator">--</span>
       j<span class="token operator">--</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> carry <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
       buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'1'</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       buf <span class="token operator">=</span> buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// 首位为0，则抛弃</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 将字节数组转化为字符串</span>
    result <span class="token operator">:=</span> unsafe<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">SliceData</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> a <span class="token operator">&gt;</span> b <span class="token punctuation">{</span>
       <span class="token keyword">return</span> a
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> b
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">toDigit</span><span class="token punctuation">(</span>c <span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> c<span class="token operator">-</span><span class="token char">'0'</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.73,words:2020},y:"a",t:"1.2 二进制"},["/reading/algorithm/offer_oriented/AL_DS/01_integer/01.2","/reading/algorithm/offer_oriented/AL_DS/01_integer/01.2.md"]],["v-16ccdc59","/reading/algorithm/offer_oriented/AL_DS/02_array/02.1.html",{d:16933536e5,l:"2023年8月30日",c:["algorithm"],e:`<p>数组是一种简单的数据结构,是由相同类型元素组成的数据集合,并占据一块连续的内存按照顺序存储数据.</p>
<p>数组可以是一维的也可以是多维的(二维数组对应矩阵).</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>
`,r:{minutes:.31,words:94},y:"a",t:"2.1 数组基础"},["/reading/algorithm/offer_oriented/AL_DS/02_array/02.1","/reading/algorithm/offer_oriented/AL_DS/02_array/02.1.md"]],["v-1881b4f8","/reading/algorithm/offer_oriented/AL_DS/02_array/02.2.html",{d:16933536e5,l:"2023年8月30日",c:["algorithm"],e:`<p><strong>双指针</strong>是一种常见的解题思路, 通过相反或相同的方向来扫描数组以达成解题.</p>
<h2> 2.2.1 问题06: 排序数组中的两个数字之和</h2>
<p>输入升序排列的数组和一个值k,在数组中找出两个元素之和等于k的元素的下标并返回; 假设数组中只存在一对符合条件的元素, 且单个元素不能使用两次.</p>
<p>例: [1, 2, 4, 6 ] 和 8, 返回[1, 3]</p>
<h3> 2.2.1.1 分析&amp;题解</h3>
<h4> 暴力解法</h4>
<p>遍历数组, 将元素两两匹配求和.</p>
<p>时间复杂度: O(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>)</p>`,r:{minutes:5.6,words:1681},y:"a",t:"2.2 双指针"},["/reading/algorithm/offer_oriented/AL_DS/02_array/02.2","/reading/algorithm/offer_oriented/AL_DS/02_array/02.2.md"]],["v-1a368d97","/reading/algorithm/offer_oriented/AL_DS/02_array/02.3.html",{d:16935264e5,l:"2023年9月1日",c:["algorithm"],e:`<p>使用<strong>双指针</strong>求<strong>子数组之和</strong>的前提是元素均为<strong>正整数</strong>, 否则添加或删除元素并不能保证和的减小或增大.</p>
<p><strong>前缀和</strong>:</p>
<p>对于数组 [<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_0, a_1, ..., a_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>], 从第一个到第 k 个的元素之和记为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>k</mi></msub><mo>=</mo><msub><mi>a</mi><mn>0</mn></msub><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">S_{k} = a_0 + a_1 + ... + a_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> .</p>`,r:{minutes:5.67,words:1702},y:"a",t:"2.3 累加数组数字求子数组之和"},["/reading/algorithm/offer_oriented/AL_DS/02_array/02.3","/reading/algorithm/offer_oriented/AL_DS/02_array/02.3.md"]],["v-169eeeb9","/reading/algorithm/offer_oriented/AL_DS/03_string/03.1.html",{d:16936128e5,l:"2023年9月2日",c:["algorithm"],e:`<p><strong>字符串</strong>是由0或多个字符组成的字符序列.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>
`,r:{minutes:.14,words:42},y:"a",t:"3.1 字符串"},["/reading/algorithm/offer_oriented/AL_DS/03_string/03.1","/reading/algorithm/offer_oriented/AL_DS/03_string/03.1.md"]],["v-1853c758","/reading/algorithm/offer_oriented/AL_DS/03_string/03.2.html",{d:16936128e5,l:"2023年9月2日",c:["algorithm"],e:`<p>和数组类似, <strong>双指针</strong>法也可用于字符串中.</p>
<h2> 3.2.1 问题14: 字符串中的变位词</h2>
<p><a href="https://leetcode.cn/problems/MPnaiL/" target="_blank" rel="noopener noreferrer">LCR 014. 字符串的排列</a></p>
<p>给定两个字符串 <code>s1</code> 和 <code>s2</code>，写一个函数来判断 <code>s2</code> 是否包含 <code>s1</code> 的某个变位词。</p>
<p>换句话说，第一个字符串的排列之一是第二个字符串的 <strong>子串</strong> 。</p>`,r:{minutes:8.88,words:2664},y:"a",t:"3.2 双指针"},["/reading/algorithm/offer_oriented/AL_DS/03_string/03.2","/reading/algorithm/offer_oriented/AL_DS/03_string/03.2.md"]],["v-1a089ff7","/reading/algorithm/offer_oriented/AL_DS/03_string/03.3.html",{d:16936992e5,l:"2023年9月3日",c:["algorithm"],e:`<p>回文是一类特殊字符串: 从头到尾读取和从尾到头读取所获取的结果相同.</p>
<h2> 3.3.1 问题18: 有效的回文</h2>
<p><a href="https://leetcode.cn/problems/XltzEq/" target="_blank" rel="noopener noreferrer">LCR 018. 验证回文串</a></p>
<blockquote>
<p>给定一个字符串 <code>s</code> ，验证 <code>s</code> 是否是 <strong>回文串</strong> ，只考虑字母和数字字符，可以忽略字母的大小写。</p>
<p>本题中，将空字符串定义为有效的 <strong>回文串</strong> 。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "A man, a plan, a canal: Panama"
输出: true
解释："amanaplanacanalpanama" 是回文串
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "race a car"
输出: false
解释："raceacar" 不是回文串
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= s.length &lt;= 2 * 105</code></li>
<li>字符串 <code>s</code> 由 ASCII 字符组成</li>
</ul>
</blockquote>`,r:{minutes:2.99,words:898},y:"a",t:"3.3 回文字符串"},["/reading/algorithm/offer_oriented/AL_DS/03_string/03.3","/reading/algorithm/offer_oriented/AL_DS/03_string/03.3.md"]],["v-4b67a2e4","/reading/algorithm/offer_oriented/AL_DS/04_List/04.1.html",{d:16936128e5,l:"2023年9月2日",c:["algorithm"],e:`<p>链表中每个节点包含指向下一节点的指针, 这些指针将节点连成链状结构.</p>
<p>链表的内存分配是动态的, 创建链表时无需知道链表的长度. 链表的内存不需要在创建时一次性分配, 而是插入一个节点时分配一次内存.</p>
<p>链表的插入操作时间为 O(1), 而链表的查询时间为 O(n).</p>
<p>单向链表的节点可定义为:</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> ListNode <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Val <span class="token builtin">int</span>
    Next <span class="token operator">*</span>ListNode
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.53,words:158},y:"a",t:"4.1 链表基础"},["/reading/algorithm/offer_oriented/AL_DS/04_List/04.1","/reading/algorithm/offer_oriented/AL_DS/04_List/04.1.md"]],["v-4d1c7b83","/reading/algorithm/offer_oriented/AL_DS/04_List/04.2.html",{d:16936992e5,l:"2023年9月3日",c:["algorithm"],e:`<p>哨兵节点用于简化处理链表的边界条件而引入的附加链表节点.</p>
<p>哨兵节点位于链表的头部, 其值没有意义. 有意义的信息从第二个节点开始.</p>
<h2> 4.2.1 哨兵节点简化插入操作</h2>
<p>向链表尾部插入节点:</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Append</span><span class="token punctuation">(</span>head <span class="token operator">*</span>ListNode<span class="token punctuation">,</span> val <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">*</span>ListNode <span class="token punctuation">{</span>
    newNode <span class="token operator">:=</span> <span class="token operator">&amp;</span>ListNode<span class="token punctuation">{</span>Val<span class="token punctuation">:</span> val<span class="token punctuation">}</span>
    <span class="token keyword">if</span> head <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> newNode
    <span class="token punctuation">}</span>
    
    node <span class="token operator">:=</span> head
    <span class="token keyword">for</span> node<span class="token punctuation">.</span>Next <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        node <span class="token operator">=</span> node<span class="token punctuation">.</span>Next
    <span class="token punctuation">}</span>
    
    node<span class="token punctuation">.</span>Next <span class="token operator">=</span> newNode
    <span class="token keyword">return</span> head
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.1,words:329},y:"a",t:"4.2 哨兵节点"},["/reading/algorithm/offer_oriented/AL_DS/04_List/04.2","/reading/algorithm/offer_oriented/AL_DS/04_List/04.2.md"]],["v-4ed15422","/reading/algorithm/offer_oriented/AL_DS/04_List/04.3.html",{d:16936992e5,l:"2023年9月3日",c:["algorithm"],e:`<p>双指针法解决链表问题有两种方式:</p>
<ul>
<li>前后双指针: 一个指针提前向下个节点移动若干步, 然后再移动另一个指针
案例: 查找倒数第k个节点, 先让第一个指针移动k-1步, 之后和第二个(从头节点开始)一起移动. 当第一个指针到达尾节点时, 第二个指针刚好到达倒数第k个节点</li>
<li>快慢指针: 两个指针移动速度不同.
案例: 快指针一次移动两步, 慢指针一次移动一步; 当快指针到达末尾时, 慢指针指向中间节点.</li>
</ul>
<h2> 4.3.1 问题21: 删除倒数第k个节点</h2>
<p><a href="https://leetcode.cn/problems/SLwz0R/" target="_blank" rel="noopener noreferrer">LCR 021. 删除链表的倒数第 N 个结点</a></p>`,r:{minutes:6.44,words:1931},y:"a",t:"4.3 双指针"},["/reading/algorithm/offer_oriented/AL_DS/04_List/04.3","/reading/algorithm/offer_oriented/AL_DS/04_List/04.3.md"]],["v-50862cc1","/reading/algorithm/offer_oriented/AL_DS/04_List/04.4.html",{d:16936992e5,l:"2023年9月3日",c:["algorithm"],e:`<h2> 4.4.1 问题24: 反转链表</h2>
<p><a href="https://leetcode.cn/problems/UHnkqh/" target="_blank" rel="noopener noreferrer">LCR 024. 反转链表</a></p>
<blockquote>
<p>给定单链表的头节点 <code>head</code> ，请反转链表，并返回反转后的链表的头节点。</p>
<p><strong>示例 1：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/rev1ex1.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,3,4,5]
输出：[5,4,3,2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<figure><img src="https://assets.leetcode.com/uploads/2021/02/19/rev1ex2.jpg" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2]
输出：[2,1]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>链表中节点的数目范围是 <code>[0, 5000]</code></li>
<li><code>-5000 &lt;= Node.val &lt;= 5000</code></li>
</ul>
<p>**进阶：**链表可以选用迭代或递归方式完成反转。你能否用两种方法解决这道题？</p>
</blockquote>`,r:{minutes:4.61,words:1382},y:"a",t:"4.4 反转链表"},["/reading/algorithm/offer_oriented/AL_DS/04_List/04.4","/reading/algorithm/offer_oriented/AL_DS/04_List/04.4.md"]],["v-523b0560","/reading/algorithm/offer_oriented/AL_DS/04_List/04.5.html",{d:1694304e6,l:"2023年9月10日",c:["algorithm"],e:`<p><strong>双向链表</strong>中每个节点包含指向下一节点和上一节点的指针, 可以从两个方向遍历.</p>
<p><strong>循环链表</strong>的尾节点和头节点相连形成环. 因为可以从任意节点出发到达任意节点, 所以循环链表的任意节点都可以是头节点.</p>
<h2> 4.5.1 问题28: 展平多级双向链表</h2>
<p><a href="https://leetcode.cn/problems/Qv1Da2/" target="_blank" rel="noopener noreferrer">LCR 028. 扁平化多级双向链表</a></p>
<blockquote>
<p>多级双向链表中，除了指向下一个节点和前一个节点指针之外，它还有一个子链表指针，可能指向单独的双向链表。这些子列表也可能会有一个或多个自己的子项，依此类推，生成多级数据结构，如下面的示例所示。</p>
<p>给定位于列表第一级的头节点，请扁平化列表，即将这样的多级双向链表展平成普通的双向链表，使所有结点出现在单级双链表中。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]
输出：[1,2,3,7,8,11,12,9,10,4,5,6]
解释：

输入的多级列表如下图所示：



扁平化后的链表如下图：
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = [1,2,null,3]
输出：[1,3,2]
解释：

输入的多级列表如下图所示：

  1---2---NULL
  |
  3---NULL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：head = []
输出：[]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>如何表示测试用例中的多级链表？</strong></p>
<p>以 <strong>示例 1</strong> 为例：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> 1---2---3---4---5---6--NULL
         |
         7---8---9---10--NULL
             |
             11--12--NULL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>序列化其中的每一级之后：</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[1,2,3,4,5,6,null]
[7,8,9,10,null]
[11,12,null]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了将每一级都序列化到一起，我们需要每一级中添加值为 null 的元素，以表示没有节点连接到上一级的上级节点。</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[1,2,3,4,5,6,null]
[null,null,7,8,9,10,null]
[null,11,12,null]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>合并所有序列化结果，并去除末尾的 null 。</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li>节点数目不超过 <code>1000</code></li>
<li><code>1 &lt;= Node.val &lt;= 10^5</code></li>
</ul>
</blockquote>`,r:{minutes:4.81,words:1443},y:"a",t:"4.5 双向链表和循环链表"},["/reading/algorithm/offer_oriented/AL_DS/04_List/04.5","/reading/algorithm/offer_oriented/AL_DS/04_List/04.5.md"]],["v-7fdb5a60","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.1.html",{d:16943904e5,l:"2023年9月11日",c:["algorithm"],e:`<p>哈希表的插入和查找元素的时间复杂度为O(1), 通常用于优化时间效率.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>
`,r:{minutes:.19,words:56},y:"a",t:"5.1 哈希表基础"},["/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.1","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.1.md"]],["v-fcdf9a02","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.2.html",{d:16943904e5,l:"2023年9月11日",c:["algorithm"],e:`<p>使用<strong>数组</strong>设计哈希表的三个要点:</p>
<ol>
<li><strong>哈希函数</strong>: 将 Key 映射为桶中的存储位置</li>
<li><strong>存储桶</strong>: 将哈希值相同的元素存储在同一个桶中</li>
<li><strong>哈希冲突</strong>: 若桶中元素过多则需要进行扩容, 重新分配元素的位置</li>
</ol>
<h2> 5.2.1 问题30: 插入, 删除和随机访问都是*O(1)*的容器</h2>
<p><a href="https://leetcode.cn/problems/FortPu/" target="_blank" rel="noopener noreferrer">LCR 030. O(1) 时间插入、删除和获取随机元素</a></p>`,r:{minutes:5.09,words:1528},y:"a",t:"5.1 哈希表"},["/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.2","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.2.md"]],["v-f975e8c4","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.3.html",{d:16943904e5,l:"2023年9月11日",c:["algorithm"],e:`<p>若哈希表的Key取值范围固定, 且范围不大, 那么可以使用数组来模拟哈希表.</p>
<h2> 5.3.1 问题32: 有效的变位词</h2>
<blockquote>
<p>给定两个字符串 <code>s</code> 和 <code>t</code> ，编写一个函数来判断它们是不是一组变位词（字母异位词）。</p>
<p><strong>注意：<strong>若 <code>*s*</code> 和 <code>*t*</code> 中每个字符出现的次数都相同且</strong>字符顺序不完全相同</strong>，则称 <code>*s*</code> 和 <code>*t*</code> 互为变位词（字母异位词）。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "anagram", t = "nagaram"
输出: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "rat", t = "car"
输出: false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: s = "a", t = "a"
输出: false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示:</strong></p>
<ul>
<li><code>1 &lt;= s.length, t.length &lt;= 5 * 104</code></li>
<li><code>s</code> and <code>t</code> 仅包含小写字母</li>
</ul>
<p><strong>进阶:</strong> 如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？</p>
</blockquote>`,r:{minutes:6.31,words:1893},y:"a",t:"5.3 哈希表应用"},["/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.3","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/05.3.md"]],["v-22502948","/reading/algorithm/offer_oriented/AL_DS/06_stack/06.1.html",{d:16943904e5,l:"2023年9月11日",c:["algorithm"],e:`<p>栈的特点是后进先出, 其插入和删除操作均发生在栈顶.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>
`,r:{minutes:.16,words:47},y:"a",t:"6.1 栈基础"},["/reading/algorithm/offer_oriented/AL_DS/06_stack/06.1","/reading/algorithm/offer_oriented/AL_DS/06_stack/06.1.md"]],["v-240501e7","/reading/algorithm/offer_oriented/AL_DS/06_stack/06.2.html",{d:16943904e5,l:"2023年9月11日",c:["algorithm"],e:`<p>如果数据的保存顺序和使用顺序相反, 具有后进先出的特点, 可以考虑使用栈来解决.</p>
<h2> 6.2.1 问题36: 后缀表达式</h2>
<p><a href="https://leetcode.cn/problems/8Zf90G/" target="_blank" rel="noopener noreferrer">LCR 036. 逆波兰表达式求值</a></p>
<blockquote>
<p>根据<a href="https://baike.baidu.com/item/%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/128437" target="_blank" rel="noopener noreferrer"> 逆波兰表示法</a>，求该后缀表达式的计算结果。</p>
<p>有效的算符包括 <code>+</code>、<code>-</code>、<code>*</code>、<code>/</code> 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。</p>
<p><strong>说明：</strong></p>
<ul>
<li>整数除法只保留整数部分。</li>
<li>给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。</li>
</ul>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：tokens = ["2","1","+","3","*"]
输出：9
解释：该算式转化为常见的中缀算术表达式为：((2 + 1) * 3) = 9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：tokens = ["4","13","5","/","+"]
输出：6
解释：该算式转化为常见的中缀算术表达式为：(4 + (13 / 5)) = 6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：tokens = ["10","6","9","3","+","-11","*","/","*","17","+","5","+"]
输出：22
解释：
该算式转化为常见的中缀算术表达式为：
  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5
= ((10 * (6 / (12 * -11))) + 17) + 5
= ((10 * (6 / -132)) + 17) + 5
= ((10 * 0) + 17) + 5
= (0 + 17) + 5
= 17 + 5
= 22
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= tokens.length &lt;= 104</code></li>
<li><code>tokens[i]</code> 要么是一个算符（<code>"+"</code>、<code>"-"</code>、<code>"*"</code> 或 <code>"/"</code>），要么是一个在范围 <code>[-200, 200]</code> 内的整数</li>
</ul>
<p><strong>逆波兰表达式：</strong></p>
<p>逆波兰表达式是一种后缀表达式，所谓后缀就是指算符写在后面。</p>
<ul>
<li>平常使用的算式则是一种中缀表达式，如 <code>( 1 + 2 ) * ( 3 + 4 )</code> 。</li>
<li>该算式的逆波兰表达式写法为 <code>( ( 1 2 + ) ( 3 4 + ) * )</code> 。</li>
</ul>
<p>逆波兰表达式主要有以下两个优点：</p>
<ul>
<li>去掉括号后表达式无歧义，上式即便写成 <code>1 2 + 3 4 + * </code>也可以依据次序计算出正确结果。</li>
<li>适合用栈操作运算：遇到数字则入栈；遇到算符则取出栈顶两个数字进行计算，并将结果压入栈中。</li>
</ul>
</blockquote>`,r:{minutes:8.92,words:2677},y:"a",t:"6.2 栈应用"},["/reading/algorithm/offer_oriented/AL_DS/06_stack/06.2","/reading/algorithm/offer_oriented/AL_DS/06_stack/06.2.md"]],["v-5fa0991e","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.1.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>队列的特点是先入先出, 先进入队列的元素最先出来, 和现实中的队列一样.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>
`,r:{minutes:.19,words:56},y:"a",t:"7.1 队列基础"},["/reading/algorithm/offer_oriented/AL_DS/07_queue/07.1","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.1.md"]],["v-5c36e7e0","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.2.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>滑动窗口: 对于数组<code>[1 2 3 4 5 6]</code>, 长度为3的窗口<code>[1 2 3]</code>, 窗口向右移动一个数字, 最右添加一个元素, 最左边删除一个元素, 变成<code>[2 3 4]</code>, 符合先入先出的规则, 可以用队列来表示.</p>
<h2> 7.2.1 问题41: 滑动窗口平均值</h2>
<p><a href="https://leetcode.cn/problems/qIsx9U/" target="_blank" rel="noopener noreferrer">LCR 041. 数据流中的移动平均值</a></p>`,r:{minutes:3.22,words:965},y:"a",t:"7.2 队列应用"},["/reading/algorithm/offer_oriented/AL_DS/07_queue/07.2","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.2.md"]],["v-58cd36a2","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.3.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>二叉树的广度优先搜索是从上到下按层数遍历二叉树.</p>
<p>通常使用<strong>队列</strong>来实现二叉树的广度优先搜索:</p>
<ol>
<li>将根节点放入队列</li>
<li>从队列中取出节点进行遍历</li>
<li>若节点存在子节点, 则将子节点放入队列中, 重复步骤 2)</li>
</ol>
<p>由于先入先出的特性, 二叉树的节点按照从左至右的顺序进入队列, 因此可以很容易的直到每<strong>层</strong>的最左/右的节点, 或者每层的最值等.</p>
<p>如果涉及到二叉树的<strong>层</strong>相关的问题, 可以使用广度优先搜索来解决.</p>`,r:{minutes:7.32,words:2195},y:"a",t:"7.1 二叉树的广度优先搜索"},["/reading/algorithm/offer_oriented/AL_DS/07_queue/07.3","/reading/algorithm/offer_oriented/AL_DS/07_queue/07.3.md"]],["v-0d4df688","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.1.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>树是一类递归结构, 一个树包含一个根节点及其若干子节点, 而每个子节点也包含若干个子节点. 若子节点没有子节点那么就称为叶节点.</p>
<p>二叉树是一类比较常见的树, 其子节点最多有两个.</p>
<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>binary tree</strong> is a <a href="https://en.wikipedia.org/wiki/N-ary_tree" target="_blank" rel="noopener noreferrer">k-ary</a> (k=2) <a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" target="_blank" rel="noopener noreferrer">tree data structure</a> in which each node has at most two <a href="https://en.wikipedia.org/wiki/Child_node" target="_blank" rel="noopener noreferrer">children</a>, which are referred to as the <em>left child</em> and the <em>right child</em>.</p>
</blockquote>`,r:{minutes:.53,words:158},y:"a",t:"8.1 树基础"},["/reading/algorithm/offer_oriented/AL_DS/08_tree/08.1","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.1.md"]],["v-09e4454a","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.2.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>二叉树的深度优先搜索可分为:</p>
<ul>
<li>前序遍历</li>
<li>中序遍历</li>
<li>后序遍历</li>
</ul>
<h2> 8.2.1 前序遍历</h2>
<p>前序遍历顺序:</p>
<ol>
<li>根节点</li>
<li>左子树</li>
<li>右子树</li>
</ol>
<h3> 递归</h3>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">preorderTraversal</span><span class="token punctuation">(</span>root <span class="token operator">*</span>TreeNode<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    res <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token function">dfsPreorderRecursively</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token operator">&amp;</span>res<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">dfsPreorderRecursively</span><span class="token punctuation">(</span>root <span class="token operator">*</span>TreeNode<span class="token punctuation">,</span> res <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> root <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token operator">*</span>res <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token operator">*</span>res<span class="token punctuation">,</span> root<span class="token punctuation">.</span>Val<span class="token punctuation">)</span>
        <span class="token function">dfsPreorderRecursively</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>Left<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
        <span class="token function">dfsPreorderRecursively</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>Right<span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.81,words:2642},y:"a",t:"8.2 二叉树的深度优先搜素"},["/reading/algorithm/offer_oriented/AL_DS/08_tree/08.2","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.2.md"]],["v-067a940c","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.3.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>二叉搜索树是一种特殊二叉树:</p>
<ul>
<li>左子节点 &lt; 根节点</li>
<li>右子节点 &gt; 根节点</li>
</ul>
<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>binary search tree</strong> (<strong>BST</strong>), also called an <strong>ordered</strong> or <strong>sorted binary tree</strong>, is a <a href="https://en.wikipedia.org/wiki/Rooted_tree" target="_blank" rel="noopener noreferrer">rooted</a> <a href="https://en.wikipedia.org/wiki/Binary_tree" target="_blank" rel="noopener noreferrer">binary tree</a> <a href="https://en.wikipedia.org/wiki/Data_structure" target="_blank" rel="noopener noreferrer">data structure</a> with the key of each internal node being greater than all the keys in the respective node's left subtree and less than the ones in its right subtree.</p>
</blockquote>`,r:{minutes:8.08,words:2424},y:"a",t:"8.3 二叉搜索树"},["/reading/algorithm/offer_oriented/AL_DS/08_tree/08.3","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.3.md"]],["v-0310e2ce","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.4.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>若二叉搜索树有n个节点, 高度为h, 那么查找, 添加和删除操作的时间复杂度都是 O(h).</p>
<p>若二叉搜索树是平衡的, 那么高度近似logn.</p>
<p>在极端情况下, 每个节点只有一个子节点, 高度为<code>n-1</code>, 查找等操作就退化成<code>O(n)</code>.</p>
<p>因此是否平衡对二叉搜索树的效率影响很大.</p>
<p>Golang 中没有内建的TreeSet和TreeMap, 需引入三方库 <a href="https://github.com/emirpasic/gods/tree/master" target="_blank" rel="noopener noreferrer">gods</a></p>`,r:{minutes:.7,words:210},y:"a",t:"8.4 TreeSet和TreeMap的应用"},["/reading/algorithm/offer_oriented/AL_DS/08_tree/08.4","/reading/algorithm/offer_oriented/AL_DS/08_tree/08.4.md"]],["v-52673f70","/reading/algorithm/offer_oriented/AL_DS/09_heap/09.1.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>heap</strong> is a specialized <a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" target="_blank" rel="noopener noreferrer">tree</a>-based <a href="https://en.wikipedia.org/wiki/Data_structure" target="_blank" rel="noopener noreferrer">data structure</a> that satisfies the <strong>heap property</strong>: In a <em>max heap</em>, for any given <a href="https://en.wikipedia.org/wiki/Node_(computer_science)" target="_blank" rel="noopener noreferrer">node</a> C, if P is a parent node of C, then the <em>key</em> (the <em>value</em>) of P is greater than or equal to the key of C. In a <em>min heap</em>, the key of P is less than or equal to the key of C. The node at the "top" of the heap (with no parents) is called the <em>root</em> node.</p>
</blockquote>`,r:{minutes:1.3,words:390},y:"a",t:"9.1 堆基础"},["/reading/algorithm/offer_oriented/AL_DS/09_heap/09.1","/reading/algorithm/offer_oriented/AL_DS/09_heap/09.1.md"]],["v-4efd8e32","/reading/algorithm/offer_oriented/AL_DS/09_heap/09.2.html",{d:16944768e5,l:"2023年9月12日",c:["algorithm"],e:`<p>堆的特点是最大/小值位于顶部, 获取最值的时间复杂度为O(1). 插入和删除操作时间复杂度为O(logn).</p>
<p>堆可以用于求动态数据集合中的最值:</p>
<ul>
<li>最大堆: 获取数据集合中最小的k个元素</li>
<li>最小堆: 获取数据集合中最大的k个元素</li>
</ul>
<h2> 9.2.1 问题59: 数据流的第k大数字</h2>
<p><a href="https://leetcode.cn/problems/jBjn9C/" target="_blank" rel="noopener noreferrer">LCR 059. 数据流中的第 K 大元素</a></p>`,r:{minutes:4.37,words:1311},y:"a",t:"9.2 堆应用"},["/reading/algorithm/offer_oriented/AL_DS/09_heap/09.2","/reading/algorithm/offer_oriented/AL_DS/09_heap/09.2.md"]],["v-9d14dd6c","/reading/algorithm/offer_oriented/AL_DS/10_trie/10.1.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>trie</strong> (<a href="https://en.wikipedia.org/wiki/Help:IPA/English" target="_blank" rel="noopener noreferrer">/ˈtriː/</a>, <a href="https://en.wikipedia.org/wiki/Help:IPA/English" target="_blank" rel="noopener noreferrer">/ˈtraɪ/</a>), also called <strong>digital tree</strong> or <strong>prefix tree</strong>, is a type of <a href="https://en.wikipedia.org/wiki/M-ary_tree" target="_blank" rel="noopener noreferrer"><em>k</em>-ary</a> <a href="https://en.wikipedia.org/wiki/Search_tree" target="_blank" rel="noopener noreferrer">search tree</a>, a <a href="https://en.wikipedia.org/wiki/Tree_(data_structure)" target="_blank" rel="noopener noreferrer">tree</a> <a href="https://en.wikipedia.org/wiki/Data_structure" target="_blank" rel="noopener noreferrer">data structure</a> used for locating specific keys from within a set.  These keys are most often <a href="https://en.wikipedia.org/wiki/String_(computer_science)" target="_blank" rel="noopener noreferrer">strings</a>, with links between nodes defined not by the entire key, but by individual <a href="https://en.wikipedia.org/wiki/Character_(computing)" target="_blank" rel="noopener noreferrer">characters</a>.</p>
</blockquote>`,r:{minutes:2.42,words:726},y:"a",t:"10.1 前缀树基础"},["/reading/algorithm/offer_oriented/AL_DS/10_trie/10.1","/reading/algorithm/offer_oriented/AL_DS/10_trie/10.1.md"]],["v-99ab2c2e","/reading/algorithm/offer_oriented/AL_DS/10_trie/10.2.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<p>前缀树主要用于字符串查找, 时间复杂度O(k), k为字符串长度.</p>
<p>和哈希表不同, 哈希表需要完整的字符串才能查找, 而前缀树只需要知道前缀就可进行查找.</p>
<h2> 10.2.1 问题63: 替换单词</h2>
<p><a href="https://leetcode.cn/problems/UhWRSj/" target="_blank" rel="noopener noreferrer">LCR 063. 单词替换</a></p>
<blockquote>
<p>在英语中，有一个叫做 <code>词根(root)</code> 的概念，它可以跟着其他一些词组成另一个较长的单词——我们称这个词为 <code>继承词(successor)</code>。例如，词根<code>an</code>，跟随着单词 <code>other</code>(其他)，可以形成新的单词 <code>another</code>(另一个)。</p>
<p>现在，给定一个由许多词根组成的词典和一个句子，需要将句子中的所有<code>继承词</code>用<code>词根</code>替换掉。如果<code>继承词</code>有许多可以形成它的<code>词根</code>，则用最短的词根替换它。</p>
<p>需要输出替换之后的句子。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：dictionary = ["cat","bat","rat"], sentence = "the cattle was rattled by the battery"
输出："the cat was rat by the bat"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：dictionary = ["a","b","c"], sentence = "aadsfasf absbs bbab cadsfafs"
输出："a a b c"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：dictionary = ["a", "aa", "aaa", "aaaa"], sentence = "a aa a aaaa aaa aaa aaa aaaaaa bbb baba ababa"
输出："a a a a a a a a bbb baba a"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 4：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：dictionary = ["catt","cat","bat","rat"], sentence = "the cattle was rattled by the battery"
输出："the cat was rat by the bat"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 5：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：dictionary = ["ac","ab"], sentence = "it is abnormal that this solution is accepted"
输出："it is ab that this solution is ac"
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= dictionary.length &lt;= 1000</code></li>
<li><code>1 &lt;= dictionary[i].length &lt;= 100</code></li>
<li><code>dictionary[i]</code> 仅由小写字母组成。</li>
<li><code>1 &lt;= sentence.length &lt;= 10^6</code></li>
<li><code>sentence</code> 仅由小写字母和空格组成。</li>
<li><code>sentence</code> 中单词的总量在范围 <code>[1, 1000]</code> 内。</li>
<li><code>sentence</code> 中每个单词的长度在范围 <code>[1, 1000]</code> 内。</li>
<li><code>sentence</code> 中单词之间由一个空格隔开。</li>
<li><code>sentence</code> 没有前导或尾随空格。</li>
</ul>
</blockquote>`,r:{minutes:9.79,words:2937},y:"a",t:"10.2 前缀树应用"},["/reading/algorithm/offer_oriented/AL_DS/10_trie/10.2","/reading/algorithm/offer_oriented/AL_DS/10_trie/10.2.md"]],["v-4e112ea6","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.1.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<p>若在长度为n的数组中查找数字, 全部遍历需要时间O(n).</p>
<p>若数组是有序的, 那么每次只用在一半的元素中查找即可, 时间O(logn)</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">search</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    left<span class="token punctuation">,</span> right <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>
    
    <span class="token keyword">for</span> left <span class="token operator">&lt;=</span> right <span class="token punctuation">{</span>
        mid <span class="token operator">:=</span> <span class="token punctuation">(</span>left<span class="token operator">+</span>right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
        
        <span class="token keyword">if</span> target <span class="token operator">==</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">if</span> target <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.41,words:123},y:"a",t:"11.1 二分查找基础"},["/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.1","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.1.md"]],["v-4fc60745","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.2.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<p>若数组是<strong>有序</strong>的或者<strong>部分有序</strong>, 都可以考虑尝试二分查找.</p>
<h2> 11.2.1 问题68: 查找插入位置</h2>
<p><a href="https://leetcode.cn/problems/N6YdxV/" target="_blank" rel="noopener noreferrer">LCR 068. 搜索插入位置</a></p>
<blockquote>
<p>给定一个排序的整数数组 <code>nums</code> 和一个整数目标值<code> target</code> ，请在数组中找到 <code>target </code>，并返回其下标。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>
<p>请必须使用时间复杂度为 <code>O(log n)</code> 的算法。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [1,3,5,6], target = 5
输出: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [1,3,5,6], target = 2
输出: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 3:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [1,3,5,6], target = 7
输出: 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 4:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [1,3,5,6], target = 0
输出: 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 5:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: nums = [1], target = 0
输出: 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示:</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 10^4</code></li>
<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>
<li><code>nums</code> 为<strong>无重复元素</strong>的<strong>升序</strong>排列数组</li>
<li><code>-10^4 &lt;= target &lt;= 10^4</code></li>
</ul>
</blockquote>`,r:{minutes:7.09,words:2128},y:"a",t:"11.2 排序数组中的二分查找"},["/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.2","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.2.md"]],["v-517adfe4","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.3.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<p>使用二分查找的要点:</p>
<ul>
<li>解的范围确定, 即解的最大/小值已知</li>
<li>每次都能将范围缩小<strong>一半</strong></li>
</ul>
<h2> 11.3.1 问题72: 平方根</h2>
<p><a href="https://leetcode.cn/problems/jJ0w9p/" target="_blank" rel="noopener noreferrer">LCR 072. x 的平方根</a></p>
<blockquote>
<p>给定一个非负整数 <code>x</code> ，计算并返回 <code>x</code> 的平方根，即实现 <code>int sqrt(int x)</code> 函数。</p>
<p>正数的平方根有两个，只输出其中的正数平方根。</p>
<p>如果平方根不是整数，输出只保留整数的部分，小数部分将被舍去。</p>
<p><strong>示例 1:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: x = 4
输出: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2:</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入: x = 8
输出: 2
解释: 8 的平方根是 2.82842...，由于小数部分将被舍去，所以返回 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示:</strong></p>
<ul>
<li><code>0 &lt;= x &lt;= 2^31 - 1</code></li>
</ul>
</blockquote>`,r:{minutes:2.5,words:751},y:"a",t:"11.3 在数值范围内二分查找"},["/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.3","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/11.3.md"]],["v-d4cbd96c","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.1.html",{d:16945632e5,l:"2023年9月13日",c:["algorithm"],e:`<p>排序之后的数据有利于使用二分查找, 在某些情况下可以优化效率.</p>
<p>常用的排序:</p>
<ul>
<li>计数排序</li>
<li>快速排序</li>
<li>归并排序</li>
</ul>
<h2> 12.1.1 问题74: 合并区间</h2>
<p><a href="https://leetcode.cn/problems/SsGoHC/" target="_blank" rel="noopener noreferrer">LCR 074. 合并区间</a></p>
<blockquote>
<p>以数组 <code>intervals</code> 表示若干个区间的集合，其中单个区间为 <code>intervals[i] = [starti, endi]</code> 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：intervals = [[1,3],[2,6],[8,10],[15,18]]
输出：[[1,6],[8,10],[15,18]]
解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：intervals = [[1,4],[4,5]]
输出：[[1,5]]
解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= intervals.length &lt;= 10^4</code></li>
<li><code>intervals[i].length == 2</code></li>
<li><code>0 &lt;= starti &lt;= endi &lt;= 10^4</code></li>
</ul>
</blockquote>`,r:{minutes:1.23,words:368},y:"a",t:"12.1 排序基础"},["/reading/algorithm/offer_oriented/AL_DS/12_sort/12.1","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.1.md"]],["v-d162282e","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.2.html",{d:16946496e5,l:"2023年9月14日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, <strong>counting sort</strong> is an <a href="https://en.wikipedia.org/wiki/Algorithm" target="_blank" rel="noopener noreferrer">algorithm</a> for <a href="https://en.wikipedia.org/wiki/Sorting_algorithm" target="_blank" rel="noopener noreferrer">sorting</a> a collection of objects according to keys that are small positive <a href="https://en.wikipedia.org/wiki/Integer" target="_blank" rel="noopener noreferrer">integers</a>; that is, it is an <a href="https://en.wikipedia.org/wiki/Integer_sorting" target="_blank" rel="noopener noreferrer">integer sorting</a> algorithm. It operates by counting the number of objects that possess distinct key values and applying prefix sum on those counts to determine the positions of each key value in the output sequence.</p>
<p>Its running time is linear in the number of items and the difference between the maximum key value and the minimum key value, so it is only suitable for direct use in situations where the variation in keys is not significantly greater than the number of items.</p>
</blockquote>`,r:{minutes:2.13,words:639},y:"a",t:"12.2 计数排序"},["/reading/algorithm/offer_oriented/AL_DS/12_sort/12.2","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.2.md"]],["v-cdf876f0","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.3.html",{d:16946496e5,l:"2023年9月14日",c:["algorithm"],e:`<blockquote>
<p>Quicksort is a <a href="https://en.wikipedia.org/wiki/Divide-and-conquer_algorithm" target="_blank" rel="noopener noreferrer">divide-and-conquer algorithm</a>. It works by selecting a 'pivot' element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot.</p>
</blockquote>`,r:{minutes:2.24,words:672},y:"a",t:"12.3 快速排序"},["/reading/algorithm/offer_oriented/AL_DS/12_sort/12.3","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.3.md"]],["v-ca8ec5b2","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.4.html",{d:16946496e5,l:"2023年9月14日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, <strong>merge sort</strong> (also commonly spelled as <strong>mergesort</strong>) is an efficient, general-purpose, and <a href="https://en.wikipedia.org/wiki/Comparison_sort" target="_blank" rel="noopener noreferrer">comparison-based</a> <a href="https://en.wikipedia.org/wiki/Sorting_algorithm" target="_blank" rel="noopener noreferrer">sorting algorithm</a>.</p>
<p>Conceptually, a merge sort works as follows:</p>
<ol>
<li>Divide the unsorted list into <em>n</em> sublists, each containing one element (a list of one element is considered sorted).</li>
<li>Repeatedly <a href="https://en.wikipedia.org/wiki/Merge_algorithm" target="_blank" rel="noopener noreferrer">merge</a> sublists to produce new sorted sublists until there is only one sublist remaining. This will be the sorted list.</li>
</ol>
</blockquote>`,r:{minutes:4.9,words:1471},y:"a",t:"12.4 归并排序"},["/reading/algorithm/offer_oriented/AL_DS/12_sort/12.4","/reading/algorithm/offer_oriented/AL_DS/12_sort/12.4.md"]],["v-4c924008","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.1.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<p>回溯法在解决问题时, 每一步都将尝试不同的可能性, 最后将尝试所有的解决方案.</p>
<p>回溯法的步骤可用树形表示, 每一个叶节点就代表了一个解决方案. 那么深度优先遍历就适用于回溯法.</p>
<p>若子树可以跳过以优化效率, 跳过子树就称为剪枝.</p>
<p>回溯法通常使用递归的形式.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>`,r:{minutes:.47,words:140},y:"a",t:"13.1 回溯法基础"},["/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.1","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.1.md"]],["v-4e4718a7","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.2.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<h2> 13.2.1 问题79: 所有子集</h2>
<p><a href="https://leetcode.cn/problems/TVdhkn/" target="_blank" rel="noopener noreferrer">LCR 079. 子集</a></p>
<blockquote>
<p>给定一个整数数组 <code>nums</code> ，数组中的元素 <strong>互不相同</strong> 。返回该数组所有可能的子集（幂集）。</p>
<p>解集 <strong>不能</strong> 包含重复的子集。你可以按 <strong>任意顺序</strong> 返回解集。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [1,2,3]
输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：nums = [0]
输出：[[],[0]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= nums.length &lt;= 10</code></li>
<li><code>-10 &lt;= nums[i] &lt;= 10</code></li>
<li><code>nums</code> 中的所有元素 <strong>互不相同</strong></li>
</ul>
</blockquote>`,r:{minutes:5.56,words:1667},y:"a",t:"13.2 集合的组合排列"},["/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.2","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.2.md"]],["v-4ffbf146","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.3.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<p>若一个问题每一步有多个选项, 并且需要列出所有解, 那么就适用于回溯法.</p>
<h2> 13.3.1 问题85: 生成匹配括号</h2>
<p><a href="https://leetcode.cn/problems/IDBivT/" target="_blank" rel="noopener noreferrer">LCR 085. 括号生成</a></p>
<blockquote>
<p>正整数 <code>n</code> 代表生成括号的对数，请设计一个函数，用于能够生成所有可能的并且 <strong>有效的</strong> 括号组合。</p>
<p><strong>示例 1：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：n = 3
输出：["((()))","(()())","(())()","()(())","()()()"]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例 2：</strong></p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>输入：n = 1
输出：["()"]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>提示：</strong></p>
<ul>
<li><code>1 &lt;= n &lt;= 8</code></li>
</ul>
</blockquote>`,r:{minutes:3.19,words:956},y:"a",t:"13.3 回溯法解决其他类型的问题"},["/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.3","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/13.3.md"]],["v-4ab840b9","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.1.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<p>若解决一个问题有很多步, 每步都有多个选择, 需要得出最优解或者求出解的数量, 那么就适合使用动态规划.</p>
<p>可以看出动态规划和回溯法应用场景类似, 但区别在于:</p>
<ul>
<li>回溯法: 列出所有的解</li>
<li>动态规划: 给出最优解 或 解的数量</li>
</ul>
<h2> 14.1.1 分治法 和 动态规划</h2>
<p><strong>分治法</strong> 使用递归的思路将大问题分解成小问题, 每个小问题之间<strong>没有重叠</strong>部分, 可以直接用递归代码写出算法. 例如: 快速排序.</p>
<p><strong>动态规划</strong> 使用递归的思路将大问题分解成小问题, 再将小问题的解合并形成大问题的解. <strong>关键</strong>在于找出小问题的解和大问题解的 <strong>状态转移方程</strong> .</p>`,r:{minutes:4.85,words:1456},y:"a",t:"14.1 动态规划基础"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.1","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.1.md"]],["v-4c6d1958","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.2.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<p>单序列问题的输入通常是一个序列, 如数组或字符串.</p>
<p>动态规划解决单序列问题<strong>关键</strong>的一步是在序列中增加一个元素, 根据题目的特点找出<strong>元素</strong>对应的最优解(或解的个数)和<strong>前面若干元素</strong>的最优解(或解数目)的<strong>关系</strong>, 并得出<strong>状态转移方程</strong>.</p>
<p>在<strong>状态转移方程</strong>到代码实现的过程中, 要时刻注意<strong>重复计算</strong>的问题和<strong>缓存优化</strong>的问题.</p>`,r:{minutes:12.58,words:3775},y:"a",t:"14.2 单序列问题"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.2","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.2.md"]],["v-4e21f1f7","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.3.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:'<p>双序列问题有两个或多个输入序列, 状态方程有两个参数, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>,需要找出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i-1,j), f(i,j-1), f(i-1,j-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>的关系.</p>',r:{minutes:10.22,words:3065},y:"a",t:"14.3 双序列问题"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.3","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.3.md"]],["v-4fd6ca96","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.4.html",{d:1694736e6,l:"2023年9月15日",c:["algorithm"],e:`<p>矩阵路径问题通常输入一个矩阵, 计算路径数目或者最短路径.</p>
<p>和双序列类似, 状态转移函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>.</p>`,r:{minutes:6.36,words:1908},y:"a",t:"14.4 矩阵路径问题"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.4","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.4.md"]],["v-518ba335","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.5.html",{d:16948224e5,l:"2023年9月16日",c:["algorithm"],e:`<p><strong>背包问题</strong>: 给定一组物品, 物品有价格和重量, 在限定重量的情况下, 如何选择使得物品的总价格最大.</p>
<ul>
<li><strong>0-1背包问题</strong>: 每种物品只有一个, 选择放入还是不放入.</li>
<li><strong>有界背包问题(或多重背包问题)</strong>: 每种物品是有限的</li>
<li><strong>无界背包问题(或完全背包问题)</strong>: 每种物品是无限的</li>
</ul>
<h2> 14.5.1 问题101: 分割等和子集</h2>
<p><a href="https://leetcode.cn/problems/NUPfPr/" target="_blank" rel="noopener noreferrer">LCR 101. 分割等和子集</a></p>`,r:{minutes:8.59,words:2576},y:"a",t:"14.5 背包问题"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.5","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.5.md"]],["v-5f70d940","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.1.html",{d:16948224e5,l:"2023年9月16日",c:["algorithm"],e:`<p>图用于表示物体和物体之间的关系, 由若干节点和边组成.</p>
<p>图可分为无向图和有向图, 有向图中的边都是有方向的.</p>
<p><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/graphs.png" alt="img" loading="lazy">通常图的存储使用:</p>
<ul>
<li>邻接表</li>
<li>邻接矩阵</li>
</ul>
<p>若图较大且稀疏(大部分节点没有边), 使用邻接表效率更高.</p>
<h2> Reference</h2>
<ol>
<li><a href="https://book.douban.com/subject/35543447/" target="_blank" rel="noopener noreferrer">剑指Offer（专项突破版）</a></li>
</ol>`,r:{minutes:.38,words:115},y:"a",t:"15.1 图基础"},["/reading/algorithm/offer_oriented/AL_DS/15-graph/15.1","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.1.md"]],["v-6125b1df","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.2.html",{d:16948224e5,l:"2023年9月16日",c:["algorithm"],e:`<p>图的搜索分为:</p>
<ul>
<li>
<p>广度优先搜索
使用先进先出的队列:</p>
<ol>
<li>添加起始节点</li>
<li>节点出队, 将其相邻并且未访问过的节点入队, 重复 2) 直到队列为空</li>
</ol>
</li>
<li>
<p>深度优先搜索</p>
<ul>
<li>
<p>使用后进先出的栈:</p>
<ol>
<li>
<p>添加起始节点</p>
</li>
<li>
<p>节点出栈, 将其相邻且未访问过的节点入栈, 重复2) 直到栈为空</p>
</li>
</ol>
</li>
<li>
<p>递归: 沿着图的边尽可能的深入搜索, 直到没有相邻节点为止</p>
</li>
</ul>
</li>
</ul>`,r:{minutes:19.72,words:5917},y:"a",t:"15.2 图的搜索"},["/reading/algorithm/offer_oriented/AL_DS/15-graph/15.2","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.2.md"]],["v-62da8a7e","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.3.html",{d:16949088e5,l:"2023年9月17日",c:["algorithm"],e:`<blockquote>
<p>In <a href="https://en.wikipedia.org/wiki/Computer_science" target="_blank" rel="noopener noreferrer">computer science</a>, a <strong>topological sort</strong> or <strong>topological ordering</strong> of a <a href="https://en.wikipedia.org/wiki/Directed_graph" target="_blank" rel="noopener noreferrer">directed graph</a> is a <a href="https://en.wikipedia.org/wiki/Total_order" target="_blank" rel="noopener noreferrer">linear ordering</a> of its <a href="https://en.wikipedia.org/wiki/Vertex_(graph_theory)" target="_blank" rel="noopener noreferrer">vertices</a> such that for every directed edge <em>uv</em> from vertex <em>u</em> to vertex <em>v</em>, <em>u</em> comes before <em>v</em> in the ordering.</p>
<p>For instance, the vertices of the graph may represent tasks to be performed, and the edges may represent constraints that one task must be performed before another; in this application, a topological ordering is just a valid sequence for the tasks.</p>
</blockquote>`,r:{minutes:7.85,words:2354},y:"a",t:"15.3 拓扑排序"},["/reading/algorithm/offer_oriented/AL_DS/15-graph/15.3","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.3.md"]],["v-648f631d","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.4.html",{d:16949952e5,l:"2023年9月18日",c:["algorithm"],e:`<p>并查集是一种树形的数据结构, 用于表示不相交集合的数据.</p>
<p>并查集中每一个子集是一棵树, 每个元素是树中的节点. 树中的每个节点有一个指向父节点的指针, 树节点的指针指向本身.</p>
<p>并查集支持两个操作:</p>
<ul>
<li>合并
将两个子集合并成一个集合, 将一个子集的树的根节点指向另一个子集的树的根节点
<img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/image-20230918022617545.png" alt="image-20230918022617545" style="zoom:50%;">
<img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/image-20230918022710765.png" alt="image-20230918022710765" style="zoom:50%;"></li>
<li>查找
确定节点 v 属于那个子集, 从v开始一直向上寻找父节点, 直到树的根节点为止.</li>
</ul>`,r:{minutes:8.6,words:2581},y:"a",t:"15.4 并查集"},["/reading/algorithm/offer_oriented/AL_DS/15-graph/15.4","/reading/algorithm/offer_oriented/AL_DS/15-graph/15.4.md"]],["v-f5b4bb7e","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.0.chpater_summary.html",{d:16955136e5,l:"2023年9月24日",c:["golang"],e:`<h2> 1. 数组</h2>
<h3> 1.1 定义</h3>
<p><strong>数组</strong>是由<strong>相同类型</strong>的<strong>元素</strong>组成的数据结构，使用一块<strong>连续的内存</strong>来保存数据。</p>
<h3> 1.2 类型</h3>
<p>Golang 数组的类型包含两点：</p>
<ul>
<li>数组长度</li>
<li>元素类型</li>
</ul>
<p>只有两者相同才是同一类型，例：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token comment">// 不是同一类型</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// 不是同一类型</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:14.58,words:4375},y:"a",t:"第三章笔记总结"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.0.chpater_summary","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.0.chpater_summary.md"]],["v-00ad664e","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.1.array.html",{d:1695168e6,l:"2023年9月20日",c:["golang"],e:`<h2> 3.1.1 概述</h2>
<p><strong>数组</strong>是由<strong>相同类型</strong>元素的集合组成的数据结构, 在计算机中使用一块<strong>连续</strong>的内存来保存其中的元素, 可以使用<strong>索引</strong>快速访问元素.</p>
<p>常见的数组一般是一维数组, 多维数组在数值和图形结算领域较为常见.</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202309231758285.jpg" alt="2019-02-20-3D-array" tabindex="0" loading="lazy"><figcaption>2019-02-20-3D-array</figcaption></figure>`,r:{minutes:8.34,words:2503},y:"a",t:"3.1 数组"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.1.array","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.1.array.md"]],["v-5bab429f","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.2.slice.html",{d:1695168e6,l:"2023年9月20日",c:["golang"],e:`<p>和数组不同，切片是动态的，向切片中添加元素其会在容量不足时自动扩容。</p>
<p>切片声明只需要元素类型即可：</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.77,words:2330},y:"a",t:"3.2 切片"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.2.slice","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.2.slice.md"]],["v-ef99c07c","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.3.hashmap.html",{d:1695168e6,l:"2023年9月20日",c:["golang"],e:`<h2> 3.3.1 设计原理</h2>
<p>哈希表的读写性能为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，同时提供键值对的映射。</p>`,r:{minutes:14.17,words:4250},y:"a",t:"3.3 哈希表"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.3.hashmap","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.3.hashmap.md"]],["v-78e33f52","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.4.string.html",{d:1695168e6,l:"2023年9月20日",c:["golang"],e:`<p>Golang 的字符串是一个只读的字节数组.</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202309241111311.png" alt="in-memory-string" tabindex="0" loading="lazy"><figcaption>in-memory-string</figcaption></figure>
<p>若代码中存在字符串，编译器会将其标记成<strong>只读数据</strong><code>SRODATA</code>:</p>`,r:{minutes:4.81,words:1443},y:"a",t:"3.4 字符串"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.4.string","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/03.4.string.md"]],["v-eb7c0d78","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.0.chapter_summary.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<h2> 1. 函数调用</h2>
<p>Go 语言函数调用：</p>
<ol>
<li>函数<strong>参数</strong>按照<strong>从右至左</strong>的顺序<strong>入栈</strong></li>
<li>函数<strong>返回值</strong>存储在<strong>栈</strong>上</li>
</ol>
<p>C 和 Go 在函数调用上的差异：</p>
<ol>
<li>C 使用<strong>寄存器</strong>和<strong>栈</strong>传递参数，使用<strong>寄存器</strong>传递返回值，无法返回多个返回值</li>
<li>Go 使用<strong>栈</strong>传递参数和返回值，可以返回多个返回值</li>
</ol>`,r:{minutes:8.35,words:2505},y:"a",t:"第四章笔记总结"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.0.chapter_summary","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.0.chapter_summary.md"]],["v-829e24fa","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.1.function.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<h2> 4.1.1 调用惯例</h2>
<h3> C</h3>
<p>使用 <a href="https://gcc.gnu.org/" target="_blank" rel="noopener noreferrer">gcc</a>或者 <a href="https://clang.llvm.org/" target="_blank" rel="noopener noreferrer">clang</a> 将 C 语言编译成汇编代码是分析其调用惯例的最好方法，从汇编语言中可以了解函数调用的具体过程。</p>
<p>以<code>gcc</code>编译器为例（备注：我用的是windows的版本，原书使用linux）：</p>`,r:{minutes:8.89,words:2667},y:"a",t:"4.1 函数调用"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.1.function","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.1.function.md"]],["v-3204c3dd","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.2.interface.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<h2> 4.2.1 概述</h2>
<p>在计算机科学中，接口是计算机系统中多个组件共享的边界，不同的组件能够在边界上交换信息。</p>
<p>接口的<strong>本质</strong>是引入一个新的中间层，调用方可以通过接口与具体实现分离，解除上下游的耦合，上层的模块不再需要依赖下层的具体模块，只需要依赖一个约定好的接口。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202309260042299.png" alt="golang-interface" tabindex="0" loading="lazy"><figcaption>golang-interface</figcaption></figure>`,r:{minutes:11.79,words:3536},y:"a",t:"4.2 接口"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.2.interface","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.2.interface.md"]],["v-ee300c90","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.3.reflect.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<p><a href="https://golang.org/pkg/reflect/" target="_blank" rel="noopener noreferrer"><code>reflect</code></a>实现了运行时反射，有两对非常重要的函数：</p>
<ol>
<li><a href="https://draveness.me/golang/tree/reflect.TypeOf" target="_blank" rel="noopener noreferrer"><code>reflect.TypeOf</code></a> 能获取类型信息</li>
<li><a href="https://draveness.me/golang/tree/reflect.ValueOf" target="_blank" rel="noopener noreferrer"><code>reflect.ValueOf</code></a> 能获取数据的运行时表示</li>
</ol>`,r:{minutes:6.86,words:2059},y:"a",t:"4.3 反射"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.3.reflect","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/04.3.reflect.md"]],["v-30973042","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.0.chapter_summary.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<h2> 1. for and range</h2>
<h3> 1.1 for</h3>
<p>for 循环被编译器视作<code>OFOR</code>节点，由四个部分组成：</p>
<ol>
<li><code>Ninit</code>：循环<strong>初始化</strong></li>
<li><code>Left</code>：循环<strong>执行条件</strong></li>
<li><code>Right</code>：循环体结束执行语句</li>
<li><code>NBody</code>：循环体</li>
</ol>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> Ninit<span class="token punctuation">;</span> Left<span class="token punctuation">;</span> Right <span class="token punctuation">{</span>
    NBody
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.36,words:2509},y:"a",t:"第五章笔记总结"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.0.chapter_summary","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.0.chapter_summary.md"]],["v-06735c8b","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.1.for_range.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<p>Golang 中的循环有两种：</p>
<ol>
<li><code>for</code></li>
<li><code>for-range</code></li>
</ol>
<p><code>for-range</code>在编译时将会被转换成普通的<code>for</code>循环，在最终编译的汇编中的结构是相同的。</p>
<h2> 5.1.1 现象</h2>
<h3> 循环永动机</h3>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	arr <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>
		arr <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

$ <span class="token keyword">go</span> run main<span class="token punctuation">.</span><span class="token keyword">go</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.07,words:1821},y:"a",t:"5.1 for and range"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.1.for_range","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.1.for_range.md"]],["v-5ae068e5","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.2.select.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<p><code>select</code> 是操作系统中的系统调用，可以同时监听多个文件描述符的可读或可写的状态。</p>
<p>使用 <code>select</code>、<code>poll</code> 和 <code>epoll</code> 等函数构建 I/O 多路复用模型可以提升程序的性能。</p>
<p>Golang 中的<code>select</code>可同时等待多个<code>channel</code>可读或者可写，在能够读取/写入之前，<code>select</code>会一直阻塞当前goroutine。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202309281646207.png" alt="Golang-Select-Channels" tabindex="0" loading="lazy"><figcaption>Golang-Select-Channels</figcaption></figure>`,r:{minutes:10.26,words:3079},y:"a",t:"5.2 select"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.2.select","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.2.select.md"]],["v-3799e97e","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.3.defer.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<h2> 5.3.1 现象</h2>
<p>使用<code>defer</code>时会出现两个常见的问题：</p>
<ol>
<li><code>defer</code>的调用时机和调用顺序</li>
<li><code>defer</code>会使用值传递的方式传参时进行预计算，导致预期结果不符</li>
</ol>
<h3> 作用域</h3>
<p><code>defer</code>语句会<strong>在函数返回之前执行</strong>，并按照<strong>后进先出</strong>的顺序执行。</p>
<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

$ <span class="token keyword">go</span> run main<span class="token punctuation">.</span><span class="token keyword">go</span>
<span class="token number">4</span>
<span class="token number">3</span>
<span class="token number">2</span>
<span class="token number">1</span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.21,words:3663},y:"a",t:"5.3 defer"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.3.defer","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.3.defer.md"]],["v-50e5a21a","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.4.panic_recover.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<p>Golang 中的<code>panic</code>和<code>recover</code>：</p>
<ul>
<li>
<p><code>panic</code> 能够改变程序的控制流，调用 <code>panic</code> 后会立刻停止执行当前函数的剩余代码，并在当前 Goroutine 中递归执行调用方的 <code>defer</code></p>
</li>
<li>
<p><code>recover</code> 可以中止 <code>panic</code> 造成的程序崩溃。它是一个<strong>只能</strong>在 <code>defer</code> 中发挥作用的函数，在其他作用域中调用不会发挥作用</p>
</li>
</ul>`,r:{minutes:4.63,words:1388},y:"a",t:"5.4 panic and recover"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.4.panic_recover","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.4.panic_recover.md"]],["v-cbcea296","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.5.make_new.html",{d:16956e8,l:"2023年9月25日",c:["golang"],e:`<p><code>make</code>和<code>new</code>都用于初始化变量：</p>
<ul>
<li><code>make</code> 的作用是初始化内置的数据结构
<ul>
<li>切片</li>
<li>哈希表</li>
<li>Channel</li>
</ul>
</li>
<li><code>new</code>的作用是根据传入的类型<strong>分配</strong>一片<strong>内存</strong>空间并<strong>返回</strong>指向这片内存空间的<strong>指针</strong></li>
</ul>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202309281924334.png" alt="golang-make-and-new" tabindex="0" loading="lazy"><figcaption>golang-make-and-new</figcaption></figure>`,r:{minutes:2.1,words:630},y:"a",t:"5.5 make and new"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.5.make_new","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.5.make_new.md"]],["v-f22856bc","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.1.context.html",{d:16961184e5,l:"2023年10月1日",c:["golang"],e:`<p><a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a>接口定义了四个方法：</p>
<ol>
<li><code>Deadline</code> ： 返回 <a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a> 被取消的时间，即完成工作的截止时间</li>
<li><code>Done</code> ：返回一个 Channel， 会在当前工作完成或者上下文被取消后关闭，多次调用 <code>Done</code> 方法会返回同一个 Channel</li>
<li><code>Err</code> ： 返回 <a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a> 结束的原因，只会在 <code>Done</code> 方法对应的 Channel 关闭时返回非空的值：
<ol>
<li>若 <a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a> 被取消，返回 <code>Canceled</code> 错误</li>
<li>若 <a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a> 超时，返回 <code>DeadlineExceeded</code> 错误</li>
</ol>
</li>
<li><code>Value</code> ：从 <a href="https://draveness.me/golang/tree/context.Context" target="_blank" rel="noopener noreferrer"><code>context.Context</code></a> 中获取键对应的值，对于同一个上下文来说，多次调用 <code>Value</code> 并传入相同的 <code>Key</code> 会返回相同的结果，该方法可以用来传递请求特定的数据</li>
</ol>`,r:{minutes:5.17,words:1551},y:"a",t:"6.1 Context"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.1.context","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.1.context.md"]],["v-3f67611c","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.2.sync-primitives.html",{d:16961184e5,l:"2023年10月1日",c:["golang"],e:`<h2> 6.2.1 基本原语</h2>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310010330458.png" alt="golang-basic-sync-primitives" tabindex="0" loading="lazy"><figcaption>golang-basic-sync-primitives</figcaption></figure>
<h3> Mutex</h3>
<p><a href="https://draveness.me/golang/tree/sync.Mutex" target="_blank" rel="noopener noreferrer"><code>sync.Mutex</code></a>：</p>`,r:{minutes:19.71,words:5913},y:"a",t:"6.2 同步原语"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.2.sync-primitives","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.2.sync-primitives.md"]],["v-5cebfcec","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.3.timer.html",{d:16961184e5,l:"2023年10月1日",c:["golang"],e:`<h2> 6.3.1 设计原理</h2>
<p>Golang 的计时器经历了几次版本迭代：</p>
<ol>
<li>v1.9：所有计时器有全局唯一的四叉堆维护</li>
<li>v1.10~v1.13：全局使用64个四叉堆维护全部的计时器，每个处理器（P）创建的计时器会由对应的四叉堆维护</li>
<li>v1.14：每个处理器单独管理计时器并通过网络轮询触发</li>
</ol>
<h3> 全局四叉堆</h3>
<p>Go 1.10 之前的计时器都使用最小四叉堆实现，所有的计时器都会存储在如下所示的结构体 <a href="https://draveness.me/golang/tree/runtime.timers:093adee" target="_blank" rel="noopener noreferrer"><code>runtime.timers:093adee</code></a> 中：</p>`,r:{minutes:10.7,words:3210},y:"a",t:"6.3 计时器"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.3.timer","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.3.timer.md"]],["v-35c742aa","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.4.channel.html",{d:16961184e5,l:"2023年10月1日",c:["golang"],e:`<p><strong>不要通过共享内存的方式进行通信，而是应该通过通信的方式共享内存。</strong></p>
<h2> 6.4.1 设计原理</h2>
<p>常见的多线程通信是通过<strong>共享内存</strong>来进行的：</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310012235600.png" alt="shared-memory" tabindex="0" loading="lazy"><figcaption>shared-memory</figcaption></figure>`,r:{minutes:9.27,words:2780},y:"a",t:"6.4 Channel"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.4.channel","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.4.channel.md"]],["v-6cc31111","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.5.goroutine.html",{d:16962048e5,l:"2023年10月2日",c:["golang"],e:`<p><strong>线程</strong>是操作系统调度的基本单位，多个线程可以属于同一<strong>进程</strong>并共享内存空间。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310020422870.png" alt="process-and-threads" tabindex="0" loading="lazy"><figcaption>process-and-threads</figcaption></figure>
<p>Golang 的调度器通过使用与CPU数量相同的线程减少线程频繁切换的内存开销，同时在每个线程上执行开销更小的 <strong>goroutine</strong> 来降低操作系统和硬件的负担。</p>`,r:{minutes:13.06,words:3918},y:"a",t:"6.5 调度器"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.5.goroutine","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.5.goroutine.md"]],["v-62f503b0","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.6.netpoll.html",{d:16962048e5,l:"2023年10月2日",c:["golang"],e:`<h2> 6.6.1 设计原理</h2>
<h3> I/O 模型</h3>
<p>操作系统中包含：</p>
<ol>
<li>阻塞 I/O</li>
<li>非阻塞 I/O</li>
<li>信号驱动 I/O</li>
<li>异步 I/O</li>
<li>I/O 多路复用</li>
</ol>
<h4> 阻塞 I/O</h4>
<p>阻塞 I/O 是最常见的 I/O 模型，通过 <code>read</code> 或者 <code>write</code> 等系统调用读写文件或者网络时，应用程序会被阻塞：</p>
<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token class-name">ssize_t</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ssize_t</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">int</span> fd<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> nbytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.19,words:3658},y:"a",t:"6.6 网络轮询器"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.6.netpoll","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.6.netpoll.md"]],["v-4d657308","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.7.sysmon.html",{d:16961184e5,l:"2023年10月1日",c:["golang"],e:`<p>系统监控是 Go 语言运行时的重要组成部分，它会每隔一段时间检查 Go 语言运行时，确保程序没有进入异常状态。</p>
<h2> 6.7.1 设计原理</h2>
<p>在支持多任务的操作系统中，守护进程是在后台运行的计算机程序，不会由用户直接操作，一般会在操作系统启动时自动运行。</p>
<p>Go 语言的系统监控在内部启动了一个不会中止的循环，在循环的内部会轮询网络、抢占长期运行或者处于系统调用的 Goroutine 以及触发垃圾回收，通过这些行为，能够让系统的运行状态变得更健康。</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310030209450.png" alt="golang-system-monitor" tabindex="0" loading="lazy"><figcaption>golang-system-monitor</figcaption></figure>`,r:{minutes:7.69,words:2307},y:"a",t:"6.7 系统监控"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.7.sysmon","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.7.sysmon.md"]],["v-1bc274ab","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.1.malloc.html",{d:16962048e5,l:"2023年10月2日",c:["golang"],e:`<p>程序中的数据和变量都会被分配到程序所在的虚拟内存中，内存空间包含两个重要区域：</p>
<ul>
<li>栈区（Stack）
<strong>函数调用</strong>的参数、返回值以及局部变量大都会被分配到栈上，这部分内存会由编译器进行管理</li>
<li>堆区（Heap）
堆中的对象由内存分配器分配并由垃圾收集器回收</li>
</ul>
<h2> 7.1.1 设计原理</h2>
<p>内存管理一般包含三个不同的组件：</p>
<ol>
<li>用户程序（Mutator）</li>
<li>分配器（Allocator）</li>
<li>收集器（Collector）</li>
</ol>`,r:{minutes:18.93,words:5680},y:"a",t:"7.1 内存分配器"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.1.malloc","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.1.malloc.md"]],["v-b3a58990","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.2.gc.html",{d:16962048e5,l:"2023年10月2日",c:["golang"],e:`<h2> 7.2.1 设计原理</h2>
<p>Golang 的内存管理组件：</p>
<figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310030304479.png" alt="mutator-allocator-collector" tabindex="0" loading="lazy"><figcaption>mutator-allocator-collector</figcaption></figure>
<p>如上图所示，用户程序（Mutator）会通过内存分配器（Allocator）在堆上申请内存，而垃圾收集器（Collector）负责回收堆上的内存空间，内存分配器和垃圾收集器共同管理着程序中的堆内存空间。</p>`,r:{minutes:19.9,words:5970},y:"a",t:"7.2 垃圾收集器"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.2.gc","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.2.gc.md"]],["v-35640268","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.3.stackmem.html",{d:16962048e5,l:"2023年10月2日",c:["golang"],e:`<h2> 7.3.1 设计原理</h2>
<p>栈内存一般由编译器<strong>自动分配</strong>和<strong>释放</strong>，其中存储着函数的入参以及局部变量，这些参数会随着函数的创建而创建，函数的返回而消亡。</p>
<h3> 寄存器</h3>
<p>寄存器是 CPU 中的稀缺资源,存储能力非常有限，但是能提供最快的读写速度，充分利用寄存器的速度可以构建高性能的应用程序。</p>
<p>栈寄存器是 CPU 寄存器中的一种，它的主要作用是跟踪函数的调用栈，Go 语言的汇编代码包含 BP 和 SP 两个栈寄存器，分别存储了栈的<strong>基址指针</strong>和<strong>栈顶</strong>的地址，BP 和 SP 之间的内存就是当前函数的调用栈。</p>`,r:{minutes:10.53,words:3159},y:"a",t:"7.3 栈空间内存管理"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.3.stackmem","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/07.3.stackmem.md"]],["v-3706649a","/404.html",{y:"p",t:""},["/404"]],["v-1559ca3e","/tool/",{y:"p",t:"Tool"},["/tool/index.html"]],["v-cfbd3fb6","/blog/golang/",{y:"p",t:"Golang"},["/blog/golang/index.html"]],["v-4bea5ddf","/blog/raspberry-pi/",{y:"p",t:"Raspberry Pi"},["/blog/raspberry-pi/index.html"]],["v-47cde344","/blog/vuepress/",{y:"p",t:"Vuepress"},["/blog/vuepress/index.html"]],["v-71f9b647","/cheatsheet/git/",{y:"p",t:"Git"},["/cheatsheet/git/index.html"]],["v-ba749eac","/cheatsheet/",{y:"p",t:"Cheatsheet"},["/cheatsheet/index.html"]],["v-7c278c2f","/cheatsheet/golang/",{y:"p",t:"Golang"},["/cheatsheet/golang/index.html"]],["v-3a285236","/cheatsheet/linux/",{y:"p",t:"Linux"},["/cheatsheet/linux/index.html"]],["v-445d5b2a","/cheatsheet/network/",{y:"p",t:"Network"},["/cheatsheet/network/index.html"]],["v-c8296fee","/en/posts/",{y:"p",t:"Posts"},["/en/posts/index.html"]],["v-a152a89c","/interview/golang/",{y:"p",t:"Golang"},["/interview/golang/index.html"]],["v-71b3ae87","/interview/",{y:"p",t:"Interview"},["/interview/index.html"]],["v-4201c114","/interview/mysql/",{y:"p",t:"Mysql"},["/interview/mysql/index.html"]],["v-0862c58e","/interview/net/",{y:"p",t:"Net"},["/interview/net/index.html"]],["v-4969375b","/interview/redis/",{y:"p",t:"Redis"},["/interview/redis/index.html"]],["v-35c040d5","/leetcode/solution/",{y:"p",t:"Solution"},["/leetcode/solution/index.html"]],["v-31987621","/leetcode/",{y:"p",t:"Leetcode"},["/leetcode/index.html"]],["v-7a975d53","/note/c-sharp/",{y:"p",t:"C Sharp"},["/note/c-sharp/index.html"]],["v-50099075","/note/golang/",{y:"p",t:"Golang"},["/note/golang/index.html"]],["v-88ff580e","/note/nginx/",{y:"p",t:"Nginx"},["/note/nginx/index.html"]],["v-27d196a6","/note/typescript/",{y:"p",t:"Typescript"},["/note/typescript/index.html"]],["v-aac0ad50","/blog/algorithm/dynamic-programming/",{y:"p",t:"Dynamic Programming"},["/blog/algorithm/dynamic-programming/index.html"]],["v-01af5e14","/blog/algorithm/",{y:"p",t:"Algorithm"},["/blog/algorithm/index.html"]],["v-43e50cbd","/blog/algorithm/sort/",{y:"p",t:"Sort"},["/blog/algorithm/sort/index.html"]],["v-1a7ec4e8","/blog/golang/go-gin-blog/",{y:"p",t:"Go Gin Blog"},["/blog/golang/go-gin-blog/index.html"]],["v-2aa888f8","/blog/golang/how/",{y:"p",t:"How"},["/blog/golang/how/index.html"]],["v-2a9b19e8","/blog/golang/why/",{y:"p",t:"Why"},["/blog/golang/why/index.html"]],["v-0852455e","/en/posts/apple/",{y:"p",t:"Apple"},["/en/posts/apple/index.html"]],["v-1d22e941","/en/posts/banana/",{y:"p",t:"Banana"},["/en/posts/banana/index.html"]],["v-fa453234","/leetcode/category/array/",{y:"p",t:"Array"},["/leetcode/category/array/index.html"]],["v-634e7c20","/leetcode/category/",{y:"p",t:"Category"},["/leetcode/category/index.html"]],["v-206d929f","/leetcode/category/hashtable/",{y:"p",t:"Hashtable"},["/leetcode/category/hashtable/index.html"]],["v-6fe9401f","/note/docker/docker-compose/",{y:"p",t:"Docker Compose"},["/note/docker/docker-compose/index.html"]],["v-9e47132a","/note/docker/",{y:"p",t:"Docker"},["/note/docker/index.html"]],["v-88b7e15c","/note/docker/docker-practice/",{y:"p",t:"Docker Practice"},["/note/docker/docker-practice/index.html"]],["v-45cda98f","/note/docker/docker-tutorial/",{y:"p",t:"Docker Tutorial"},["/note/docker/docker-tutorial/index.html"]],["v-309ea81e","/note/golang/concurrency/",{y:"p",t:"Concurrency"},["/note/golang/concurrency/index.html"]],["v-28d2d5dc","/note/golang/go-gin-blog/",{y:"p",t:"Go Gin Blog"},["/note/golang/go-gin-blog/index.html"]],["v-62622100","/note/golang/golang-daily-lib/",{y:"p",t:"Golang Daily Lib"},["/note/golang/golang-daily-lib/index.html"]],["v-5611d7d2","/note/golang/gorm/",{y:"p",t:"Gorm"},["/note/golang/gorm/index.html"]],["v-7697530d","/note/golang/uber-go-zap/",{y:"p",t:"Uber Go Zap"},["/note/golang/uber-go-zap/index.html"]],["v-2661e0da","/note/javascript/tutorial/",{y:"p",t:"Tutorial"},["/note/javascript/tutorial/index.html"]],["v-4a15e6be","/note/javascript/",{y:"p",t:"Javascript"},["/note/javascript/index.html"]],["v-54b265b4","/note/linux/vim/",{y:"p",t:"Vim"},["/note/linux/vim/index.html"]],["v-8f959c42","/note/linux/",{y:"p",t:"Linux"},["/note/linux/index.html"]],["v-08e328a3","/note/rpc/gRPC/",{y:"p",t:"G R P C"},["/note/rpc/gRPC/index.html"]],["v-65f6a00e","/note/rpc/",{y:"p",t:"Rpc"},["/note/rpc/index.html"]],["v-35f72fa3","/note/rpc/protocol-buffers/",{y:"p",t:"Protocol Buffers"},["/note/rpc/protocol-buffers/index.html"]],["v-2f5276aa","/note/typescript/tutorial/",{y:"p",t:"Tutorial"},["/note/typescript/tutorial/index.html"]],["v-9561529e","/note/vue/vue-2/",{y:"p",t:"Vue 2"},["/note/vue/vue-2/index.html"]],["v-65f8848d","/note/vue/",{y:"p",t:"Vue"},["/note/vue/index.html"]],["v-bc1b8554","/reading/golang/concurrency-in-go/",{y:"p",t:"Concurrency in Go"},["/reading/golang/concurrency-in-go/index.html"]],["v-28dacb7d","/reading/golang/",{y:"p",t:"Golang"},["/reading/golang/index.html"]],["v-7a30c96c","/reading/nosql/The_Design_and_Implementation_of_Redis/",{y:"p",t:"The Design And Implementation of Redis"},["/reading/nosql/The_Design_and_Implementation_of_Redis/index.html"]],["v-260ce97e","/reading/nosql/",{y:"p",t:"Nosql"},["/reading/nosql/index.html"]],["v-1e2a6757","/note/golang/github-repos/7days-golang/",{y:"p",t:"7days Golang"},["/note/golang/github-repos/7days-golang/index.html"]],["v-32a7a3e3","/note/golang/github-repos/",{y:"p",t:"Github Repos"},["/note/golang/github-repos/index.html"]],["v-1e3de95e","/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/",{y:"p",t:"The Design And Implementation of Golang"},["/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/index.html"]],["v-0674fba9","/note/golang/open-source-books/",{y:"p",t:"Open Source Books"},["/note/golang/open-source-books/index.html"]],["v-3efe7f8e","/note/golang/open-source-books/advanced-go-programming/",{y:"p",t:"Advanced Go Programming"},["/note/golang/open-source-books/advanced-go-programming/index.html"]],["v-77926428","/note/golang/open-source-books/high-performance-go/",{y:"p",t:"High Performance Go"},["/note/golang/open-source-books/high-performance-go/index.html"]],["v-35b08162","/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/",{y:"p",t:"01 Fundamentals"},["/reading/algorithm/algorithms_in_c_part_1-4/01_fundamentals/index.html"]],["v-3af528ec","/reading/algorithm/algorithms_in_c_part_1-4/",{y:"p",t:"Algorithms in C Part 1 4"},["/reading/algorithm/algorithms_in_c_part_1-4/index.html"]],["v-89bbd888","/reading/algorithm/",{y:"p",t:"Algorithm"},["/reading/algorithm/index.html"]],["v-774c21eb","/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/",{y:"p",t:"02 Data Structures"},["/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/index.html"]],["v-79f6cfb7","/reading/golang/7-days-golang/01-Gee-Web/",{y:"p",t:"01 Gee Web"},["/reading/golang/7-days-golang/01-Gee-Web/index.html"]],["v-7ea44194","/reading/golang/7-days-golang/",{y:"p",t:"7 Days Golang"},["/reading/golang/7-days-golang/index.html"]],["v-884d4ab4","/reading/golang/high-performance-go/01-performance-analysis/",{y:"p",t:"01 Performance Analysis"},["/reading/golang/high-performance-go/01-performance-analysis/index.html"]],["v-dab3fc08","/reading/golang/high-performance-go/",{y:"p",t:"High Performance Go"},["/reading/golang/high-performance-go/index.html"]],["v-34128616","/reading/golang/high-performance-go/02-datastructure/",{y:"p",t:"02 Datastructure"},["/reading/golang/high-performance-go/02-datastructure/index.html"]],["v-1706a50a","/reading/golang/high-performance-go/03-concurrency/",{y:"p",t:"03 Concurrency"},["/reading/golang/high-performance-go/03-concurrency/index.html"]],["v-24361689","/reading/golang/high-performance-go/04-compile/",{y:"p",t:"04 Compile"},["/reading/golang/high-performance-go/04-compile/index.html"]],["v-008537c4","/note/golang/github-repos/flower-corp/minidb/",{y:"p",t:"Minidb"},["/note/golang/github-repos/flower-corp/minidb/index.html"]],["v-1d996994","/note/golang/github-repos/flower-corp/",{y:"p",t:"Flower Corp"},["/note/golang/github-repos/flower-corp/index.html"]],["v-6b88e44e","/note/golang/open-source-books/high-performance-go/performance-analysis/",{y:"p",t:"Performance Analysis"},["/note/golang/open-source-books/high-performance-go/performance-analysis/index.html"]],["v-a9bb235a","/note/golang/open-source-books/the-way-to-go/04/",{y:"p",t:"04"},["/note/golang/open-source-books/the-way-to-go/04/index.html"]],["v-7f9b2d58","/note/golang/open-source-books/the-way-to-go/",{y:"p",t:"The Way to Go"},["/note/golang/open-source-books/the-way-to-go/index.html"]],["v-a9bb231c","/note/golang/open-source-books/the-way-to-go/05/",{y:"p",t:"05"},["/note/golang/open-source-books/the-way-to-go/05/index.html"]],["v-a9bb22de","/note/golang/open-source-books/the-way-to-go/06/",{y:"p",t:"06"},["/note/golang/open-source-books/the-way-to-go/06/index.html"]],["v-a9bb22a0","/note/golang/open-source-books/the-way-to-go/07/",{y:"p",t:"07"},["/note/golang/open-source-books/the-way-to-go/07/index.html"]],["v-a9bb2262","/note/golang/open-source-books/the-way-to-go/08/",{y:"p",t:"08"},["/note/golang/open-source-books/the-way-to-go/08/index.html"]],["v-a9bb2224","/note/golang/open-source-books/the-way-to-go/09/",{y:"p",t:"09"},["/note/golang/open-source-books/the-way-to-go/09/index.html"]],["v-a9bb1cd0","/note/golang/open-source-books/the-way-to-go/10/",{y:"p",t:"10"},["/note/golang/open-source-books/the-way-to-go/10/index.html"]],["v-a9bb1c92","/note/golang/open-source-books/the-way-to-go/11/",{y:"p",t:"11"},["/note/golang/open-source-books/the-way-to-go/11/index.html"]],["v-a9bb1c16","/note/golang/open-source-books/the-way-to-go/13/",{y:"p",t:"13"},["/note/golang/open-source-books/the-way-to-go/13/index.html"]],["v-a9bb1bd8","/note/golang/open-source-books/the-way-to-go/14/",{y:"p",t:"14"},["/note/golang/open-source-books/the-way-to-go/14/index.html"]],["v-64259ab4","/note/vue/vue-3/fundamentals/01-fundamentals/",{y:"p",t:"01 Fundamentals"},["/note/vue/vue-3/fundamentals/01-fundamentals/index.html"]],["v-b379315e","/note/vue/vue-3/fundamentals/",{y:"p",t:"Fundamentals"},["/note/vue/vue-3/fundamentals/index.html"]],["v-95615260","/note/vue/vue-3/",{y:"p",t:"Vue 3"},["/note/vue/vue-3/index.html"]],["v-46979068","/note/vue/vue-3/fundamentals/02-component/",{y:"p",t:"02 Component"},["/note/vue/vue-3/fundamentals/02-component/index.html"]],["v-dc7d13d2","/reading/algorithm/offer_oriented/AL_DS/01_integer/",{y:"p",t:"01 Integer"},["/reading/algorithm/offer_oriented/AL_DS/01_integer/index.html"]],["v-540d63d0","/reading/algorithm/offer_oriented/AL_DS/",{y:"p",t:"A L D S"},["/reading/algorithm/offer_oriented/AL_DS/index.html"]],["v-79d0e8a8","/reading/algorithm/offer_oriented/",{y:"p",t:"Offer Oriented"},["/reading/algorithm/offer_oriented/index.html"]],["v-7dc276bb","/reading/algorithm/offer_oriented/AL_DS/02_array/",{y:"p",t:"02 Array"},["/reading/algorithm/offer_oriented/AL_DS/02_array/index.html"]],["v-eb23a7cc","/reading/algorithm/offer_oriented/AL_DS/03_string/",{y:"p",t:"03 String"},["/reading/algorithm/offer_oriented/AL_DS/03_string/index.html"]],["v-6caeff4e","/reading/algorithm/offer_oriented/AL_DS/04_List/",{y:"p",t:"04 List"},["/reading/algorithm/offer_oriented/AL_DS/04_List/index.html"]],["v-1701a011","/reading/algorithm/offer_oriented/AL_DS/05_hashtable/",{y:"p",t:"05 Hashtable"},["/reading/algorithm/offer_oriented/AL_DS/05_hashtable/index.html"]],["v-3c12dfe8","/reading/algorithm/offer_oriented/AL_DS/06_stack/",{y:"p",t:"06 Stack"},["/reading/algorithm/offer_oriented/AL_DS/06_stack/index.html"]],["v-becaf144","/reading/algorithm/offer_oriented/AL_DS/07_queue/",{y:"p",t:"07 Queue"},["/reading/algorithm/offer_oriented/AL_DS/07_queue/index.html"]],["v-427f7972","/reading/algorithm/offer_oriented/AL_DS/08_tree/",{y:"p",t:"08 Tree"},["/reading/algorithm/offer_oriented/AL_DS/08_tree/index.html"]],["v-76b6a425","/reading/algorithm/offer_oriented/AL_DS/09_heap/",{y:"p",t:"09 Heap"},["/reading/algorithm/offer_oriented/AL_DS/09_heap/index.html"]],["v-032edb4d","/reading/algorithm/offer_oriented/AL_DS/10_trie/",{y:"p",t:"10 Trie"},["/reading/algorithm/offer_oriented/AL_DS/10_trie/index.html"]],["v-74257a30","/reading/algorithm/offer_oriented/AL_DS/11_binary_search/",{y:"p",t:"11 Binary Search"},["/reading/algorithm/offer_oriented/AL_DS/11_binary_search/index.html"]],["v-6cec00cb","/reading/algorithm/offer_oriented/AL_DS/12_sort/",{y:"p",t:"12 Sort"},["/reading/algorithm/offer_oriented/AL_DS/12_sort/index.html"]],["v-0d9eda0c","/reading/algorithm/offer_oriented/AL_DS/13_backtracking/",{y:"p",t:"13 Backtracking"},["/reading/algorithm/offer_oriented/AL_DS/13_backtracking/index.html"]],["v-d621dc0c","/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/",{y:"p",t:"14 Dynamic Programming"},["/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/index.html"]],["v-022f2d5c","/reading/algorithm/offer_oriented/AL_DS/15-graph/",{y:"p",t:"15 Graph"},["/reading/algorithm/offer_oriented/AL_DS/15-graph/index.html"]],["v-61c4714f","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/",{y:"p",t:"Ch03 Datastructure"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch03-datastructure/index.html"]],["v-2149e688","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/",{y:"p",t:"Part2 Foundation"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/index.html"]],["v-84faf59c","/reading/golang/the-design-and-implementation-of-golang/",{y:"p",t:"The Design And Implementation of Golang"},["/reading/golang/the-design-and-implementation-of-golang/index.html"]],["v-261404a9","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/",{y:"p",t:"Ch04 Basic"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch04-basic/index.html"]],["v-6afb496d","/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/",{y:"p",t:"Ch05 Keyword"},["/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/index.html"]],["v-1c3be1e6","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/",{y:"p",t:"06 Concurrency"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/index.html"]],["v-7eec0d96","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/",{y:"p",t:"Part3 Runtime"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/index.html"]],["v-72b940c4","/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/",{y:"p",t:"07 Memory"},["/reading/golang/the-design-and-implementation-of-golang/part3-runtime/07-memory/index.html"]],["v-5decfa84","/en/category/",{y:"p",t:"Category",I:0},["/en/category/index.html"]],["v-075c6c62","/en/tag/",{y:"p",t:"Tag",I:0},["/en/tag/index.html"]],["v-506407f4","/en/article/",{y:"p",t:"Articles",I:0},["/en/article/index.html"]],["v-37a8c5a0","/en/star/",{y:"p",t:"Star",I:0},["/en/star/index.html"]],["v-0379cba1","/en/timeline/",{y:"p",t:"Timeline",I:0},["/en/timeline/index.html"]],["v-0fe52c37","/en/category/guide/",{y:"p",t:"Guide Category",I:0},["/en/category/guide/index.html"]],["v-c6edb6ae","/en/tag/disable/",{y:"p",t:"disable Tag",I:0},["/en/tag/disable/index.html"]],["v-e52c881c","/article/",{y:"p",t:"文章",I:0},["/article/index.html"]],["v-154dc4c4","/star/",{y:"p",t:"收藏",I:0},["/star/index.html"]],["v-01560935","/timeline/",{y:"p",t:"时间轴",I:0},["/timeline/index.html"]],["v-02c6a6b2","/en/category/cherry/",{y:"p",t:"Cherry Category",I:0},["/en/category/cherry/index.html"]],["v-0017792c","/en/tag/encryption/",{y:"p",t:"encryption Tag",I:0},["/en/tag/encryption/index.html"]],["v-2e75e8de","/en/category/dragon-fruit/",{y:"p",t:"Dragon Fruit Category",I:0},["/en/category/dragon-fruit/index.html"]],["v-6f7bfa04","/en/tag/markdown/",{y:"p",t:"Markdown Tag",I:0},["/en/tag/markdown/index.html"]],["v-0e0b961f","/en/category/fruit/",{y:"p",t:"Fruit Category",I:0},["/en/category/fruit/index.html"]],["v-7e751551","/en/tag/page-config/",{y:"p",t:"Page config Tag",I:0},["/en/tag/page-config/index.html"]],["v-b6ff5888","/en/category/strawberry/",{y:"p",t:"Strawberry Category",I:0},["/en/category/strawberry/index.html"]],["v-29e33f95","/en/tag/guide/",{y:"p",t:"Guide Tag",I:0},["/en/tag/guide/index.html"]],["v-dbaf7c9c","/en/category/vegetable/",{y:"p",t:"Vegetable Category",I:0},["/en/category/vegetable/index.html"]],["v-1e3e75c0","/en/tag/red/",{y:"p",t:"red Tag",I:0},["/en/tag/red/index.html"]],["v-0564ef99","/en/category/apple/",{y:"p",t:"Apple Category",I:0},["/en/category/apple/index.html"]],["v-3de926ea","/en/tag/small/",{y:"p",t:"small Tag",I:0},["/en/tag/small/index.html"]],["v-7b34f334","/en/category/banana/",{y:"p",t:"Banana Category",I:0},["/en/category/banana/index.html"]],["v-3c599b43","/en/tag/round/",{y:"p",t:"round Tag",I:0},["/en/tag/round/index.html"]],["v-5bc93818","/category/",{y:"p",t:"分类",I:0},["/category/index.html"]],["v-1e4ce2de","/en/tag/big/",{y:"p",t:"big Tag",I:0},["/en/tag/big/index.html"]],["v-58c4e07f","/category/tool/",{y:"p",t:"tool 分类",I:0},["/category/tool/index.html"]],["v-a0d528ce","/en/tag/yellow/",{y:"p",t:"yellow Tag",I:0},["/en/tag/yellow/index.html"]],["v-e9a125fe","/category/golang/",{y:"p",t:"golang 分类",I:0},["/category/golang/index.html"]],["v-231414e4","/en/tag/curly/",{y:"p",t:"curly Tag",I:0},["/en/tag/curly/index.html"]],["v-9c48d85a","/category/linux/",{y:"p",t:"linux 分类",I:0},["/category/linux/index.html"]],["v-2ae80a11","/en/tag/long/",{y:"p",t:"long Tag",I:0},["/en/tag/long/index.html"]],["v-7d1a55bb","/category/raspberry-pi/",{y:"p",t:"raspberry pi 分类",I:0},["/category/raspberry-pi/index.html"]],["v-744d024e","/tag/",{y:"p",t:"标签",I:0},["/tag/index.html"]],["v-27fb5a12","/category/docker/",{y:"p",t:"docker 分类",I:0},["/category/docker/index.html"]],["v-2926fcc3","/tag/sort/",{y:"p",t:"sort 标签",I:0},["/tag/sort/index.html"]],["v-95b29426","/category/nginx/",{y:"p",t:"nginx 分类",I:0},["/category/nginx/index.html"]],["v-3f8dd7a0","/tag/clash/",{y:"p",t:"clash 标签",I:0},["/tag/clash/index.html"]],["v-57d268b0","/category/cicd/",{y:"p",t:"CI/CD 分类",I:0},["/category/cicd/index.html"]],["v-3a057524","/tag/github-actions/",{y:"p",t:"Github actions 标签",I:0},["/tag/github-actions/index.html"]],["v-43d7543a","/category/vuepress/",{y:"p",t:"vuepress 分类",I:0},["/category/vuepress/index.html"]],["v-08ebf6aa","/tag/slice/",{y:"p",t:"slice 标签",I:0},["/tag/slice/index.html"]],["v-65efd6b5","/category/git/",{y:"p",t:"git 分类",I:0},["/category/git/index.html"]],["v-78b5f603","/tag/tutorial/",{y:"p",t:"Tutorial 标签",I:0},["/tag/tutorial/index.html"]],["v-bd055baa","/category/cheatsheet/",{y:"p",t:"cheatsheet 分类",I:0},["/category/cheatsheet/index.html"]],["v-16e1a3ee","/tag/endless/",{y:"p",t:"endless 标签",I:0},["/tag/endless/index.html"]],["v-a074e84e","/category/network/",{y:"p",t:"network 分类",I:0},["/category/network/index.html"]],["v-b310d59e","/tag/gin/",{y:"p",t:"gin 标签",I:0},["/tag/gin/index.html"]],["v-dc8c5890","/category/algorithm/",{y:"p",t:"algorithm 分类",I:0},["/category/algorithm/index.html"]],["v-067f6802","/tag/go-jwt/",{y:"p",t:"go-jwt 标签",I:0},["/tag/go-jwt/index.html"]],["v-58706565","/category/note/",{y:"p",t:"Note 分类",I:0},["/category/note/index.html"]],["v-b30db0d4","/tag/jwt/",{y:"p",t:"jwt 标签",I:0},["/tag/jwt/index.html"]],["v-3d18303b","/category/c_/",{y:"p",t:"C# 分类",I:0},["/category/c_/index.html"]],["v-03854a35","/tag/go-gin-blog/",{y:"p",t:"go-gin-blog 标签",I:0},["/tag/go-gin-blog/index.html"]],["v-54c4d176","/category/frontend/",{y:"p",t:"Frontend 分类",I:0},["/category/frontend/index.html"]],["v-00817fb3","/tag/viper/",{y:"p",t:"viper 标签",I:0},["/tag/viper/index.html"]],["v-6c5e4d32","/category/typescript/",{y:"p",t:"TypeScript 分类",I:0},["/category/typescript/index.html"]],["v-287de1de","/tag/gorm/",{y:"p",t:"gorm 标签",I:0},["/tag/gorm/index.html"]],["v-65f6d381","/category/vue/",{y:"p",t:"vue 分类",I:0},["/category/vue/index.html"]],["v-b3024e96","/tag/why/",{y:"p",t:"why 标签",I:0},["/tag/why/index.html"]],["v-9717cc36","/category/mysql/",{y:"p",t:"mysql 分类",I:0},["/category/mysql/index.html"]],["v-45a92e78","/tag/array/",{y:"p",t:"array 标签",I:0},["/tag/array/index.html"]],["v-011c83e2","/category/leetcode/",{y:"p",t:"leetcode 分类",I:0},["/category/leetcode/index.html"]],["v-d36ddc48","/tag/docker-compose/",{y:"p",t:"docker compose 标签",I:0},["/tag/docker-compose/index.html"]],["v-e2bac56c","/category/javascript/",{y:"p",t:"JavaScript 分类",I:0},["/category/javascript/index.html"]],["v-b310b71a","/tag/gmp/",{y:"p",t:"GMP 标签",I:0},["/tag/gmp/index.html"]],["v-65f4ef02","/category/rpc/",{y:"p",t:"rpc 分类",I:0},["/category/rpc/index.html"]],["v-1e110772","/tag/golang-daily-lib/",{y:"p",t:"golang daily lib 标签",I:0},["/tag/golang-daily-lib/index.html"]],["v-ab4b264e","/category/protocol-buffers/",{y:"p",t:"protocol buffers 分类",I:0},["/category/protocol-buffers/index.html"]],["v-b2ffcb18","/tag/zap/",{y:"p",t:"zap 标签",I:0},["/tag/zap/index.html"]],["v-8848dfa8","/category/redis/",{y:"p",t:"Redis 分类",I:0},["/category/redis/index.html"]],["v-b30332ba","/tag/vim/",{y:"p",t:"vim 标签",I:0},["/tag/vim/index.html"]],["v-bab790d4","/category/clang/",{y:"p",t:"clang 分类",I:0},["/category/clang/index.html"]],["v-287f3643","/tag/grpc/",{y:"p",t:"grpc 标签",I:0},["/tag/grpc/index.html"]],["v-6af60407","/category/data-structure/",{y:"p",t:"data structure 分类",I:0},["/category/data-structure/index.html"]],["v-4b0ad344","/tag/vue-cli/",{y:"p",t:"vue-cli 标签",I:0},["/tag/vue-cli/index.html"]],["v-94c7f10c","/category/nosql/",{y:"p",t:"NoSql 分类",I:0},["/category/nosql/index.html"]],["v-3fb58c9e","/tag/vue-router/",{y:"p",t:"vue router 标签",I:0},["/tag/vue-router/index.html"]],["v-2953cd2f","/tag/vuex/",{y:"p",t:"vuex 标签",I:0},["/tag/vuex/index.html"]],["v-b306110a","/tag/sds/",{y:"p",t:"SDS 标签",I:0},["/tag/sds/index.html"]],["v-546163eb","/tag/linked-list/",{y:"p",t:"Linked List 标签",I:0},["/tag/linked-list/index.html"]],["v-2850a9ab","/tag/dict/",{y:"p",t:"dict 标签",I:0},["/tag/dict/index.html"]],["v-f841e7a0","/tag/string/",{y:"p",t:"string 标签",I:0},["/tag/string/index.html"]],["v-0ffafb8a","/tag/strings/",{y:"p",t:"strings 标签",I:0},["/tag/strings/index.html"]],["v-337bd5ac","/tag/minidb/",{y:"p",t:"minidb 标签",I:0},["/tag/minidb/index.html"]]];var Qt=y({name:"Vuepress",setup(){const n=Ni();return()=>i(n.value)}}),a0=()=>e0.reduce((n,[a,t,s,o])=>(n.push({name:a,path:t,component:Qt,meta:s},...o.map(l=>({path:l,redirect:t}))),n),[{name:"404",path:"/:catchAll(.*)",component:Qt}]),t0=Vi,s0=()=>{const n=xi({history:t0(ua("/")),routes:a0(),scrollBehavior:(a,t,s)=>s||(a.hash?{el:a.hash}:{top:0})});return n.beforeResolve(async(a,t)=>{var s;(a.path!==t.path||t===Ri)&&([hn.value]=await Promise.all([un.resolvePageData(a.name),(s=ts[a.name])==null?void 0:s.__asyncLoader()]))}),n},o0=n=>{n.component("ClientOnly",De),n.component("Content",ma)},i0=(n,a,t)=>{const s=w(a.currentRoute.value.path);S(()=>a.currentRoute.value.path,g=>s.value=g);const o=h(()=>un.resolveLayouts(t)),l=h(()=>un.resolveRouteLocale(zn.value.locales,s.value)),c=h(()=>un.resolveSiteLocaleData(zn.value,l.value)),p=h(()=>un.resolvePageFrontmatter(hn.value)),u=h(()=>un.resolvePageHeadTitle(hn.value,c.value)),d=h(()=>un.resolvePageHead(u.value,p.value,c.value)),v=h(()=>un.resolvePageLang(hn.value)),m=h(()=>un.resolvePageLayout(hn.value,o.value));return n.provide(ji,o),n.provide(os,p),n.provide(rs,u),n.provide(is,d),n.provide(ls,v),n.provide(cs,m),n.provide(va,l),n.provide(ds,c),Object.defineProperties(n.config.globalProperties,{$frontmatter:{get:()=>p.value},$head:{get:()=>d.value},$headTitle:{get:()=>u.value},$lang:{get:()=>v.value},$page:{get:()=>hn.value},$routeLocale:{get:()=>l.value},$site:{get:()=>zn.value},$siteLocale:{get:()=>c.value},$withBase:{get:()=>F}}),{layouts:o,pageData:hn,pageFrontmatter:p,pageHead:d,pageHeadTitle:u,pageLang:v,pageLayout:m,routeLocale:l,siteData:zn,siteLocaleData:c}},r0=()=>{const n=Bi(),a=se(),t=w([]),s=()=>{n.value.forEach(l=>{const c=l0(l);c&&t.value.push(c)})},o=()=>{document.documentElement.lang=a.value,t.value.forEach(l=>{l.parentNode===document.head&&document.head.removeChild(l)}),t.value.splice(0,t.value.length),n.value.forEach(l=>{const c=c0(l);c!==null&&(document.head.appendChild(c),t.value.push(c))})};In(Hi,o),R(()=>{s(),o(),S(()=>n.value,()=>o())})},l0=([n,a,t=""])=>{const s=Object.entries(a).map(([p,u])=>U(u)?`[${p}=${JSON.stringify(u)}]`:u===!0?`[${p}]`:"").join(""),o=`head > ${n}${s}`;return Array.from(document.querySelectorAll(o)).find(p=>p.innerText===t)||null},c0=([n,a,t])=>{if(!U(n))return null;const s=document.createElement(n);return te(a)&&Object.entries(a).forEach(([o,l])=>{U(l)?s.setAttribute(o,l):l===!0&&s.setAttribute(o,"")}),U(t)&&s.appendChild(document.createTextNode(t)),s},p0=Oi,d0=async()=>{var t;const n=p0({name:"VuepressApp",setup(){var s;r0();for(const o of we)(s=o.setup)==null||s.call(o);return()=>[i(Si),...we.flatMap(({rootComponents:o=[]})=>o.map(l=>i(l)))]}}),a=s0();o0(n),i0(n,a,we);for(const s of we)await((t=s.enhance)==null?void 0:t.call(s,{app:n,router:a,siteData:zn}));return n.use(a),{app:n,router:a}};d0().then(({app:n,router:a})=>{a.isReady().then(()=>{n.mount("#app")})});export{e as _,Vs as a,m0 as b,_l as c,d0 as createVueApp,vl as d,et as f,Dc as i,fn as k,Wn as u};

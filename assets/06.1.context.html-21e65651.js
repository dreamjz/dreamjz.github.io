const e=JSON.parse('{"key":"v-f22856bc","path":"/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.1.context.html","title":"6.1 Context","lang":"zh-CN","frontmatter":{"title":"6.1 Context","date":"2023-10-01T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"6.1.1 设计原理","slug":"_6-1-1-设计原理","link":"#_6-1-1-设计原理","children":[]},{"level":2,"title":"6.1.2 默认上下文","slug":"_6-1-2-默认上下文","link":"#_6-1-2-默认上下文","children":[]},{"level":2,"title":"6.1.3 取消信号","slug":"_6-1-3-取消信号","link":"#_6-1-3-取消信号","children":[{"level":3,"title":"WithCancel","slug":"withcancel","link":"#withcancel","children":[]},{"level":3,"title":"WithDeadline, WithTimeout","slug":"withdeadline-withtimeout","link":"#withdeadline-withtimeout","children":[]}]},{"level":2,"title":"6.1.4 传值","slug":"_6-1-4-传值","link":"#_6-1-4-传值","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1696286681000},"readingTime":{"minutes":5.17,"words":1551},"filePathRelative":"reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.1.context.md","localizedDate":"2023年10月1日","excerpt":"<p><a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a>接口定义了四个方法：</p>\\n<ol>\\n<li><code>Deadline</code> ： 返回 <a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a> 被取消的时间，即完成工作的截止时间</li>\\n<li><code>Done</code> ：返回一个 Channel， 会在当前工作完成或者上下文被取消后关闭，多次调用 <code>Done</code> 方法会返回同一个 Channel</li>\\n<li><code>Err</code> ： 返回 <a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a> 结束的原因，只会在 <code>Done</code> 方法对应的 Channel 关闭时返回非空的值：\\n<ol>\\n<li>若 <a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a> 被取消，返回 <code>Canceled</code> 错误</li>\\n<li>若 <a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a> 超时，返回 <code>DeadlineExceeded</code> 错误</li>\\n</ol>\\n</li>\\n<li><code>Value</code> ：从 <a href=\\"https://draveness.me/golang/tree/context.Context\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>context.Context</code></a> 中获取键对应的值，对于同一个上下文来说，多次调用 <code>Value</code> 并传入相同的 <code>Key</code> 会返回相同的结果，该方法可以用来传递请求特定的数据</li>\\n</ol>"}');export{e as data};

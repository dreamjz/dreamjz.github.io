import{_ as e,Z as p,$ as o,a0 as n,a1 as a,a2 as t,a3 as c,H as i}from"./framework-dee406ed.js";const l={},u={href:"https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day6-html-template",target:"_blank",rel:"noopener noreferrer"},r=c(`<p>目录结构：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\\DAY6-HTML-TEMPLATE
│  go.mod
│  go.work
│  main.go
│
├─gee
│      context.go
│      gee.go
│      go.mod
│      logger.go
│      router.go
│      router_group.go
│      router_test.go
│      trie.go
│
├─static
│      tst.txt
│
└─tmpl
        tst.tmpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-静态文件-serve-static-files" tabindex="-1"><a class="header-anchor" href="#_1-静态文件-serve-static-files" aria-hidden="true">#</a> 1. 静态文件 (Serve Static Files)</h2><h3 id="_1-1-router-group" tabindex="-1"><a class="header-anchor" href="#_1-1-router-group" aria-hidden="true">#</a> 1.1 router_group</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token punctuation">(</span>group <span class="token operator">*</span>RouterGroup<span class="token punctuation">)</span> <span class="token function">createStaticHandler</span><span class="token punctuation">(</span>relPath <span class="token builtin">string</span><span class="token punctuation">,</span> fs http<span class="token punctuation">.</span>FileSystem<span class="token punctuation">)</span> HandlerFunc <span class="token punctuation">{</span>
	absPath <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span>prefix<span class="token punctuation">,</span> relPath<span class="token punctuation">)</span>
	fileServer <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">StripPrefix</span><span class="token punctuation">(</span>absPath<span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">FileServer</span><span class="token punctuation">(</span>fs<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		file <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;filepath&quot;</span><span class="token punctuation">)</span>

		<span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> fs<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNotFound<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		fileServer<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Writer<span class="token punctuation">,</span> c<span class="token punctuation">.</span>Req<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>group <span class="token operator">*</span>RouterGroup<span class="token punctuation">)</span> <span class="token function">Static</span><span class="token punctuation">(</span>relPath <span class="token builtin">string</span><span class="token punctuation">,</span> root <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	handler <span class="token operator">:=</span> group<span class="token punctuation">.</span><span class="token function">createStaticHandler</span><span class="token punctuation">(</span>relPath<span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span>
	urlPattern <span class="token operator">:=</span> path<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>relPath<span class="token punctuation">,</span> <span class="token string">&quot;/*filepath&quot;</span><span class="token punctuation">)</span>

	group<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span>urlPattern<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Static</code>将磁盘路径映射到<code>relPath</code>上，然后注册路由。</p><h3 id="_1-2-demo" tabindex="-1"><a class="header-anchor" href="#_1-2-demo" aria-hidden="true">#</a> 1.2 Demo</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gee<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;/assets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./static&quot;</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8000&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http://localhost:8000/assets/tst.txt
<span class="token number">123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>访问<code>/assets/tst.txt</code>将本地文件<code>./static/tst.txt</code>返回。</p><h2 id="_2-html-模板" tabindex="-1"><a class="header-anchor" href="#_2-html-模板" aria-hidden="true">#</a> 2. HTML 模板</h2><p>使用<code>http/template</code>可以进行 HTML 模板渲染。</p><h3 id="_2-1-gee" tabindex="-1"><a class="header-anchor" href="#_2-1-gee" aria-hidden="true">#</a> 2.1 gee</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Engine <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token operator">*</span>RouterGroup
	router <span class="token operator">*</span>router
	groups <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>RouterGroup <span class="token comment">// store all groups</span>
	<span class="token comment">// HTML rendering</span>
	htmlTmpls <span class="token operator">*</span>template<span class="token punctuation">.</span>Template
	funcMap   template<span class="token punctuation">.</span>FuncMap
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>engine <span class="token operator">*</span>Engine<span class="token punctuation">)</span> <span class="token function">SetFuncMap</span><span class="token punctuation">(</span>funcMap template<span class="token punctuation">.</span>FuncMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	engine<span class="token punctuation">.</span>funcMap <span class="token operator">=</span> funcMap
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>engine <span class="token operator">*</span>Engine<span class="token punctuation">)</span> <span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span>pattern <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	engine<span class="token punctuation">.</span>htmlTmpls <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Funcs</span><span class="token punctuation">(</span>engine<span class="token punctuation">.</span>funcMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ParseGlob</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>engine <span class="token operator">*</span>Engine<span class="token punctuation">)</span> <span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> req <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
	c<span class="token punctuation">.</span>engine <span class="token operator">=</span> engine
	engine<span class="token punctuation">.</span>router<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>LoadHTMLGlob</code>：将模板文件读取至内存中</li><li><code>SetFuncMap</code>：设置渲染函数</li></ul><h3 id="_2-2-context" tabindex="-1"><a class="header-anchor" href="#_2-2-context" aria-hidden="true">#</a> 2.2 Context</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Context <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
    <span class="token comment">// engine</span>
	engine <span class="token operator">*</span>Engine
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">HTML</span><span class="token punctuation">(</span>code <span class="token builtin">int</span><span class="token punctuation">,</span> tmplName <span class="token builtin">string</span><span class="token punctuation">,</span> data any<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	c<span class="token punctuation">.</span><span class="token function">SetHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span>
	c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>htmlTmpls<span class="token punctuation">.</span><span class="token function">ExecuteTemplate</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>Writer<span class="token punctuation">,</span> tmplName<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">Fail</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>HTML</code>：改为渲染指定的 HTML 模板</li><li><code>Context</code>：持有 <code>Engine</code>实例，可访问模板及渲染函数</li></ul><h3 id="_2-3-demo" tabindex="-1"><a class="header-anchor" href="#_2-3-demo" aria-hidden="true">#</a> 2.3 Demo</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gee<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;/assets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./static&quot;</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">&quot;tmpl/*&quot;</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/hello/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gee<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;tst.tmpl&quot;</span><span class="token punctuation">,</span> gee<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8000&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http://localhost:8000/hello/alice
<span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>Hello alice <span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,22),d={href:"https://geektutu.com/post/gee-day6.html",target:"_blank",rel:"noopener noreferrer"};function k(v,m){const s=i("ExternalLinkIcon");return p(),o("div",null,[n("p",null,[n("a",u,[a("https://github.com/dreamjz/golang-notes/tree/main/books/7-days-golang/Gee/day6-html-template"),t(s)])]),r,n("ol",null,[n("li",null,[n("a",d,[a("https://geektutu.com/post/gee-day6.html"),t(s)])])])])}const g=e(l,[["render",k],["__file","01.6.html_template.html.vue"]]);export{g as default};

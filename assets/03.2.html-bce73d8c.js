const e=JSON.parse('{"key":"v-796ab694","path":"/note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.2.html","title":"3.2 Golang 切片实现原理","lang":"zh-CN","frontmatter":{"title":"3.2 Golang 切片实现原理","date":"2022-03-25T00:00:00.000Z","category":["golang"],"tag":["slice"],"timeline":true},"headers":[{"level":2,"title":"3.2.1 数据结构","slug":"_3-2-1-数据结构","link":"#_3-2-1-数据结构","children":[]},{"level":2,"title":"3.2.2 初始化","slug":"_3-2-2-初始化","link":"#_3-2-2-初始化","children":[{"level":3,"title":"使用下标","slug":"使用下标","link":"#使用下标","children":[]},{"level":3,"title":"字面量","slug":"字面量","link":"#字面量","children":[]},{"level":3,"title":"关键字","slug":"关键字","link":"#关键字","children":[]}]},{"level":2,"title":"3.2.3 访问元素","slug":"_3-2-3-访问元素","link":"#_3-2-3-访问元素","children":[]},{"level":2,"title":"3.2.4 追加和扩容","slug":"_3-2-4-追加和扩容","link":"#_3-2-4-追加和扩容","children":[]},{"level":2,"title":"3.2.5 拷贝切片","slug":"_3-2-5-拷贝切片","link":"#_3-2-5-拷贝切片","children":[]},{"level":2,"title":"3.2.6 小结","slug":"_3-2-6-小结","link":"#_3-2-6-小结","children":[]},{"level":2,"title":"3.2.7 延伸阅读","slug":"_3-2-7-延伸阅读","link":"#_3-2-7-延伸阅读","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":12.79,"words":3838},"filePathRelative":"note/golang/open-source-books/The-Design-and-Implementation-of-Golang/03.2.md","localizedDate":"2022年3月25日","excerpt":"<p>相较于数组，Go 语言中更常用的数据结构是切片，即动态数组，其长度并不固定，可以向切片中追加元素，它会在容量不足时自动扩容。</p>\\n<p>切片的声明和数组类似，因为切片的长度是动态的，所以声明时只需指定切片中元素类型：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

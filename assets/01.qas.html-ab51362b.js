const l=JSON.parse('{"key":"v-610fbd30","path":"/interview/redis/01.qas.html","title":"Redis Q&A- 1","lang":"zh-CN","frontmatter":{"title":"Redis Q&A- 1"},"headers":[{"level":2,"title":"1. 什么是 Redis","slug":"_1-什么是-redis","link":"#_1-什么是-redis","children":[]},{"level":2,"title":"2. 为何使用 Redis 作为缓存","slug":"_2-为何使用-redis-作为缓存","link":"#_2-为何使用-redis-作为缓存","children":[{"level":3,"title":"1、Redis 具备高性能","slug":"_1、redis-具备高性能","link":"#_1、redis-具备高性能","children":[]},{"level":3,"title":"2、 Redis 具备高并发","slug":"_2、-redis-具备高并发","link":"#_2、-redis-具备高并发","children":[]}]},{"level":2,"title":"3. Redis 的数据结构","slug":"_3-redis-的数据结构","link":"#_3-redis-的数据结构","children":[{"level":3,"title":"String","slug":"string","link":"#string","children":[]},{"level":3,"title":"List","slug":"list","link":"#list","children":[]},{"level":3,"title":"Hash","slug":"hash","link":"#hash","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"ZSet","slug":"zset","link":"#zset","children":[]}]},{"level":2,"title":"4. Redis 线程模型","slug":"_4-redis-线程模型","link":"#_4-redis-线程模型","children":[{"level":3,"title":"单线程模式","slug":"单线程模式","link":"#单线程模式","children":[]},{"level":3,"title":"为何使用单线程性能还很高？","slug":"为何使用单线程性能还很高","link":"#为何使用单线程性能还很高","children":[]}]},{"level":2,"title":"5. Redis 持久化","slug":"_5-redis-持久化","link":"#_5-redis-持久化","children":[{"level":3,"title":"AOF 如何实现","slug":"aof-如何实现","link":"#aof-如何实现","children":[]},{"level":3,"title":"AOF 日志过大会触发什么机制？","slug":"aof-日志过大会触发什么机制","link":"#aof-日志过大会触发什么机制","children":[]},{"level":3,"title":"AOF 重写流程","slug":"aof-重写流程","link":"#aof-重写流程","children":[]},{"level":3,"title":"RDB 如何实现","slug":"rdb-如何实现","link":"#rdb-如何实现","children":[]},{"level":3,"title":"RDB 会阻塞主线程么","slug":"rdb-会阻塞主线程么","link":"#rdb-会阻塞主线程么","children":[]},{"level":3,"title":"RDB 执行快照时，可以修改数据么","slug":"rdb-执行快照时-可以修改数据么","link":"#rdb-执行快照时-可以修改数据么","children":[]},{"level":3,"title":"混合持久化","slug":"混合持久化","link":"#混合持久化","children":[]}]},{"level":2,"title":"6. Redis 集群","slug":"_6-redis-集群","link":"#_6-redis-集群","children":[{"level":3,"title":"主从复制","slug":"主从复制","link":"#主从复制","children":[]},{"level":3,"title":"哨兵模式","slug":"哨兵模式","link":"#哨兵模式","children":[]},{"level":3,"title":"切片集群模式","slug":"切片集群模式","link":"#切片集群模式","children":[]}]},{"level":2,"title":"7. 集群脑裂","slug":"_7-集群脑裂","link":"#_7-集群脑裂","children":[{"level":3,"title":"什么是脑裂？","slug":"什么是脑裂","link":"#什么是脑裂","children":[]},{"level":3,"title":"解决","slug":"解决","link":"#解决","children":[]}]},{"level":2,"title":"8. Redis 过期删除","slug":"_8-redis-过期删除","link":"#_8-redis-过期删除","children":[{"level":3,"title":"过期删除策略","slug":"过期删除策略","link":"#过期删除策略","children":[]}]},{"level":2,"title":"9. 持久化时如何处理过期键","slug":"_9-持久化时如何处理过期键","link":"#_9-持久化时如何处理过期键","children":[]},{"level":2,"title":"10. 主从模式如何处理过期键","slug":"_10-主从模式如何处理过期键","link":"#_10-主从模式如何处理过期键","children":[]},{"level":2,"title":"11. Redis 内存淘汰","slug":"_11-redis-内存淘汰","link":"#_11-redis-内存淘汰","children":[{"level":3,"title":"LRU","slug":"lru","link":"#lru","children":[]},{"level":3,"title":"Redis 中的 LRU","slug":"redis-中的-lru","link":"#redis-中的-lru","children":[]},{"level":3,"title":"LFU","slug":"lfu","link":"#lfu","children":[]},{"level":3,"title":"Redis 中的 LFU","slug":"redis-中的-lfu","link":"#redis-中的-lfu","children":[]}]},{"level":2,"title":"12. Redis 如何避免缓存雪崩","slug":"_12-redis-如何避免缓存雪崩","link":"#_12-redis-如何避免缓存雪崩","children":[]},{"level":2,"title":"13. Redis 如何避免缓存击穿","slug":"_13-redis-如何避免缓存击穿","link":"#_13-redis-如何避免缓存击穿","children":[]},{"level":2,"title":"14. Redis 如何避免缓存穿透","slug":"_14-redis-如何避免缓存穿透","link":"#_14-redis-如何避免缓存穿透","children":[]},{"level":2,"title":"15. 常见的缓存更新策略","slug":"_15-常见的缓存更新策略","link":"#_15-常见的缓存更新策略","children":[{"level":3,"title":"Cache Aside（旁路缓存）策略","slug":"cache-aside-旁路缓存-策略","link":"#cache-aside-旁路缓存-策略","children":[]},{"level":3,"title":"Read/Write Through（读穿 / 写穿）策略","slug":"read-write-through-读穿-写穿-策略","link":"#read-write-through-读穿-写穿-策略","children":[]},{"level":3,"title":"Write Back（写回）策略","slug":"write-back-写回-策略","link":"#write-back-写回-策略","children":[]}]}],"readingTime":{"minutes":49.92,"words":14975},"filePathRelative":"interview/redis/01.qas.md","excerpt":"<h2> 1. 什么是 Redis</h2>\\n<p>Redis 是一种基于内存的数据库，对数据的读写操作都是在内存中完成，因此<strong>读写速度非常快</strong>，常用于<strong>缓存，消息队列、分布式锁等场景</strong>。</p>\\n<p>Redis 提供了多种数据类型来支持不同的业务场景，比如 String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理信息）、Stream（流），并且对数据类型的操作都是<strong>原子性</strong>的，因为执行命令由单线程负责的，不存在并发竞争的问题。</p>"}');export{l as data};

const e=JSON.parse('{"key":"v-11850004","path":"/interview/redis/06.cache.html","title":"Redis 缓存","lang":"zh-CN","frontmatter":{"title":"Redis 缓存"},"headers":[{"level":2,"title":"1.  缓存雪崩","slug":"_1-缓存雪崩","link":"#_1-缓存雪崩","children":[{"level":3,"title":"大量数据同时过期","slug":"大量数据同时过期","link":"#大量数据同时过期","children":[]},{"level":3,"title":"Redis 故障宕机","slug":"redis-故障宕机","link":"#redis-故障宕机","children":[]}]},{"level":2,"title":"2. 缓存击穿","slug":"_2-缓存击穿","link":"#_2-缓存击穿","children":[]},{"level":2,"title":"3. 缓存穿透","slug":"_3-缓存穿透","link":"#_3-缓存穿透","children":[{"level":3,"title":"布隆过滤器","slug":"布隆过滤器","link":"#布隆过滤器","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"4. 数据库和缓存的一致性","slug":"_4-数据库和缓存的一致性","link":"#_4-数据库和缓存的一致性","children":[{"level":3,"title":"Cache Aside 策略","slug":"cache-aside-策略","link":"#cache-aside-策略","children":[]}]}],"readingTime":{"minutes":10.7,"words":3210},"filePathRelative":"interview/redis/06.cache.md","excerpt":"<h2> 1.  缓存雪崩</h2>\\n<figure><img src=\\"https://cdn.xiaolincoding.com//mysql/other/e2b8d2eb5536aa71664772457792ec40-20230309232851699.png\\" alt=\\"图片\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>图片</figcaption></figure>\\n<p>当<strong>大量缓存数据在同一时间过期（失效）或者 Redis 故障宕机</strong>时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库，从而导致数据库的压力骤增，严重的会造成数据库宕机，从而形成一系列连锁反应，造成整个系统崩溃，这就是<strong>缓存雪崩</strong>的问题</p>"}');export{e as data};

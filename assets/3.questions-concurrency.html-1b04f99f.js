const n=JSON.parse('{"key":"v-32faa4f3","path":"/interview/golang/3.questions-concurrency.html","title":"Questions - concurrency","lang":"zh-CN","frontmatter":{"title":"Questions - concurrency"},"headers":[{"level":2,"title":"1. 有缓冲和无缓冲的 Channel 区别","slug":"_1-有缓冲和无缓冲的-channel-区别","link":"#_1-有缓冲和无缓冲的-channel-区别","children":[]},{"level":2,"title":"2. 简述 协程泄露(Goroutine Leak)","slug":"_2-简述-协程泄露-goroutine-leak","link":"#_2-简述-协程泄露-goroutine-leak","children":[]},{"level":2,"title":"3. GOMAXPROCS 作用","slug":"_3-gomaxprocs-作用","link":"#_3-gomaxprocs-作用","children":[]},{"level":2,"title":"4. mutex 有几种模式","slug":"_4-mutex-有几种模式","link":"#_4-mutex-有几种模式","children":[]},{"level":2,"title":"5. Goroutine 何时发生内存泄露","slug":"_5-goroutine-何时发生内存泄露","link":"#_5-goroutine-何时发生内存泄露","children":[{"level":3,"title":"暂时性内存泄露","slug":"暂时性内存泄露","link":"#暂时性内存泄露","children":[]},{"level":3,"title":"永久性内存泄露","slug":"永久性内存泄露","link":"#永久性内存泄露","children":[]}]},{"level":2,"title":"6. Go 的竞争条件","slug":"_6-go-的竞争条件","link":"#_6-go-的竞争条件","children":[]},{"level":2,"title":"7. 如果若干个goroutine，有一个panic会怎么做？","slug":"_7-如果若干个goroutine-有一个panic会怎么做","link":"#_7-如果若干个goroutine-有一个panic会怎么做","children":[]},{"level":2,"title":"8. defer 可以捕获子 goroutine 的 panic 么","slug":"_8-defer-可以捕获子-goroutine-的-panic-么","link":"#_8-defer-可以捕获子-goroutine-的-panic-么","children":[]}],"git":{"updatedTime":1698123705000},"readingTime":{"minutes":3.53,"words":1060},"filePathRelative":"interview/golang/3.questions-concurrency.md","excerpt":"<h2> 1. 有缓冲和无缓冲的 Channel 区别</h2>\\n<ul>\\n<li>无缓冲 Channel：\\n<ul>\\n<li>发送：发送时若无接收者则阻塞，直到接收者接收</li>\\n<li>接收：接收时若无发送者则阻塞，直到发送者发送</li>\\n</ul>\\n</li>\\n<li>有缓冲 Channel：\\n<ul>\\n<li>发送：仅在缓冲以满时阻塞</li>\\n<li>接收：仅在缓冲为空时阻塞</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tst <span class=\\"token operator\\">:=</span> time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tch <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">chan</span> <span class=\\"token builtin\\">bool</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>  <span class=\\"token punctuation\\">{</span>\\n\\t\\ttime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">.</span>Second <span class=\\"token operator\\">*</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token operator\\">&lt;-</span>ch\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tch <span class=\\"token operator\\">&lt;-</span> <span class=\\"token boolean\\">true</span>  <span class=\\"token comment\\">// 无缓冲，发送方阻塞直到接收方接收到数据。</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"cost %.1f s\\\\n\\"</span><span class=\\"token punctuation\\">,</span> time<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Now</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sub</span><span class=\\"token punctuation\\">(</span>st<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Seconds</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n\\ttime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span>time<span class=\\"token punctuation\\">.</span>Second <span class=\\"token operator\\">*</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

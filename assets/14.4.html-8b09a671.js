const n=JSON.parse('{"key":"v-46363088","path":"/note/golang/open-source-books/the-way-to-go/14/14.4.html","title":"14.4 select","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":0.6,"words":181},"filePathRelative":"note/golang/open-source-books/the-way-to-go/14/14.4.md","excerpt":"<h1> 14.4 select</h1>\\n<p><code>select</code>：选择处理列出的多个通道情况中的一个</p>\\n<ul>\\n<li>若都被阻塞，则会等到其中一个可以处理</li>\\n<li>若有多个可以处理，随机选择一个</li>\\n<li>若没有通道可操作并且存在<code>default</code>，则执行<code>default</code></li>\\n</ul>\\n<p>在case中执行<code>return</code>或<code>break</code>则会退出select</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">select</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token keyword\\">case</span> u <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&lt;-</span> ch1<span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\">// ...</span>\\n<span class=\\"token keyword\\">case</span> v <span class=\\"token operator\\">:=</span> <span class=\\"token operator\\">&lt;-</span> ch2<span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\">// ...</span>\\n<span class=\\"token keyword\\">default</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token comment\\">// ...</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

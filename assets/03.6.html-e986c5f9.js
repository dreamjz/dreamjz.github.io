const e=JSON.parse('{"key":"v-14222f23","path":"/reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.6.html","title":"Strings","lang":"zh-CN","frontmatter":{"title":"Strings","date":"2022-02-15T00:00:00.000Z","category":["algorithm","data structure"],"tag":["strings"],"timeline":true},"headers":[{"level":2,"title":"1. What is String","slug":"_1-what-is-string","link":"#_1-what-is-string","children":[]},{"level":2,"title":"2. Elementary string-processing operations","slug":"_2-elementary-string-processing-operations","link":"#_2-elementary-string-processing-operations","children":[{"level":3,"title":"2.1 Indexed array versions","slug":"_2-1-indexed-array-versions","link":"#_2-1-indexed-array-versions","children":[]},{"level":3,"title":"2.2 Equivalent Pointer versions","slug":"_2-2-equivalent-pointer-versions","link":"#_2-2-equivalent-pointer-versions","children":[]}]},{"level":2,"title":"3. String search (program-3.15)","slug":"_3-string-search-program-3-15","link":"#_3-string-search-program-3-15","children":[]},{"level":2,"title":"4. Performance Bug","slug":"_4-performance-bug","link":"#_4-performance-bug","children":[]},{"level":2,"title":"5. Memory allocation for strings","slug":"_5-memory-allocation-for-strings","link":"#_5-memory-allocation-for-strings","children":[]},{"level":2,"title":"Exercises","slug":"exercises","link":"#exercises","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":3.67,"words":1102},"filePathRelative":"reading/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.6.md","localizedDate":"2022年2月15日","excerpt":"<h2> 1. What is String</h2>\\n<p>We use the term <em>string</em> to refer to a variable-length array of characters, defined by a starting point and by a string-termination character marking the end.</p>\\n<p>Strings are valuable as low-level data structures for two basic reasons:</p>\\n<ul>\\n<li>Many computing applications involve processing textual data, which can be represented directly with strings.</li>\\n<li>Many computer systems provide direct and efficient access to <em>bytes</em> of memory, which correspond directly to characters in strings. In many situations, the string abstraction matches needs of the application to the capabilities of the machine.</li>\\n</ul>"}');export{e as data};

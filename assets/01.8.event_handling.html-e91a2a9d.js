const l=JSON.parse('{"key":"v-11aa17f2","path":"/note/vue/vue-3/fundamentals/01-fundamentals/01.8.event_handling.html","title":"10. 事件处理","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"10.1 监听事件","slug":"_10-1-监听事件","link":"#_10-1-监听事件","children":[]},{"level":2,"title":"10.2 内联事件处理器","slug":"_10-2-内联事件处理器","link":"#_10-2-内联事件处理器","children":[{"level":3,"title":"10.2.1 在内联处理器中调用方法","slug":"_10-2-1-在内联处理器中调用方法","link":"#_10-2-1-在内联处理器中调用方法","children":[]},{"level":3,"title":"10.2.2 在内联事件处理器中访问事件参数","slug":"_10-2-2-在内联事件处理器中访问事件参数","link":"#_10-2-2-在内联事件处理器中访问事件参数","children":[]}]},{"level":2,"title":"10.3 方法事件处理器","slug":"_10-3-方法事件处理器","link":"#_10-3-方法事件处理器","children":[{"level":3,"title":"10.3.1 方法与内联事件判断","slug":"_10-3-1-方法与内联事件判断","link":"#_10-3-1-方法与内联事件判断","children":[]}]},{"level":2,"title":"10.4 事件修饰符","slug":"_10-4-事件修饰符","link":"#_10-4-事件修饰符","children":[]},{"level":2,"title":"10.5 按键修饰符","slug":"_10-5-按键修饰符","link":"#_10-5-按键修饰符","children":[{"level":3,"title":"10.5.1 按键别名","slug":"_10-5-1-按键别名","link":"#_10-5-1-按键别名","children":[]},{"level":3,"title":"10.5.2 系统按键修饰符","slug":"_10-5-2-系统按键修饰符","link":"#_10-5-2-系统按键修饰符","children":[]}]},{"level":2,"title":"10.6 .exact 修饰符","slug":"_10-6-exact-修饰符","link":"#_10-6-exact-修饰符","children":[]},{"level":2,"title":"10.7 鼠标按键修饰符","slug":"_10-7-鼠标按键修饰符","link":"#_10-7-鼠标按键修饰符","children":[]}],"readingTime":{"minutes":4.79,"words":1437},"filePathRelative":"note/vue/vue-3/fundamentals/01-fundamentals/01.8.event_handling.md","excerpt":"<h1> 10. 事件处理</h1>\\n<h2> 10.1 监听事件</h2>\\n<p>可以使用 <code>v-on</code> 指令 (简写为 <code>@</code>) 来监听 DOM 事件，并在事件触发时执行对应的 JavaScript。用法：</p>\\n<ul>\\n<li><code>v-on:click=\\"handler\\"</code></li>\\n<li><code>@click=\\"handler\\"</code></li>\\n</ul>\\n<p>事件处理器 (handler) 的值可以是：</p>\\n<ol>\\n<li><strong>内联事件处理器</strong>：事件被触发时执行的内联 JavaScript 语句</li>\\n<li><strong>方法事件处理器</strong>：一个指向组件上定义的方法的属性名或是路径</li>\\n</ol>"}');export{l as data};

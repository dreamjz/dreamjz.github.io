const e=JSON.parse('{"key":"v-4c6d1958","path":"/reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.2.html","title":"14.2 单序列问题","lang":"zh-CN","frontmatter":{"title":"14.2 单序列问题","date":"2023-09-15T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":2,"title":"14.2.1 问题89: 房屋偷盗","slug":"_14-2-1-问题89-房屋偷盗","link":"#_14-2-1-问题89-房屋偷盗","children":[{"level":3,"title":"14.2.2 分析&题解","slug":"_14-2-2-分析-题解","link":"#_14-2-2-分析-题解","children":[]}]},{"level":2,"title":"14.2.2 问题90: 环形房屋偷盗","slug":"_14-2-2-问题90-环形房屋偷盗","link":"#_14-2-2-问题90-环形房屋偷盗","children":[{"level":3,"title":"14.2.2.1 分析&题解","slug":"_14-2-2-1-分析-题解","link":"#_14-2-2-1-分析-题解","children":[]}]},{"level":2,"title":"14.2.3 问题91: 粉刷房子","slug":"_14-2-3-问题91-粉刷房子","link":"#_14-2-3-问题91-粉刷房子","children":[{"level":3,"title":"14.2.3.1 分析&题解","slug":"_14-2-3-1-分析-题解","link":"#_14-2-3-1-分析-题解","children":[]}]},{"level":2,"title":"14.2.4 问题92: 翻转字符","slug":"_14-2-4-问题92-翻转字符","link":"#_14-2-4-问题92-翻转字符","children":[{"level":3,"title":"14.2.4.1 分析&题解","slug":"_14-2-4-1-分析-题解","link":"#_14-2-4-1-分析-题解","children":[]}]},{"level":2,"title":"14.2.5 问题93: 最长斐波那契数列","slug":"_14-2-5-问题93-最长斐波那契数列","link":"#_14-2-5-问题93-最长斐波那契数列","children":[{"level":3,"title":"14.2.5.1 分析&题解","slug":"_14-2-5-1-分析-题解","link":"#_14-2-5-1-分析-题解","children":[]}]},{"level":2,"title":"14.2.6 问题94: 最少回文分割","slug":"_14-2-6-问题94-最少回文分割","link":"#_14-2-6-问题94-最少回文分割","children":[{"level":3,"title":"14.2.6.1 分析&题解","slug":"_14-2-6-1-分析-题解","link":"#_14-2-6-1-分析-题解","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":12.58,"words":3775},"filePathRelative":"reading/algorithm/offer_oriented/AL_DS/14_dynamic_programming/14.2.md","localizedDate":"2023年9月15日","excerpt":"<p>单序列问题的输入通常是一个序列, 如数组或字符串.</p>\\n<p>动态规划解决单序列问题<strong>关键</strong>的一步是在序列中增加一个元素, 根据题目的特点找出<strong>元素</strong>对应的最优解(或解的个数)和<strong>前面若干元素</strong>的最优解(或解数目)的<strong>关系</strong>, 并得出<strong>状态转移方程</strong>.</p>\\n<p>在<strong>状态转移方程</strong>到代码实现的过程中, 要时刻注意<strong>重复计算</strong>的问题和<strong>缓存优化</strong>的问题.</p>"}');export{e as data};

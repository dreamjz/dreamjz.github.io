const e=JSON.parse('{"key":"v-6cc31111","path":"/reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.5.goroutine.html","title":"6.5 调度器","lang":"zh-CN","frontmatter":{"title":"6.5 调度器","date":"2023-10-02T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"6.5.1 设计原理","slug":"_6-5-1-设计原理","link":"#_6-5-1-设计原理","children":[]},{"level":2,"title":"6.5.2 数据结构","slug":"_6-5-2-数据结构","link":"#_6-5-2-数据结构","children":[{"level":3,"title":"G","slug":"g","link":"#g","children":[]},{"level":3,"title":"M","slug":"m","link":"#m","children":[]},{"level":3,"title":"P","slug":"p","link":"#p","children":[]}]},{"level":2,"title":"6.5.3 调度器的启动","slug":"_6-5-3-调度器的启动","link":"#_6-5-3-调度器的启动","children":[]},{"level":2,"title":"6.5.4 G 的创建","slug":"_6-5-4-g-的创建","link":"#_6-5-4-g-的创建","children":[]},{"level":2,"title":"6.5.5 调度循环","slug":"_6-5-5-调度循环","link":"#_6-5-5-调度循环","children":[]},{"level":2,"title":"6.5.6 触发调度","slug":"_6-5-6-触发调度","link":"#_6-5-6-触发调度","children":[{"level":3,"title":"主动挂起","slug":"主动挂起","link":"#主动挂起","children":[]},{"level":3,"title":"系统调用","slug":"系统调用","link":"#系统调用","children":[]}]},{"level":2,"title":"6.5.7 线程管理","slug":"_6-5-7-线程管理","link":"#_6-5-7-线程管理","children":[{"level":3,"title":"线程生命周期","slug":"线程生命周期","link":"#线程生命周期","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1696286681000},"readingTime":{"minutes":13.06,"words":3918},"filePathRelative":"reading/golang/the-design-and-implementation-of-golang/part3-runtime/06-concurrency/06.5.goroutine.md","localizedDate":"2023年10月2日","excerpt":"<p><strong>线程</strong>是操作系统调度的基本单位，多个线程可以属于同一<strong>进程</strong>并共享内存空间。</p>\\n<figure><img src=\\"https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202310020422870.png\\" alt=\\"process-and-threads\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>process-and-threads</figcaption></figure>\\n<p>Golang 的调度器通过使用与CPU数量相同的线程减少线程频繁切换的内存开销，同时在每个线程上执行开销更小的 <strong>goroutine</strong> 来降低操作系统和硬件的负担。</p>"}');export{e as data};

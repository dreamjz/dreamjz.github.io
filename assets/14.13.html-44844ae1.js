const n=JSON.parse('{"key":"v-2656ec40","path":"/note/golang/open-source-books/the-way-to-go/14/14.13.html","title":"14.13 在多核心上并行计算","lang":"zh-CN","frontmatter":{},"headers":[],"readingTime":{"minutes":0.85,"words":254},"filePathRelative":"note/golang/open-source-books/the-way-to-go/14/14.13.md","excerpt":"<h1> 14.13 在多核心上并行计算</h1>\\n<p>假设有 <code>NCPU</code> 个 CPU 核心，想把计算量分成 <code>NCPU</code> 个部分，每一个部分都和其他部分并行运行。</p>\\n<p>这可以通过以下代码所示的方式完成</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">DoAll</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    sem <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">chan</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> NCPU<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// Buffering optional but sensible</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> NCPU<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">go</span> <span class=\\"token function\\">DoPart</span><span class=\\"token punctuation\\">(</span>sem<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// Drain the channel sem, waiting for NCPU tasks to complete</span>\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> NCPU<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token operator\\">&lt;-</span>sem <span class=\\"token comment\\">// wait for one task to complete</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// All done.</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">DoPart</span><span class=\\"token punctuation\\">(</span>sem <span class=\\"token keyword\\">chan</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// do the part of the computation</span>\\n    sem <span class=\\"token operator\\">&lt;-</span><span class=\\"token number\\">1</span> <span class=\\"token comment\\">// signal that this piece is done</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    runtime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">GOMAXPROCS</span><span class=\\"token punctuation\\">(</span>NCPU<span class=\\"token punctuation\\">)</span> <span class=\\"token comment\\">// runtime.GOMAXPROCS = NCPU</span>\\n    <span class=\\"token function\\">DoAll</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

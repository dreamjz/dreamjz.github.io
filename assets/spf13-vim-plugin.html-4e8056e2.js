import{_ as l,Z as o,$ as t,a0 as e,a1 as n,a2 as i,a3 as s,H as d}from"./framework-09afcf0b.js";const r={},c=s(`<p>spf13-vim及插件安装记录，后续遇到好用的插件也会记录在此</p><p>本文安装环境：</p><ul><li>Manjaro</li><li>Linux 5.10</li></ul><h2 id="安装-installation" tabindex="-1"><a class="header-anchor" href="#安装-installation" aria-hidden="true">#</a> 安装 Installation</h2><p>安装需要 <em>Git 1.7+, Vim 1.3+</em>,复制以下命令以安装:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> https://j.mp/spf13-vim3 <span class="token parameter variable">-L</span> <span class="token operator">&gt;</span> spf13-vim.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> spf13-vim.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果是bash兼容的shell可以直接执行脚本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> https://j.mp/spf13-vim3 -L<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="自定义-customization" tabindex="-1"><a class="header-anchor" href="#自定义-customization" aria-hidden="true">#</a> 自定义 Customization</h2><p>spf13-vim的配置加载顺序如下：</p><ol><li><code>.vimrc.before</code> - spf13-vim before configuration</li><li><code>.vimrc.before.fork</code> - fork before configuration</li><li><code>.vimrc.before.local</code> - before user configuration</li><li><code>.vimrc.bundles</code> - spf13-vim bundle configuration</li><li><code>.vimrc.bundles.fork</code> - fork bundle configuration</li><li><code>.vimrc.bundles.local</code> - local user bundle configuration</li><li><code>.vimrc</code> - spf13-vim vim configuration</li><li><code>.vimrc.fork</code> - fork vim configuration</li><li><code>.vimrc.local</code> - local user configuration</li></ol><p>自定配置建议创建相关的<code>.vim.*.local</code>文件</p><h2 id="插件-plugins" tabindex="-1"><a class="header-anchor" href="#插件-plugins" aria-hidden="true">#</a> 插件 Plugins</h2><p>spf13-vim 已经集成了很多的人气插件：</p><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/plugins.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>后续会跟新集成插件的用法和说明</p><h3 id="增加新插件-adding-new-plugins" tabindex="-1"><a class="header-anchor" href="#增加新插件-adding-new-plugins" aria-hidden="true">#</a> 增加新插件 Adding new plugins</h3><p>创建<code>~/.vimrc.bundles.local</code>用于新增额外插件，按<code>Bundle plugin_name</code>的格式写入文件，例如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> Bundle <span class="token punctuation">\\</span>&#39;spf13/vim-colors<span class="token punctuation">\\</span>&#39; <span class="token operator">&gt;&gt;</span> ~/.vimrc.bundles.local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装插件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim +BundleInstall! +BundleClean +q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="移除-禁用-插件-removing-disabling-an-included-plugin" tabindex="-1"><a class="header-anchor" href="#移除-禁用-插件-removing-disabling-an-included-plugin" aria-hidden="true">#</a> 移除（禁用）插件 Removing (disabling) an included plugin</h3><p>创建<code>~/.vimrc.local</code>(若不存在)，以<code>UnBundle plugin_name</code>的格式写入，例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> echo UnBundle \\&#39;AutoClose\\&#39; &gt;&gt; ~/.vimrc.bundles.local
 echo UnBundle \\&#39;scrooloose/syntastic\\&#39; &gt;&gt; ~/.vimrc.bundles.local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>移除插件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim +BundleClean! +q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,26),p={id:"ycm-youcompleteme",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#ycm-youcompleteme","aria-hidden":"true"},"#",-1),m={href:"https://github.com/Valloric/YouCompleteMe",target:"_blank",rel:"noopener noreferrer"},h=s(`<p>YCM是一个vim的代码补全插件，提供多种语言的补全功能</p><p>由于新版本的YCM无法使用python2，需要强制vim使用python3</p><p>查看vim当前使用的python版本,进入vim:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:echo has(&#39;python&#39;)
:echo has(&#39;python3&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>若<code>echo has(&#39;python&#39;)</code>返回1，则表示vim使用的是python2</p><p>在<code>~/.vimrc.before.local</code>中添加：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>set pythondll=
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再次执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>:echo has(&#39;python3&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为1则说明当前使用python3</p><p>在<code>~/.vimrc.before.local</code>,添加如下内容：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>let g:spf13_bundle_groups=[&#39;general&#39;, &#39;programming&#39;,&#39;youcompleteme&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装插件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vim +BundleInstall! +q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用YCM之前需要自己编译配置,注意使用python3：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/.vim/bundle/YouCompleteMe/
python3 ./install.py <span class="token parameter variable">--all</span> <span class="token comment">#编译支持所有功能</span>
or
python3 ./install.py --clang-completer <span class="token comment">#只支持C/C++补全</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次进入vim，就可以使用YCM的代码补全了</p>`,17),v={id:"vim-go",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#vim-go","aria-hidden":"true"},"#",-1),b={href:"https://github.com/fatih/vim-go",target:"_blank",rel:"noopener noreferrer"},f=s(`<p>vim-go 为vim添加Go语言支持，向<code>~/.vimrc.bundles.local</code>写入：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Bundle &#39;fatih/vim-go&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> +BundleInstall +q
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建文件<code>main.go</code>,会生成模板代码，可以配合YCM的代码补全：</p><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/vim-go.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr>`,7),x={href:"https://creativecommons.org/licenses/by-nc-nd/4.0/",target:"_blank",rel:"noopener noreferrer"},_=e("h2",{id:"参考",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考","aria-hidden":"true"},"#"),n(" 参考")],-1),k={href:"https://github.com/spf13/spf13-vim",target:"_blank",rel:"noopener noreferrer"},y={href:"https://github.com/ycm-core/YouCompleteMe",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/fatih/vim-go",target:"_blank",rel:"noopener noreferrer"},B={href:"https://www.zhihu.com/question/48089488",target:"_blank",rel:"noopener noreferrer"};function M(Y,w){const a=d("ExternalLinkIcon");return o(),t("div",null,[c,e("h3",p,[u,n(" YCM("),e("a",m,[n("YouCompleteMe"),i(a)]),n(")")]),h,e("h3",v,[g,n(),e("a",b,[n("vim-go"),i(a)])]),f,e("p",null,[n("本文采用"),e("a",x,[n("CC BY-NC-ND 4.0"),i(a)]),n("进行许可")]),_,e("ol",null,[e("li",null,[e("a",k,[n("spf13-vim"),i(a)]),n(" github-repo")]),e("li",null,[e("a",y,[n("YouCompleteMe"),i(a)]),n(" github-repo")]),e("li",null,[e("a",C,[n("vim-go"),i(a)]),n(" github-repo")]),e("li",null,[e("a",B,[n("vim配置ycm，同时支持python和python3了，如何只支持python3"),i(a)]),n(" 知乎")])])])}const V=l(r,[["render",M],["__file","spf13-vim-plugin.html.vue"]]);export{V as default};

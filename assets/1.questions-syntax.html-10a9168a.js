const e=JSON.parse('{"key":"v-fdbe0732","path":"/interview/golang/1.questions-syntax.html","title":"Questions - syntax","lang":"zh-CN","frontmatter":{"title":"Questions - syntax"},"headers":[{"level":2,"title":"1. = 和 := 的区别","slug":"_1-和-的区别","link":"#_1-和-的区别","children":[]},{"level":2,"title":"2. 指针的作用","slug":"_2-指针的作用","link":"#_2-指针的作用","children":[]},{"level":2,"title":"3. Go 允许多个返回值吗","slug":"_3-go-允许多个返回值吗","link":"#_3-go-允许多个返回值吗","children":[]},{"level":2,"title":"4. Go 有异常类型吗","slug":"_4-go-有异常类型吗","link":"#_4-go-有异常类型吗","children":[]},{"level":2,"title":"5. 什么是协程（Goroutine）","slug":"_5-什么是协程-goroutine","link":"#_5-什么是协程-goroutine","children":[]},{"level":2,"title":"6. 如何高效地拼接字符串","slug":"_6-如何高效地拼接字符串","link":"#_6-如何高效地拼接字符串","children":[]},{"level":2,"title":"7. 什么是 rune 类型","slug":"_7-什么是-rune-类型","link":"#_7-什么是-rune-类型","children":[]},{"level":2,"title":"8. 如何判断 map 中是否包含某个 key","slug":"_8-如何判断-map-中是否包含某个-key","link":"#_8-如何判断-map-中是否包含某个-key","children":[]},{"level":2,"title":"9. Go 支持默认参数或可选参数吗","slug":"_9-go-支持默认参数或可选参数吗","link":"#_9-go-支持默认参数或可选参数吗","children":[]},{"level":2,"title":"10. 简述 defer 的特性","slug":"_10-简述-defer-的特性","link":"#_10-简述-defer-的特性","children":[]},{"level":2,"title":"11. defer 能否修改返回值","slug":"_11-defer-能否修改返回值","link":"#_11-defer-能否修改返回值","children":[]},{"level":2,"title":"12. 如何交换两个变量","slug":"_12-如何交换两个变量","link":"#_12-如何交换两个变量","children":[]},{"level":2,"title":"13. 结构体中 tag 的作用","slug":"_13-结构体中-tag-的作用","link":"#_13-结构体中-tag-的作用","children":[]},{"level":2,"title":"14. 如何判断切片内容是否相等","slug":"_14-如何判断切片内容是否相等","link":"#_14-如何判断切片内容是否相等","children":[]},{"level":2,"title":"15. 格式化输出中的 %v， %+v，%#v 区别","slug":"_15-格式化输出中的-v-v-v-区别","link":"#_15-格式化输出中的-v-v-v-区别","children":[]},{"level":2,"title":"16. 如何定义枚举","slug":"_16-如何定义枚举","link":"#_16-如何定义枚举","children":[]},{"level":2,"title":"17. 空结构体的作用","slug":"_17-空结构体的作用","link":"#_17-空结构体的作用","children":[]},{"level":2,"title":"18. new 和 make 区别","slug":"_18-new-和-make-区别","link":"#_18-new-和-make-区别","children":[]},{"level":2,"title":"19. Golang 如何实现面向对象","slug":"_19-golang-如何实现面向对象","link":"#_19-golang-如何实现面向对象","children":[]},{"level":2,"title":"20. uint 型变量相减会发生什么","slug":"_20-uint-型变量相减会发生什么","link":"#_20-uint-型变量相减会发生什么","children":[]}],"git":{"updatedTime":1698123705000},"readingTime":{"minutes":5.34,"words":1602},"filePathRelative":"interview/golang/1.questions-syntax.md","excerpt":"<h2> 1. <code>=</code> 和 <code>:=</code> 的区别</h2>\\n<p>:= 声明+赋值</p>\\n<p>= 仅赋值</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">var</span> foo <span class=\\"token builtin\\">int</span>\\nfoo <span class=\\"token operator\\">=</span> <span class=\\"token number\\">10</span>\\n<span class=\\"token comment\\">// equal to </span>\\nfoo <span class=\\"token operator\\">:=</span> <span class=\\"token number\\">10</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

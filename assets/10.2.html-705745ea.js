import{_ as n,Z as s,$ as a,a3 as e}from"./framework-dee406ed.js";const t={},i=e(`<h1 id="_10-2-使用工厂方法创建结构体实例" tabindex="-1"><a class="header-anchor" href="#_10-2-使用工厂方法创建结构体实例" aria-hidden="true">#</a> 10.2 使用工厂方法创建结构体实例</h1><h2 id="_10-2-1-结构体工厂" tabindex="-1"><a class="header-anchor" href="#_10-2-1-结构体工厂" aria-hidden="true">#</a> 10.2.1 结构体工厂</h2><p>工厂函数名一般以<code>New/new</code>开头。</p><p>假设定义<code>File</code>:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> File <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    fd <span class="token builtin">int</span> 		<span class="token comment">// 文件描述符</span>
    name <span class="token builtin">string</span> <span class="token comment">// 文件名 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>工厂函数：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">NewFile</span><span class="token punctuation">(</span>fd <span class="token builtin">int</span><span class="token punctuation">,</span> name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">*</span>File <span class="token punctuation">{</span>
    <span class="token keyword">if</span> fd <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token operator">&amp;</span>File<span class="token punctuation">{</span>fd<span class="token punctuation">,</span> name<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>f <span class="token operator">:=</span> <span class="token function">NewFile</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;text.txt&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>new(File)</code>和<code>&amp;File{}</code>是等价的</p><h3 id="强制使用" tabindex="-1"><a class="header-anchor" href="#强制使用" aria-hidden="true">#</a> 强制使用</h3><p>将结构体变为私有的，此时用户只能通过工厂函数来创建结构体变量</p>`,11),o=[i];function p(c,l){return s(),a("div",null,o)}const r=n(t,[["render",p],["__file","10.2.html.vue"]]);export{r as default};

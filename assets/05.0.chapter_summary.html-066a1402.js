const e=JSON.parse('{"key":"v-30973042","path":"/reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.0.chapter_summary.html","title":"第五章笔记总结","lang":"zh-CN","frontmatter":{"title":"第五章笔记总结","date":"2023-09-25T00:00:00.000Z","category":["golang"],"article":false},"headers":[{"level":2,"title":"1. for and range","slug":"_1-for-and-range","link":"#_1-for-and-range","children":[{"level":3,"title":"1.1 for","slug":"_1-1-for","link":"#_1-1-for","children":[]},{"level":3,"title":"1.2 for-range","slug":"_1-2-for-range","link":"#_1-2-for-range","children":[]}]},{"level":2,"title":"2. select","slug":"_2-select","link":"#_2-select","children":[{"level":3,"title":"2.1 数据结构","slug":"_2-1-数据结构","link":"#_2-1-数据结构","children":[]},{"level":3,"title":"2.2 实现原理","slug":"_2-2-实现原理","link":"#_2-2-实现原理","children":[]}]},{"level":2,"title":"3. defer","slug":"_3-defer","link":"#_3-defer","children":[{"level":3,"title":"3.1 数据结构","slug":"_3-1-数据结构","link":"#_3-1-数据结构","children":[]},{"level":3,"title":"3.2 执行机制","slug":"_3-2-执行机制","link":"#_3-2-执行机制","children":[]}]},{"level":2,"title":"4. panic and recover","slug":"_4-panic-and-recover","link":"#_4-panic-and-recover","children":[{"level":3,"title":"4.1 数据结构","slug":"_4-1-数据结构","link":"#_4-1-数据结构","children":[]},{"level":3,"title":"4.2 执行流程","slug":"_4-2-执行流程","link":"#_4-2-执行流程","children":[]}]},{"level":2,"title":"5. make and new","slug":"_5-make-and-new","link":"#_5-make-and-new","children":[{"level":3,"title":"5.1 make","slug":"_5-1-make","link":"#_5-1-make","children":[]},{"level":3,"title":"5.2 new","slug":"_5-2-new","link":"#_5-2-new","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943615000},"readingTime":{"minutes":8.37,"words":2511},"filePathRelative":"reading/golang/the-design-and-implementation-of-golang/part2-foundation/ch05-keyword/05.0.chapter_summary.md","localizedDate":"2023年9月25日","excerpt":"<h2> 1. for and range</h2>\\n<h3> 1.1 for</h3>\\n<p>for 循环被编译器视作<code>OFOR</code>节点，由四个部分组成：</p>\\n<ol>\\n<li><code>Ninit</code>：循环<strong>初始化</strong></li>\\n<li><code>Left</code>：循环<strong>执行条件</strong></li>\\n<li><code>Right</code>：循环体结束执行语句</li>\\n<li><code>NBody</code>：循环体</li>\\n</ol>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">for</span> Ninit<span class=\\"token punctuation\\">;</span> Left<span class=\\"token punctuation\\">;</span> Right <span class=\\"token punctuation\\">{</span>\\n    NBody\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

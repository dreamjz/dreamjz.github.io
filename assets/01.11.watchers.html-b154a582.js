const n=JSON.parse(`{"key":"v-424c459b","path":"/note/vue/vue-3/fundamentals/01-fundamentals/01.11.watchers.html","title":"13. 侦听器","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"13.1 基本示例","slug":"_13-1-基本示例","link":"#_13-1-基本示例","children":[{"level":3,"title":"13.1.1 侦听数据源类型","slug":"_13-1-1-侦听数据源类型","link":"#_13-1-1-侦听数据源类型","children":[]}]},{"level":2,"title":"13.2 深层侦听器","slug":"_13-2-深层侦听器","link":"#_13-2-深层侦听器","children":[]},{"level":2,"title":"13.3 即时回调的侦听器","slug":"_13-3-即时回调的侦听器","link":"#_13-3-即时回调的侦听器","children":[]},{"level":2,"title":"13.4 watchEffect()","slug":"_13-4-watcheffect","link":"#_13-4-watcheffect","children":[{"level":3,"title":"13.4.1 watch vs. watchEffect","slug":"_13-4-1-watch-vs-watcheffect","link":"#_13-4-1-watch-vs-watcheffect","children":[]}]},{"level":2,"title":"13.5 回调的触发时机","slug":"_13-5-回调的触发时机","link":"#_13-5-回调的触发时机","children":[]},{"level":2,"title":"13.6 停止侦听器","slug":"_13-6-停止侦听器","link":"#_13-6-停止侦听器","children":[]}],"git":{"updatedTime":1684319235000},"readingTime":{"minutes":6.1,"words":1831},"filePathRelative":"note/vue/vue-3/fundamentals/01-fundamentals/01.11.watchers.md","excerpt":"<h1> 13. 侦听器</h1>\\n<h2> 13.1 基本示例</h2>\\n<p>计算属性允许声明性地计算衍生值。</p>\\n<p>然而在有些情况下需要在状态变化时执行一些“副作用”：例如更改 DOM，或是根据异步操作的结果去修改另一处的状态。</p>\\n<p>在组合式 API 中，可以使用 <a href=\\"https://cn.vuejs.org/api/reactivity-core.html#watch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>watch</code> 函数</a>在每次响应式状态发生变化时触发回调函数：</p>\\n<div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">setup</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ref<span class=\\"token punctuation\\">,</span> watch <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n\\n<span class=\\"token keyword\\">const</span> question <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">const</span> answer <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Questions usually contain a question mark. ;-)'</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// 可以直接侦听一个 ref</span>\\n<span class=\\"token function\\">watch</span><span class=\\"token punctuation\\">(</span>question<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">newQuestion<span class=\\"token punctuation\\">,</span> oldQuestion</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>newQuestion<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'?'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    answer<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Thinking...'</span>\\n    <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> <span class=\\"token function\\">fetch</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'https://yesno.wtf/api'</span><span class=\\"token punctuation\\">)</span>\\n      answer<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">await</span> res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">json</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span>answer\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span>error<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      answer<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'Error! Could not reach the API. '</span> <span class=\\"token operator\\">+</span> error\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>\\n    Ask a yes/no question:\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>input</span> <span class=\\"token attr-name\\">v-model</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>question<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token punctuation\\">/&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>{{ answer }}<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>p</span><span class=\\"token punctuation\\">&gt;</span></span>\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>template</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};

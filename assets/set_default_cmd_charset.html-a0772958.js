import{_ as o,Z as p,$ as c,a0 as s,a1 as n,a2 as t,a3 as e,H as i}from"./framework-dee406ed.js";const l={},u=s("h2",{id:"_1-issue-description",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-issue-description","aria-hidden":"true"},"#"),n(" 1. Issue Description")],-1),r={href:"https://github.com/charmbracelet/bubbletea",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/charmbracelet/bubbletea/blob/master/examples/composable-views/main.go",target:"_blank",rel:"noopener noreferrer"},k=e('<h3 id="expected-behavior" tabindex="-1"><a class="header-anchor" href="#expected-behavior" aria-hidden="true">#</a> Expected Behavior</h3><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202312030004290.png" alt="image-20231203000429195" tabindex="0" loading="lazy"><figcaption>image-20231203000429195</figcaption></figure><h3 id="actual-behavior" tabindex="-1"><a class="header-anchor" href="#actual-behavior" aria-hidden="true">#</a> Actual Behavior</h3><figure><img src="https://raw.githubusercontent.com/dreamjz/pics/main/pics/2023/202312022317590.png" alt="image-20231202231658793" tabindex="0" loading="lazy"><figcaption>image-20231202231658793</figcaption></figure><h2 id="_2-what-led-to-this" tabindex="-1"><a class="header-anchor" href="#_2-what-led-to-this" aria-hidden="true">#</a> 2. What led to this?</h2>',5),m={href:"https://github.com/dreamjz/lipgloss",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/charmbracelet/bubbletea/blob/master/examples/composable-views/main.go#L46",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// set render style</span>
modelStyle <span class="token operator">=</span> lipgloss<span class="token punctuation">.</span><span class="token function">NewStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Width</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Height</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Align</span><span class="token punctuation">(</span>lipgloss<span class="token punctuation">.</span>Center<span class="token punctuation">,</span> lipgloss<span class="token punctuation">.</span>Center<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">BorderStyle</span><span class="token punctuation">(</span>lipgloss<span class="token punctuation">.</span><span class="token function">HiddenBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">...</span>
<span class="token comment">// render content</span>
		s <span class="token operator">+=</span> lipgloss<span class="token punctuation">.</span><span class="token function">JoinHorizontal</span><span class="token punctuation">(</span>lipgloss<span class="token punctuation">.</span>Top<span class="token punctuation">,</span> focusedModelStyle<span class="token punctuation">.</span><span class="token function">Render</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%4s&quot;</span><span class="token punctuation">,</span> m<span class="token punctuation">.</span>timer<span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> modelStyle<span class="token punctuation">.</span><span class="token function">Render</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>spinner<span class="token punctuation">.</span><span class="token function">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={href:"https://en.wikipedia.org/wiki/Windows_code_page",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/charmbracelet/lipgloss/blob/master/style.go#L179",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/charmbracelet/lipgloss/blob/master/borders.go#L378",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// github.com/charmbracelet/lipgloss/blob/master/style.go</span>

<span class="token comment">// Render applies the defined style formatting to a given string.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>s Style<span class="token punctuation">)</span> <span class="token function">Render</span><span class="token punctuation">(</span>strs <span class="token operator">...</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
    <span class="token keyword">if</span> <span class="token operator">!</span>inline <span class="token punctuation">{</span>
		str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">applyBorder</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
		str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">applyMargins</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> inline<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>s Style<span class="token punctuation">)</span> <span class="token function">applyBorder</span><span class="token punctuation">(</span>str <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token operator">...</span>
    	<span class="token comment">// Render top</span>
	<span class="token keyword">if</span> hasTop <span class="token punctuation">{</span>
		top <span class="token operator">:=</span> <span class="token function">renderHorizontalEdge</span><span class="token punctuation">(</span>border<span class="token punctuation">.</span>TopLeft<span class="token punctuation">,</span> border<span class="token punctuation">.</span>Top<span class="token punctuation">,</span> border<span class="token punctuation">.</span>TopRight<span class="token punctuation">,</span> width<span class="token punctuation">)</span>
		top <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">styleBorder</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> topFG<span class="token punctuation">,</span> topBG<span class="token punctuation">)</span>
		out<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span>
		out<span class="token punctuation">.</span><span class="token function">WriteRune</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// github.com/charmbracelet/lipgloss/blob/master/borders.go</span>

<span class="token comment">// Render the horizontal (top or bottom) portion of a border.</span>
<span class="token keyword">func</span> <span class="token function">renderHorizontalEdge</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> right <span class="token builtin">string</span><span class="token punctuation">,</span> width <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
	leftWidth <span class="token operator">:=</span> ansi<span class="token punctuation">.</span><span class="token function">PrintableRuneWidth</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>
	rightWidth <span class="token operator">:=</span> ansi<span class="token punctuation">.</span><span class="token function">PrintableRuneWidth</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>

	runes <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span>
	j <span class="token operator">:=</span> <span class="token number">0</span>

	out <span class="token operator">:=</span> strings<span class="token punctuation">.</span>Builder<span class="token punctuation">{</span><span class="token punctuation">}</span>
	out<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> leftWidth <span class="token operator">+</span> rightWidth<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> width<span class="token operator">+</span>rightWidth<span class="token punctuation">;</span> <span class="token punctuation">{</span>
		out<span class="token punctuation">.</span><span class="token function">WriteRune</span><span class="token punctuation">(</span>runes<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
		j<span class="token operator">++</span>
		<span class="token keyword">if</span> j <span class="token operator">&gt;=</span> <span class="token function">len</span><span class="token punctuation">(</span>runes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			j <span class="token operator">=</span> <span class="token number">0</span>
		<span class="token punctuation">}</span>
		i <span class="token operator">+=</span> ansi<span class="token punctuation">.</span><span class="token function">PrintableRuneWidth</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>runes<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	out<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span>

	<span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_={href:"https://github.com/muesli/reflow/blob/master/ansi/buffer.go#L21",target:"_blank",rel:"noopener noreferrer"},y=s("code",null,"─",-1),x={href:"https://github.com/charmbracelet/lipgloss/blob/master/borders.go#L378",target:"_blank",rel:"noopener noreferrer"},W=s("code",null,"─",-1),R=e(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// github.com/muesli/reflow/blob/master/ansi/buffer.go</span>

<span class="token comment">// PrintableRuneWidth returns the cell width of the given string.</span>
<span class="token keyword">func</span> <span class="token function">PrintableRuneWidth</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> n <span class="token builtin">int</span>
	<span class="token keyword">var</span> ansi <span class="token builtin">bool</span>

	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> c <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">{</span>
		<span class="token keyword">if</span> c <span class="token operator">==</span> Marker <span class="token punctuation">{</span>
			<span class="token comment">// ANSI escape sequence</span>
			ansi <span class="token operator">=</span> <span class="token boolean">true</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> ansi <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token function">IsTerminator</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// ANSI sequence terminated</span>
				ansi <span class="token operator">=</span> <span class="token boolean">false</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			n <span class="token operator">+=</span> runewidth<span class="token punctuation">.</span><span class="token function">RuneWidth</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> n
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),S={href:"https://github.com/mattn/go-runewidth/blob/master/runewidth.go#L307",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// github.com/mattn/go-runewidth/blob/master/runewidth.go</span>

<span class="token comment">// RuneWidth returns the number of cells in r.</span>
<span class="token comment">// See http://www.unicode.org/reports/tr11/</span>
<span class="token keyword">func</span> <span class="token function">RuneWidth</span><span class="token punctuation">(</span>r <span class="token builtin">rune</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> DefaultCondition<span class="token punctuation">.</span><span class="token function">RuneWidth</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// RuneWidth returns the number of cells in r.</span>
<span class="token comment">// See http://www.unicode.org/reports/tr11/</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Condition<span class="token punctuation">)</span> <span class="token function">RuneWidth</span><span class="token punctuation">(</span>r <span class="token builtin">rune</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;</span> <span class="token number">0x10FFFF</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token number">0</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>combinedLut<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">int</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>combinedLut<span class="token punctuation">[</span>r<span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token function">uint</span><span class="token punctuation">(</span>r<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// optimized version, verified by TestRuneWidthChecksums()</span>
	<span class="token keyword">if</span> <span class="token operator">!</span>c<span class="token punctuation">.</span>EastAsianWidth <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> r <span class="token operator">&lt;</span> <span class="token number">0x20</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">0</span>
		<span class="token keyword">case</span> <span class="token punctuation">(</span>r <span class="token operator">&gt;=</span> <span class="token number">0x7F</span> <span class="token operator">&amp;&amp;</span> r <span class="token operator">&lt;=</span> <span class="token number">0x9F</span><span class="token punctuation">)</span> <span class="token operator">||</span> r <span class="token operator">==</span> <span class="token number">0xAD</span><span class="token punctuation">:</span> <span class="token comment">// nonprint</span>
			<span class="token keyword">return</span> <span class="token number">0</span>
		<span class="token keyword">case</span> r <span class="token operator">&lt;</span> <span class="token number">0x300</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token keyword">case</span> <span class="token function">inTable</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> narrow<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token keyword">case</span> <span class="token function">inTables</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> nonprint<span class="token punctuation">,</span> combining<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">0</span>
		<span class="token keyword">case</span> <span class="token function">inTable</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> doublewidth<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">2</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token function">inTables</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> nonprint<span class="token punctuation">,</span> combining<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">0</span>
		<span class="token keyword">case</span> <span class="token function">inTable</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> narrow<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token keyword">case</span> <span class="token function">inTables</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> ambiguous<span class="token punctuation">,</span> doublewidth<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">2</span>
		<span class="token keyword">case</span> <span class="token operator">!</span>c<span class="token punctuation">.</span>StrictEmojiNeutral <span class="token operator">&amp;&amp;</span> <span class="token function">inTables</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> ambiguous<span class="token punctuation">,</span> emoji<span class="token punctuation">,</span> narrow<span class="token punctuation">)</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">2</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			<span class="token keyword">return</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>|</code> in GBK will match <code>inTble(r, narrow)</code> in the else block.</p>`,2),B=s("code",null,"narrow",-1),z={href:"https://github.com/mattn/go-runewidth/blob/master/script/generate.go",target:"_blank",rel:"noopener noreferrer"},L={href:"https://home.unicode.org/",target:"_blank",rel:"noopener noreferrer"},q=e(`<h2 id="_3-demo-to-explain-how-it-happened" tabindex="-1"><a class="header-anchor" href="#_3-demo-to-explain-how-it-happened" aria-hidden="true">#</a> 3. Demo to explain how it happened</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/charmbracelet/lipgloss&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> style <span class="token operator">=</span> lipgloss<span class="token punctuation">.</span><span class="token function">NewStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">BorderStyle</span><span class="token punctuation">(</span>lipgloss<span class="token punctuation">.</span><span class="token function">NormalBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">BorderForeground</span><span class="token punctuation">(</span>lipgloss<span class="token punctuation">.</span><span class="token function">Color</span><span class="token punctuation">(</span><span class="token string">&quot;63&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span><span class="token function">Render</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// output</span>
┌───┐
│hello│
└───┘
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Top border render steps:</p><ol><li>Get the horizon length: 7 = 5 + 2 = <code>len(“hello”)</code> + number of vertical border <code>|</code></li><li>Get the middle horizon borders <code>─</code> (its length is 2 in GBK): only 2 <code>─</code> (7-2 % 2), expect 5 (7-2 % 1)</li></ol><h2 id="_4-how-to-solve" tabindex="-1"><a class="header-anchor" href="#_4-how-to-solve" aria-hidden="true">#</a> 4. How to solve</h2><h3 id="get-code-page-of-cmd" tabindex="-1"><a class="header-anchor" href="#get-code-page-of-cmd" aria-hidden="true">#</a> Get code page of <code>cmd</code></h3><p>Use <code>chcp</code> to get the current code page of <code>cmd</code>:</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>&gt; chcp
936
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="change-code-page-to-utf-8-temporarily" tabindex="-1"><a class="header-anchor" href="#change-code-page-to-utf-8-temporarily" aria-hidden="true">#</a> Change code page to UTF-8 Temporarily</h3><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>&gt; chcp 65001
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="set-default-cmd-code-page" tabindex="-1"><a class="header-anchor" href="#set-default-cmd-code-page" aria-hidden="true">#</a> Set default <code>cmd</code> code page</h3><ol><li>Start -&gt; Run -&gt; regedit</li><li>Go to <code>[HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\Autorun]</code></li><li>Change the value to <code>@chcp 65001&gt;nul</code></li></ol><p>If <code>Autorun</code> is not present, you can add a <code>New String</code>.</p><p>This approach will auto-execute <code>@chcp 65001&gt;nul</code> when <code>cmd</code> starts.</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,15),I={href:"https://superuser.com/questions/269818/change-default-code-page-of-windows-console-to-utf-8/269857#269857",target:"_blank",rel:"noopener noreferrer"},C={href:"https://en.wikipedia.org/wiki/Windows_code_page",target:"_blank",rel:"noopener noreferrer"},A={href:"https://github.com/charmbracelet/bubbletea/blob/master/examples/composable-views/main.go#L46",target:"_blank",rel:"noopener noreferrer"},E={href:"https://home.unicode.org/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://github.com/charmbracelet/lipgloss",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/mattn/go-runewidth/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/muesli/reflow",target:"_blank",rel:"noopener noreferrer"};function F(G,P){const a=i("ExternalLinkIcon");return p(),c("div",null,[u,s("p",null,[n("Recently, I started learning "),s("a",r,[n("Bubbletea"),t(a)]),n(". When I reimplemented its example: "),s("a",d,[n("Composable views"),t(a)]),n(", I encountered a problem, the code did not work as expected.")]),k,s("p",null,[n("In the example, it uses "),s("a",m,[n("lipgloss"),t(a)]),n(" to render the content displayed in the terminal (code: "),s("a",b,[n("composable-views: Line46"),t(a)]),n("):")]),v,s("p",null,[n("After debugging, I discovered that the issue was due to the character set of my terminal being set to 936 (GBK). For Windows code page table see "),s("a",h,[n("wiki"),t(a)]),n(".")]),s("p",null,[n("In "),s("a",g,[n("style.Render()"),t(a)]),n(", it uses function "),s("a",f,[n("borders.renderHorizontalEdge"),t(a)]),n(" to render horizon border:")]),w,s("p",null,[n("As code above, "),s("a",_,[n("ansi.PrintableRuneWidth()"),t(a)]),n(" is used to get the width of a rune.")]),s("p",null,[n("The length of "),y,n(" in GBK is 2, so the function "),s("a",x,[n("borders.renderHorizontalEdge"),t(a)]),n(" will print the wrong number of "),W,n("(horizon border).")]),R,s("p",null,[s("a",S,[n("runewidth.RuneWidth()"),t(a)]),n(":")]),T,s("p",null,[n("The table "),B,n(" is generated by "),s("a",z,[n("generate"),t(a)]),n(" according to "),s("a",L,[n("https://home.unicode.org/"),t(a)]),n(".")]),q,s("ol",null,[s("li",null,[s("a",I,[n("https://superuser.com/questions/269818/change-default-code-page-of-windows-console-to-utf-8/269857#269857"),t(a)])]),s("li",null,[s("a",C,[n("https://en.wikipedia.org/wiki/Windows_code_page"),t(a)])]),s("li",null,[s("a",A,[n("https://github.com/charmbracelet/bubbletea/blob/master/examples/composable-views/main.go#L46"),t(a)])]),s("li",null,[s("a",E,[n("https://home.unicode.org/"),t(a)])]),s("li",null,[s("a",N,[n("https://github.com/charmbracelet/lipgloss"),t(a)])]),s("li",null,[s("a",j,[n("https://github.com/mattn/go-runewidth/"),t(a)])]),s("li",null,[s("a",H,[n("https://github.com/muesli/reflow"),t(a)])])])])}const K=o(l,[["render",F],["__file","set_default_cmd_charset.html.vue"]]);export{K as default};

const e=JSON.parse('{"key":"v-24f9ffba","path":"/reading/sc/golang/high-performance-go/01-performance-analysis/01.2.pprof.html","title":"1.2 pporf 性能分析","lang":"zh-CN","frontmatter":{"title":"1.2 pporf 性能分析","date":"2023-10-03T00:00:00.000Z","category":["golang"],"article":false},"headers":[{"level":2,"title":"1. 性能分析类型","slug":"_1-性能分析类型","link":"#_1-性能分析类型","children":[{"level":3,"title":"1.1 CPU 性能分析","slug":"_1-1-cpu-性能分析","link":"#_1-1-cpu-性能分析","children":[]},{"level":3,"title":"1.2 内存性能分析","slug":"_1-2-内存性能分析","link":"#_1-2-内存性能分析","children":[]},{"level":3,"title":"1.3 阻塞性能分析","slug":"_1-3-阻塞性能分析","link":"#_1-3-阻塞性能分析","children":[]},{"level":3,"title":"1.4 锁性能分析","slug":"_1-4-锁性能分析","link":"#_1-4-锁性能分析","children":[]}]},{"level":2,"title":"2. CPU 性能分析","slug":"_2-cpu-性能分析","link":"#_2-cpu-性能分析","children":[{"level":3,"title":"2.1 生成 profile","slug":"_2-1-生成-profile","link":"#_2-1-生成-profile","children":[]},{"level":3,"title":"2.2 分析数据","slug":"_2-2-分析数据","link":"#_2-2-分析数据","children":[]}]},{"level":2,"title":"3. 内存性能分析","slug":"_3-内存性能分析","link":"#_3-内存性能分析","children":[{"level":3,"title":"3.1 生成 profile","slug":"_3-1-生成-profile","link":"#_3-1-生成-profile","children":[]},{"level":3,"title":"3.2 分析数据","slug":"_3-2-分析数据","link":"#_3-2-分析数据","children":[]}]},{"level":2,"title":"4. benchmark 生成 profile","slug":"_4-benchmark-生成-profile","link":"#_4-benchmark-生成-profile","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1701449868000},"readingTime":{"minutes":4.35,"words":1306},"filePathRelative":"reading/sc/golang/high-performance-go/01-performance-analysis/01.2.pprof.md","localizedDate":"2023年10月3日","excerpt":"<p>Benchmark 可以用于测试某个函数的性能，若直到性能的瓶颈的位置，可以使用 benchmark 进行测试。</p>\\n<p>若面对未知的程序则需要使用 pprof 来分析性能的瓶颈，<a href=\\"https://github.com/google/pprof\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pprof</a>包含两个部分：</p>"}');export{e as data};

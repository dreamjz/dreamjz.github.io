const e=JSON.parse('{"key":"v-de9f1ca0","path":"/leetcode/solution/33.search_in_rotated_sorted_array.html","title":"33. Search in Rotated Sorted Array","lang":"zh-CN","frontmatter":{"title":"33. Search in Rotated Sorted Array","date":"2023-09-18T00:00:00.000Z","category":["algorithm"]},"headers":[{"level":2,"title":"1. 二分查找","slug":"_1-二分查找","link":"#_1-二分查找","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1696276197000},"readingTime":{"minutes":1.47,"words":441},"filePathRelative":"leetcode/solution/33.search_in_rotated_sorted_array.md","localizedDate":"2023年9月18日","excerpt":"<p><a href=\\"https://leetcode.cn/problems/search-in-rotated-sorted-array/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">33. 搜索旋转排序数组</a></p>\\n<blockquote>\\n<p>整数数组 <code>nums</code> 按升序排列，数组中的值 <strong>互不相同</strong> 。</p>\\n<p>在传递给函数之前，<code>nums</code> 在预先未知的某个下标 <code>k</code>（<code>0 &lt;= k &lt; nums.length</code>）上进行了 <strong>旋转</strong>，使数组变为 <code>[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]</code>（下标 <strong>从 0 开始</strong> 计数）。例如， <code>[0,1,2,4,5,6,7]</code> 在下标 <code>3</code> 处经旋转后可能变为 <code>[4,5,6,7,0,1,2]</code> 。</p>\\n<p>给你 <strong>旋转后</strong> 的数组 <code>nums</code> 和一个整数 <code>target</code> ，如果 <code>nums</code> 中存在这个目标值 <code>target</code> ，则返回它的下标，否则返回 <code>-1</code> 。</p>\\n<p>你必须设计一个时间复杂度为 <code>O(log n)</code> 的算法解决此问题。</p>\\n<p><strong>示例 1：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [4,5,6,7,0,1,2], target = 0\\n输出：4\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 2：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [4,5,6,7,0,1,2], target = 3\\n输出：-1\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>示例 3：</strong></p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>输入：nums = [1], target = 0\\n输出：-1\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><strong>提示：</strong></p>\\n<ul>\\n<li><code>1 &lt;= nums.length &lt;= 5000</code></li>\\n<li><code>-10^4 &lt;= nums[i] &lt;= 10^4</code></li>\\n<li><code>nums</code> 中的每个值都 <strong>独一无二</strong></li>\\n<li>题目数据保证 <code>nums</code> 在预先未知的某个下标上进行了旋转</li>\\n<li><code>-10^4 &lt;= target &lt;= 10^4</code></li>\\n</ul>\\n</blockquote>"}');export{e as data};

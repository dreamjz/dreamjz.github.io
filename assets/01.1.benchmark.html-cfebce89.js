const n=JSON.parse('{"key":"v-a9da6580","path":"/reading/golang/high-performance-go/01-performance-analysis/01.1.benchmark.html","title":"1.1 Benchmark","lang":"zh-CN","frontmatter":{"title":"1.1 Benchmark","date":"2023-10-03T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"1. Benchmark 的使用","slug":"_1-benchmark-的使用","link":"#_1-benchmark-的使用","children":[{"level":3,"title":"1.1 示例：Fibonacci 数列","slug":"_1-1-示例-fibonacci-数列","link":"#_1-1-示例-fibonacci-数列","children":[]},{"level":3,"title":"1.2 运行 Benchmark","slug":"_1-2-运行-benchmark","link":"#_1-2-运行-benchmark","children":[]},{"level":3,"title":"1.3 Benchmark 如何工作","slug":"_1-3-benchmark-如何工作","link":"#_1-3-benchmark-如何工作","children":[]},{"level":3,"title":"1.4 提升准确度","slug":"_1-4-提升准确度","link":"#_1-4-提升准确度","children":[]},{"level":3,"title":"1.5 内存分配情况","slug":"_1-5-内存分配情况","link":"#_1-5-内存分配情况","children":[]},{"level":3,"title":"1.6 测试不同的输入","slug":"_1-6-测试不同的输入","link":"#_1-6-测试不同的输入","children":[]}]},{"level":2,"title":"2. 注意事项","slug":"_2-注意事项","link":"#_2-注意事项","children":[{"level":3,"title":"2.1 ResetTimer","slug":"_2-1-resettimer","link":"#_2-1-resettimer","children":[]},{"level":3,"title":"2.2 StopTimer & StartTimer","slug":"_2-2-stoptimer-starttimer","link":"#_2-2-stoptimer-starttimer","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":3.86,"words":1159},"filePathRelative":"reading/golang/high-performance-go/01-performance-analysis/01.1.benchmark.md","localizedDate":"2023年10月3日","excerpt":"<h2> 1. Benchmark 的使用</h2>\\n<h3> 1.1 示例：Fibonacci 数列</h3>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token comment\\">// fib.go</span>\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">fib</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token builtin\\">int</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">if</span> n <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span> n <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">return</span> <span class=\\"token number\\">1</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token function\\">fib</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">fib</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token operator\\">-</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

import{_ as o,Z as l,$ as n,a0 as e,a1 as t,a2 as a,a3 as i,H as s}from"./framework-09afcf0b.js";const d={},c=i('<h2 id="_1-orm" tabindex="-1"><a class="header-anchor" href="#_1-orm" aria-hidden="true">#</a> 1. ORM</h2><p>对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，将面向对象语言程序中的对象自动持久化到关系数据库中。</p><table><thead><tr><th style="text-align:left;">数据库</th><th style="text-align:left;">面向对象的编程语言</th></tr></thead><tbody><tr><td style="text-align:left;">表(table)</td><td style="text-align:left;">类(class/struct)</td></tr><tr><td style="text-align:left;">记录(record, row)</td><td style="text-align:left;">对象 (object)</td></tr><tr><td style="text-align:left;">字段(field, column)</td><td style="text-align:left;">对象属性(attribute)</td></tr></tbody></table><h2 id="_2-orm-框架" tabindex="-1"><a class="header-anchor" href="#_2-orm-框架" aria-hidden="true">#</a> 2. ORM 框架</h2><p>ORM 框架相当于对象和数据库中间的一个桥梁，借助 ORM 可以避免写繁琐的 SQL 语言，仅仅通过操作具体的对象，就能够完成对关系型数据库的操作。</p><p>因为ORM框架是通用的，需要将任何对象转换成数据库记录，此时需要用到 Golang 的<strong>反射</strong>机制来实现。</p><p>此外，设计框架需要考虑诸多问题：</p><ol><li>如何适配不同的数据库</li><li>若对象发生改变，能否自动更新数据表，即数据库的自动迁移(migrate)</li><li>如何支持事物(transaction)</li><li>...</li></ol><h2 id="_3-geeorm" tabindex="-1"><a class="header-anchor" href="#_3-geeorm" aria-hidden="true">#</a> 3. GeeORM</h2>',9),h={href:"https://github.com/jinzhu/gorm",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/go-xorm/xorm",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"reference",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),t(" Reference")],-1),m={href:"https://geektutu.com/post/geeorm.html",target:"_blank",rel:"noopener noreferrer"};function p(g,u){const r=s("ExternalLinkIcon");return l(),n("div",null,[c,e("p",null,[t("参照 "),e("a",h,[t("gorm"),a(r)]),t(" 和 "),e("a",_,[t("xorm"),a(r)]),t(" 实现基础功能。")]),f,e("ol",null,[e("li",null,[e("a",m,[t("https://geektutu.com/post/geeorm.html"),a(r)])])])])}const b=o(d,[["render",p],["__file","03.0.preface.html.vue"]]);export{b as default};

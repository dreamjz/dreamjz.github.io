const n=JSON.parse('{"key":"v-4242d329","path":"/reading/golang/concurrency-in-go/01.overview.html","title":"1. 并发概述","lang":"zh-CN","frontmatter":{"title":"1. 并发概述","date":"2023-09-27T00:00:00.000Z","category":["golang"]},"headers":[{"level":2,"title":"1.1 竞争","slug":"_1-1-竞争","link":"#_1-1-竞争","children":[]},{"level":2,"title":"1.2 原子性","slug":"_1-2-原子性","link":"#_1-2-原子性","children":[]},{"level":2,"title":"1.3 临界区","slug":"_1-3-临界区","link":"#_1-3-临界区","children":[]},{"level":2,"title":"1.4 死锁、活锁和饥饿","slug":"_1-4-死锁、活锁和饥饿","link":"#_1-4-死锁、活锁和饥饿","children":[{"level":3,"title":"死锁(deadlock)","slug":"死锁-deadlock","link":"#死锁-deadlock","children":[]},{"level":3,"title":"活锁(livelock)","slug":"活锁-livelock","link":"#活锁-livelock","children":[]},{"level":3,"title":"饥饿(starvation)","slug":"饥饿-starvation","link":"#饥饿-starvation","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"readingTime":{"minutes":4.37,"words":1310},"filePathRelative":"reading/golang/concurrency-in-go/01.overview.md","localizedDate":"2023年9月27日","excerpt":"<h2> 1.1 竞争</h2>\\n<p>当两个或多个操作必须按正确的顺序执行，而程序未保证这个顺序，将会发生<strong>竞争</strong>。</p>\\n<p>例如：</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">competition</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">var</span> data <span class=\\"token builtin\\">int</span>\\n\\t<span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tdata<span class=\\"token operator\\">++</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\n\\t<span class=\\"token keyword\\">if</span> data <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"the value is %v.\\\\n\\"</span><span class=\\"token punctuation\\">,</span> data<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

const n=JSON.parse('{"key":"v-3f991c79","path":"/note/golang/open-source-books/the-way-to-go/06/06.7.html","title":"6.7 函数作为参数","lang":"zh-CN","frontmatter":{},"headers":[],"readingTime":{"minutes":0.29,"words":88},"filePathRelative":"note/golang/open-source-books/the-way-to-go/06/06.7.md","excerpt":"<h1> 6.7 函数作为参数</h1>\\n<p>函数可以作为其它函数的参数进行传递，然后在其它函数内调用执行，一般称之为回调。</p>\\n<p><a href=\\"https://github.com/dreamjz/golang-notes/tree/main/open-source-books/the-way-to-go/chapter-06/06_7_function_param.go\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">06_7_function_param.go</a></p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">funcParam</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">callBack</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> Add<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">Add</span><span class=\\"token punctuation\\">(</span>a<span class=\\"token punctuation\\">,</span> b <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"%d + %d = %d\\\\n\\"</span><span class=\\"token punctuation\\">,</span> a<span class=\\"token punctuation\\">,</span> b<span class=\\"token punctuation\\">,</span> a<span class=\\"token operator\\">+</span>b<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">callBack</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> f <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// 1 + 2 = 3</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

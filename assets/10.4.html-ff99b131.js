const n=JSON.parse('{"key":"v-2c652d88","path":"/note/golang/open-source-books/the-way-to-go/10/10.4.html","title":"10.4 带标签的结构体","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":0.22,"words":66},"filePathRelative":"note/golang/open-source-books/the-way-to-go/10/10.4.md","excerpt":"<h1> 10.4 带标签的结构体</h1>\\n<p><strong>标签(tag)</strong>： 附属于字段的字符串，只能通过<code>reflect</code>包访问。</p>\\n<p>​\\t<a href=\\"path/10_4_struct_tag.go\\">10_4_struct_tag.go</a></p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> TagType <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tf1 <span class=\\"token builtin\\">int</span>  <span class=\\"token string\\">\\"Field01\\"</span>\\n\\tf2 <span class=\\"token builtin\\">bool</span> <span class=\\"token string\\">\\"Field02\\"</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">structag</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\ttt <span class=\\"token operator\\">:=</span> TagType<span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\t<span class=\\"token function\\">refTag</span><span class=\\"token punctuation\\">(</span>tt<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token function\\">refTag</span><span class=\\"token punctuation\\">(</span>tt<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">refTag</span><span class=\\"token punctuation\\">(</span>tt TagType<span class=\\"token punctuation\\">,</span> i <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tttType <span class=\\"token operator\\">:=</span> reflect<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">TypeOf</span><span class=\\"token punctuation\\">(</span>tt<span class=\\"token punctuation\\">)</span>\\n\\tf <span class=\\"token operator\\">:=</span> ttType<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Field</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span>f<span class=\\"token punctuation\\">.</span>Tag<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};

const e=JSON.parse('{"key":"v-42a3abfb","path":"/note/golang/open-source-books/the-way-to-go/04/04.5.html","title":"4.5 基本类型和运算符","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"4.5.1 布尔型 bool","slug":"_4-5-1-布尔型-bool","link":"#_4-5-1-布尔型-bool","children":[{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]}]},{"level":2,"title":"4.5.2 数字类型","slug":"_4-5-2-数字类型","link":"#_4-5-2-数字类型","children":[{"level":3,"title":"整型和浮点型","slug":"整型和浮点型","link":"#整型和浮点型","children":[]},{"level":3,"title":"复数","slug":"复数","link":"#复数","children":[]},{"level":3,"title":"位运算","slug":"位运算","link":"#位运算","children":[]},{"level":3,"title":"逻辑运算","slug":"逻辑运算","link":"#逻辑运算","children":[]},{"level":3,"title":"算数运算","slug":"算数运算","link":"#算数运算","children":[]}]},{"level":2,"title":"4.5.3 字符","slug":"_4-5-3-字符","link":"#_4-5-3-字符","children":[]}],"git":{"updatedTime":1684038853000},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"note/golang/open-source-books/the-way-to-go/04/04.5.md","excerpt":"<h1> 4.5 基本类型和运算符</h1>\\n<h2> 4.5.1 布尔型 bool</h2>\\n<ul>\\n<li>值：<code>true</code> 或 <code>false</code></li>\\n</ul>\\n<h3> 逻辑运算符</h3>\\n<h4> <code>==</code> 和 <code>!=</code></h4>\\n<p>只有类型相同的值才能进行比较（若为 <code>interface</code> 则需要实现相同的接口)。</p>\\n<p>Golang 没有隐式类型转换，所有类型转换需要进行显示说明。</p>\\n<h4> <code>!</code> 逻辑 非</h4>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token operator\\">!</span>T <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">false</span>\\n<span class=\\"token operator\\">!</span>F <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token boolean\\">true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};

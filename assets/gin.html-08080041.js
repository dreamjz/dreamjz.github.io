const e=JSON.parse(`{"key":"v-959407fc","path":"/note/golang/gin.html","title":"Gin Web Framework","lang":"zh-CN","frontmatter":{"title":"Gin Web Framework","date":"2021-11-23T00:00:00.000Z","category":["golang"],"tag":["gin"],"timeline":true,"article":false},"headers":[{"level":2,"title":"1. Introduction","slug":"_1-introduction","link":"#_1-introduction","children":[]},{"level":2,"title":"2. Installation","slug":"_2-installation","link":"#_2-installation","children":[]},{"level":2,"title":"3. Quick Start","slug":"_3-quick-start","link":"#_3-quick-start","children":[]},{"level":2,"title":"4. API Examples","slug":"_4-api-examples","link":"#_4-api-examples","children":[{"level":3,"title":"4.1 Using GET,POST,PUT,PATCH,DELETE and OPTIONS","slug":"_4-1-using-get-post-put-patch-delete-and-options","link":"#_4-1-using-get-post-put-patch-delete-and-options","children":[]},{"level":3,"title":"4.2 Parameters in path","slug":"_4-2-parameters-in-path","link":"#_4-2-parameters-in-path","children":[]},{"level":3,"title":"4.3 QueryString parameters","slug":"_4-3-querystring-parameters","link":"#_4-3-querystring-parameters","children":[]},{"level":3,"title":"4.4 Multipart/Urlencoded Form","slug":"_4-4-multipart-urlencoded-form","link":"#_4-4-multipart-urlencoded-form","children":[]},{"level":3,"title":"4.5 Query + post form","slug":"_4-5-query-post-form","link":"#_4-5-query-post-form","children":[]},{"level":3,"title":"4.6 Map as querystring or postform parameters","slug":"_4-6-map-as-querystring-or-postform-parameters","link":"#_4-6-map-as-querystring-or-postform-parameters","children":[]},{"level":3,"title":"4.7 Upload files","slug":"_4-7-upload-files","link":"#_4-7-upload-files","children":[]},{"level":3,"title":"4.8 Grouping routes","slug":"_4-8-grouping-routes","link":"#_4-8-grouping-routes","children":[]},{"level":3,"title":"4.9 Using middleware","slug":"_4-9-using-middleware","link":"#_4-9-using-middleware","children":[]},{"level":3,"title":"4.10 Model binding and validation","slug":"_4-10-model-binding-and-validation","link":"#_4-10-model-binding-and-validation","children":[]},{"level":3,"title":"4.11 XML, JSON, YAML, and ProtoBuf rendering","slug":"_4-11-xml-json-yaml-and-protobuf-rendering","link":"#_4-11-xml-json-yaml-and-protobuf-rendering","children":[]},{"level":3,"title":"4.12 Serving static files","slug":"_4-12-serving-static-files","link":"#_4-12-serving-static-files","children":[]},{"level":3,"title":"4.13 Serving data from file","slug":"_4-13-serving-data-from-file","link":"#_4-13-serving-data-from-file","children":[]},{"level":3,"title":"4.14 Serving data from reader","slug":"_4-14-serving-data-from-reader","link":"#_4-14-serving-data-from-reader","children":[]},{"level":3,"title":"4.15 HTML rendering","slug":"_4-15-html-rendering","link":"#_4-15-html-rendering","children":[]},{"level":3,"title":"4.16  Redirects","slug":"_4-16-redirects","link":"#_4-16-redirects","children":[]},{"level":3,"title":"4.17 Custom Middleware","slug":"_4-17-custom-middleware","link":"#_4-17-custom-middleware","children":[]},{"level":3,"title":"4.18 Custome HTTP configuration","slug":"_4-18-custome-http-configuration","link":"#_4-18-custome-http-configuration","children":[]},{"level":3,"title":"4.19 Support Let’s Encrypt","slug":"_4-19-support-let-s-encrypt","link":"#_4-19-support-let-s-encrypt","children":[]},{"level":3,"title":"4.20 Run multiple service using Gin","slug":"_4-20-run-multiple-service-using-gin","link":"#_4-20-run-multiple-service-using-gin","children":[]},{"level":3,"title":"4.21 Graceful shutdown or restart","slug":"_4-21-graceful-shutdown-or-restart","link":"#_4-21-graceful-shutdown-or-restart","children":[]},{"level":3,"title":"4.22 Build a single binary with templates","slug":"_4-22-build-a-single-binary-with-templates","link":"#_4-22-build-a-single-binary-with-templates","children":[]},{"level":3,"title":"4.23 Bind form-data request with custom struct","slug":"_4-23-bind-form-data-request-with-custom-struct","link":"#_4-23-bind-form-data-request-with-custom-struct","children":[]},{"level":3,"title":"4.24 Try to bind body into different structs","slug":"_4-24-try-to-bind-body-into-different-structs","link":"#_4-24-try-to-bind-body-into-different-structs","children":[]},{"level":3,"title":"4.25 Bind form-data request with custom struct and custom tag","slug":"_4-25-bind-form-data-request-with-custom-struct-and-custom-tag","link":"#_4-25-bind-form-data-request-with-custom-struct-and-custom-tag","children":[]},{"level":3,"title":"4.26 http2 server push","slug":"_4-26-http2-server-push","link":"#_4-26-http2-server-push","children":[]},{"level":3,"title":"4.27 Define format for the log of routes","slug":"_4-27-define-format-for-the-log-of-routes","link":"#_4-27-define-format-for-the-log-of-routes","children":[]},{"level":3,"title":"4.28 Set and get a cookie","slug":"_4-28-set-and-get-a-cookie","link":"#_4-28-set-and-get-a-cookie","children":[]}]},{"level":2,"title":"5. Don't trust all proxies","slug":"_5-don-t-trust-all-proxies","link":"#_5-don-t-trust-all-proxies","children":[]},{"level":2,"title":"6. Testing","slug":"_6-testing","link":"#_6-testing","children":[]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1699943930000},"readingTime":{"minutes":30.71,"words":9212},"filePathRelative":"note/golang/gin.md","localizedDate":"2021年11月23日","excerpt":"<p>参考 Gin 官方文档，记录学习 Gin 的笔记</p>\\n<h2> 1. Introduction</h2>\\n<p>Gin is a web framework written in GO. It features a martini-like API with performance that is up to 40 times faster thanks to <a href=\\"https://github.com/julienschmidt/httprouter\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">httprouter</a>.</p>"}`);export{e as data};

const e=JSON.parse('{"key":"v-1d8fcf37","path":"/reading/en/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.4.html","title":"Elementary List Processing","lang":"zh-CN","frontmatter":{"title":"Elementary List Processing","date":"2022-01-28T00:00:00.000Z","category":["algorithm","data structure"],"tag":["linked list"],"timeline":true},"headers":[{"level":2,"title":"1. Definition","slug":"_1-definition","link":"#_1-definition","children":[]},{"level":2,"title":"2. List Processing","slug":"_2-list-processing","link":"#_2-list-processing","children":[{"level":3,"title":"2.1 Traverse","slug":"_2-1-traverse","link":"#_2-1-traverse","children":[]},{"level":3,"title":"2.2 List Reversal","slug":"_2-2-list-reversal","link":"#_2-2-list-reversal","children":[]},{"level":3,"title":"2.3 List Insertion Sort","slug":"_2-3-list-insertion-sort","link":"#_2-3-list-insertion-sort","children":[]}]},{"level":2,"title":"3. Head and tail conventions in linked lists","slug":"_3-head-and-tail-conventions-in-linked-lists","link":"#_3-head-and-tail-conventions-in-linked-lists","children":[{"level":3,"title":"3.1 Circular, never empty","slug":"_3-1-circular-never-empty","link":"#_3-1-circular-never-empty","children":[]},{"level":3,"title":"3.2 Head pointer, null tail","slug":"_3-2-head-pointer-null-tail","link":"#_3-2-head-pointer-null-tail","children":[]},{"level":3,"title":"3.3 Dummy head node, null tail","slug":"_3-3-dummy-head-node-null-tail","link":"#_3-3-dummy-head-node-null-tail","children":[]},{"level":3,"title":"3.4 Dummy head and tail nodes","slug":"_3-4-dummy-head-and-tail-nodes","link":"#_3-4-dummy-head-and-tail-nodes","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"updatedTime":1701449868000},"readingTime":{"minutes":4.64,"words":1393},"filePathRelative":"reading/en/algorithm/algorithms_in_c_part_1-4/02_data_structures/03.4.md","localizedDate":"2022年1月28日","excerpt":"<p>With arrays and structures, we save an item in memory and later refer to it by name (or by index); with linked lists, the manner in which we save information makes it more difficult to access but easier to rearrange.</p>"}');export{e as data};

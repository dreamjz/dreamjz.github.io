import{_ as n,Z as s,$ as a,a3 as e}from"./framework-dee406ed.js";const t={},o=e(`<h1 id="_6-10-使用闭包调试" tabindex="-1"><a class="header-anchor" href="#_6-10-使用闭包调试" aria-hidden="true">#</a> 6.10 使用闭包调试</h1><p><a href="path/06_10_debug_func.go">06_10_debug_func.go</a></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">debugf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	where <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">Caller</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s:%d&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>runtime.Caller(skip int)</code>: skip 表示跳过调用栈的层数，0表示<code>Caller</code>本身调用的位置。</li></ul><p>可以直接使用<code>log</code>包进行调试：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// 设置flag， 此处表示需要打印完整文件路径</span>
log<span class="token punctuation">.</span><span class="token function">SetFlag</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>Llongfile<span class="token punctuation">)</span>
log<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p=[o];function c(l,i){return s(),a("div",null,p)}const d=n(t,[["render",c],["__file","06.10.html.vue"]]);export{d as default};
